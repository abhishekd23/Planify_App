com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver
io.flutter.embedding.engine.FlutterJNI
io.flutter.embedding.engine.FlutterOverlaySurface
androidx.media.AudioAttributesImplApi26
androidx.core.graphics.drawable.IconCompat
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency
android.support.v4.media.session.MediaSessionCompat$Token
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
android.support.v4.media.MediaMetadataCompat
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails
com.dexterous.flutterlocalnotifications.NotificationStyle
io.flutter.view.AccessibilityViewEmbedder
com.example.todo_app_new.MainActivity
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation
androidx.media.AudioAttributesImplApi21Parcelizer
android.support.v4.media.MediaBrowserCompat$ItemReceiver
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
android.support.v4.app.RemoteActionCompatParcelizer
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation
androidx.media.AudioAttributesCompat
com.dexterous.flutterlocalnotifications.models.MessageDetails
com.dexterous.flutterlocalnotifications.BitmapSource
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.media.AudioAttributesImplApi26Parcelizer
androidx.media.AudioAttributesImplBase
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation
androidx.media.AudioAttributesImplApi21
androidx.activity.ComponentActivity$3
io.flutter.plugin.platform.SingleViewPresentation
androidx.core.graphics.drawable.IconCompatParcelizer
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.core.app.RemoteActionCompatParcelizer
com.dexterous.flutterlocalnotifications.SoundSource
io.flutter.view.FlutterCallbackInformation
androidx.fragment.app.Fragment$2
android.support.v4.media.session.ParcelableVolumeInfo
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
android.support.v4.media.session.MediaSessionCompat$QueueItem
com.dexterous.flutterlocalnotifications.models.PersonDetails
android.support.v4.media.session.PlaybackStateCompat$CustomAction
androidx.media.AudioAttributesCompatParcelizer
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
com.dexterous.flutterlocalnotifications.RepeatInterval
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation
io.flutter.embedding.android.FlutterSplashView$SavedState
androidx.annotation.Keep
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails
com.dexterous.flutterlocalnotifications.models.Time
androidx.lifecycle.LiveData$LifecycleBoundObserver
android.support.v4.media.AudioAttributesImplBaseParcelizer
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction
androidx.lifecycle.Lifecycling$1
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.dexterous.flutterlocalnotifications.models.DateTimeComponents
androidx.core.app.RemoteActionCompat
io.flutter.plugins.GeneratedPluginRegistrant
androidx.savedstate.Recreator
com.dexterous.flutterlocalnotifications.utils.StringUtils
androidx.core.app.CoreComponentFactory
android.support.v4.media.session.PlaybackStateCompat
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver
android.support.v4.media.AudioAttributesImplApi26Parcelizer
androidx.lifecycle.FullLifecycleObserverAdapter
android.support.v4.media.MediaBrowserCompat$MediaItem
android.support.v4.media.MediaDescriptionCompat
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation
androidx.activity.ImmLeaksCleaner
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin
android.support.v4.media.AudioAttributesCompatParcelizer
com.dexterous.flutterlocalnotifications.models.IconSource
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.activity.ComponentActivity$2
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.versionedparcelable.ParcelImpl
android.support.v4.media.RatingCompat
androidx.versionedparcelable.CustomVersionedParcelable
com.dexterous.flutterlocalnotifications.models.NotificationDetails
com.dexterous.flutterlocalnotifications.utils.BooleanUtils
androidx.savedstate.SavedStateRegistry$1
android.support.v4.media.AudioAttributesImplApi21Parcelizer
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory
androidx.media.AudioAttributesImplBaseParcelizer
androidx.core.app.NotificationCompat$Builder: boolean mUseChronometer
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLATFORM_SPECIFICS
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String mPrefix
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long when
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField HOUR_OF_AMPM
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
android.support.v4.media.MediaDescriptionCompat$Builder: java.lang.String mMediaId
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES
android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence mTitle
com.google.gson.internal.LinkedTreeMap$KeySet: com.google.gson.internal.LinkedTreeMap this$0
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String aotSharedLibraryName
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit NANOS
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String summaryText
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime NOON
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mListeners
io.flutter.view.AccessibilityBridge: io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime[] HOURS
com.google.gson.internal.LinkedTreeMap: int size
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String METHOD_CHANNEL
androidx.media.AudioAttributesImplBase$Builder: int mContentType
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mToStringCache
com.google.gson.internal.ConstructorConstructor$12: com.google.gson.internal.ConstructorConstructor this$0
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction CreateIfNotExists
org.threeten.bp.zone.StandardZoneRules: org.threeten.bp.ZoneOffset[] wallOffsets
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: float screenDensity
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIME_ZONE_NAME
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_ALPHA
org.threeten.bp.format.DateTimePrintContext$1: org.threeten.bp.ZoneId val$effectiveZone
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatBody
org.threeten.bp.ZoneRegion: org.threeten.bp.zone.ZoneRules rules
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$TextDirection textDirection
androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred
com.google.gson.stream.JsonWriter: boolean lenient
org.threeten.bp.chrono.HijrahDate: int[] LEAP_MONTH_LENGTH
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField ALIGNED_DAY_OF_WEEK_IN_YEAR
com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object key
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String GROUP_ID
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String FULL_SCREEN_INTENT
io.flutter.Log: int WARN
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] $VALUES
androidx.core.app.Person: java.lang.String mUri
android.support.v4.media.MediaDescriptionCompat$Builder: android.net.Uri mIconUri
androidx.core.app.NotificationCompat$Builder: boolean mChronometerCountDown
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.reflect.ReflectionAccessor accessor
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDate date
io.flutter.view.VsyncWaiter: android.view.WindowManager windowManager
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int deviceId
android.support.v4.media.session.PlaybackStateCompat: long mUpdateTime
com.google.gson.internal.LinkedTreeMap: boolean $assertionsDisabled
org.threeten.bp.zone.ZoneRulesProvider: java.util.concurrent.CopyOnWriteArrayList PROVIDERS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer color
org.threeten.bp.LocalTime: byte hour
io.flutter.embedding.android.FlutterView$3: io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] $VALUES
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: java.lang.ref.WeakReference mCallback
androidx.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime MAX
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingStart
androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive
com.google.gson.internal.ConstructorConstructor$7: com.google.gson.internal.ConstructorConstructor this$0
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Service service
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMessageCodec messageCodec
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
androidx.collection.MapCollections: androidx.collection.MapCollections$KeySet mKeySet
org.threeten.bp.format.DateTimeParseException: int errorIndex
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.plugin.platform.PlatformPlugin platformPlugin
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser INSENSITIVE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_PROGRESS
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node header
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String ID
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra[] $VALUES
androidx.core.R$id: int time
androidx.collection.MapCollections$ArrayIterator: int mSize
org.threeten.bp.zone.TzdbZoneRulesProvider$Version: java.util.concurrent.atomic.AtomicReferenceArray ruleData
com.google.gson.internal.ConstructorConstructor$5: java.lang.reflect.Type val$type
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_WEEK_DATE
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES
androidx.core.app.NotificationCompatBuilder: int mGroupAlertBehavior
com.google.gson.Gson: com.google.gson.LongSerializationPolicy longSerializationPolicy
org.threeten.bp.ZoneOffset: java.util.concurrent.ConcurrentMap ID_CACHE
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit SECONDS
androidx.media.R$id: int end_padder
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INITIALIZE_METHOD
androidx.collection.ContainerHelpers: java.lang.Object[] EMPTY_OBJECTS
androidx.lifecycle.Lifecycling$1: androidx.lifecycle.LifecycleEventObserver val$observer
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetBottom
androidx.savedstate.Recreator: androidx.savedstate.SavedStateRegistryOwner mOwner
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahEra era
io.flutter.Log: int DEBUG
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BIT_SET
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection RTL
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousActions
com.google.gson.Gson$FutureTypeAdapter: com.google.gson.TypeAdapter delegate
io.flutter.plugin.editing.FlutterTextUtils: io.flutter.embedding.engine.FlutterJNI flutterJNI
org.threeten.bp.format.DateTimeFormatterBuilder: java.util.Comparator LENGTH_SORT
org.threeten.bp.zone.StandardZoneRules: org.threeten.bp.zone.ZoneOffsetTransitionRule[] lastRules
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean globalGeometryDirty
io.flutter.plugin.platform.VirtualDisplayController: android.hardware.display.VirtualDisplay virtualDisplay
com.google.gson.Gson: java.util.List builderHierarchyFactories
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel channel
com.google.gson.internal.bind.TypeAdapters$26$1: com.google.gson.internal.bind.TypeAdapters$26 this$0
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.util.ArrayList lines
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField PROLEPTIC_MONTH
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ContentUri
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] $VALUES
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LINK
org.threeten.bp.format.DateTimeBuilder: java.util.Map fieldValues
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
io.flutter.embedding.android.DrawableSplashScreen: android.graphics.drawable.Drawable drawable
org.threeten.bp.Duration: org.threeten.bp.Duration ZERO
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter FLOAT
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node next
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mSubText
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TITLE
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigText
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit MINUTES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ACTION
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
io.flutter.plugin.common.StandardMessageCodec: io.flutter.plugin.common.StandardMessageCodec INSTANCE
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl registry
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseEra era
org.threeten.bp.format.DateTimeParseContext: java.util.Locale locale
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY
io.flutter.embedding.android.DrawableSplashScreen$1: java.lang.Runnable val$onTransitionComplete
android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession mExtraBinder
androidx.core.R$dimen: int compat_notification_large_icon_max_height
io.flutter.view.AccessibilityBridge: int FIRST_RESOURCE_ID
androidx.core.app.Person$Builder: java.lang.String mKey
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String SECOND
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_SELECTION
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarDividerColor
org.threeten.bp.chrono.JapaneseEra: org.threeten.bp.chrono.JapaneseEra HEISEI
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String CHANNEL_ACTION
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField MILLI_OF_SECOND
com.google.gson.internal.bind.TypeAdapters$35: com.google.gson.TypeAdapter val$typeAdapter
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
com.google.gson.stream.JsonWriter: java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder active
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES
androidx.media.R$layout: int notification_template_big_media
io.flutter.plugin.platform.SingleViewPresentation: int viewId
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill
io.flutter.embedding.engine.dart.DartMessenger: int nextReplyId
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean showBadge
org.threeten.bp.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: java.lang.String literal
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VIBRATION_PATTERN
io.flutter.plugin.editing.TextInputPlugin$2: boolean val$isAffine
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: java.lang.String text
com.google.gson.internal.bind.TypeAdapters$36: int[] $SwitchMap$com$google$gson$stream$JsonToken
org.threeten.bp.zone.TzdbZoneRulesProvider$Version: short[] ruleIndices
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PENDING_NOTIFICATION_REQUESTS_METHOD
org.threeten.bp.chrono.HijrahChronology: java.util.HashMap ERA_NARROW_NAMES
org.threeten.bp.chrono.ChronoDateImpl$1: int[] $SwitchMap$org$threeten$bp$temporal$ChronoUnit
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] $VALUES
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.Person mPerson
org.threeten.bp.format.DateTimeFormatterBuilder: int valueParserIndex
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String body
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CHARACTER
androidx.core.app.NotificationCompat$BigPictureStyle: android.graphics.Bitmap mBigLargeIcon
androidx.core.R$id: int icon
org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset MAX
com.google.gson.internal.bind.TypeAdapters$35$1: com.google.gson.internal.bind.TypeAdapters$35 this$0
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ID
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides LEFT
androidx.core.app.NotificationManagerCompat$CancelTask: boolean all
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer statusBarColor
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
androidx.media.AudioAttributesImplBase: int mLegacyStream
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableSuggestions
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler eventResponseHandler
io.flutter.plugin.editing.TextInputPlugin$InputTarget: int id
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName
com.google.gson.internal.UnsafeAllocator$1: java.lang.Object val$unsafe
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean indeterminate
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean setAsGroupSummary
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.android.FlutterImageView$SurfaceKind kind
androidx.core.R$drawable: int notification_bg_low
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
com.google.gson.stream.JsonReader: java.lang.String peekedString
org.threeten.bp.Period: int days
androidx.media.AudioAttributesImplBase: int mUsage
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type upperBound
org.threeten.bp.Month: org.threeten.bp.Month APRIL
com.google.gson.stream.JsonReader: int[] pathIndices
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree: int length
org.threeten.bp.format.DateTimeParseContext$Parsed: org.threeten.bp.format.DateTimeParseContext this$0
androidx.core.R$id: int right_side
org.threeten.bp.Duration: long seconds
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointLibrary
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: java.lang.String encodedName
androidx.core.app.NotificationCompat$Action: androidx.core.graphics.drawable.IconCompat mIcon
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer minute
android.support.v4.media.MediaDescriptionCompat$Builder: android.graphics.Bitmap mIcon
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener isolateServiceIdListener
com.google.gson.internal.Excluder$1: com.google.gson.TypeAdapter delegate
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: android.view.KeyEvent event
androidx.core.app.NotificationCompat$MessagingStyle: java.util.List mMessages
com.google.gson.internal.ConstructorConstructor$1: com.google.gson.internal.ConstructorConstructor this$0
org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser: int maxWidth
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle[] $VALUES
org.threeten.bp.format.DecimalStyle: char decimalSeparator
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser[] $VALUES
org.threeten.bp.chrono.Chronology: org.threeten.bp.temporal.TemporalQuery FROM
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS
org.threeten.bp.chrono.JapaneseChronology: java.util.Map ERA_SHORT_NAMES
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDate date
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: boolean deserialized
io.flutter.embedding.android.AndroidKeyProcessor: int combiningCharacter
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.ZoneId zone
org.threeten.bp.format.DateTimeParseContext$Parsed: java.util.Map fieldValues
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sExtrasField
com.google.gson.stream.JsonReader: int[] stack
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger messenger
androidx.versionedparcelable.VersionedParcelParcel: int mEnd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_NOTIFICATION_REPEAT_FREQUENCY
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Activity mainActivity
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node right
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver: java.lang.ref.WeakReference mMediaControllerImpl
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_BUTTON
androidx.collection.MapCollections$ArrayIterator: int mOffset
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction Update
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
android.support.v4.media.session.PlaybackStateCompat: java.lang.CharSequence mErrorMessage
io.flutter.embedding.android.DrawableSplashScreen: android.widget.ImageView$ScaleType scaleType
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: org.threeten.bp.temporal.TemporalQuery query
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer importance
com.google.gson.internal.bind.TypeAdapters$33: com.google.gson.TypeAdapter val$typeAdapter
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$3: int[] $SwitchMap$com$dexterous$flutterlocalnotifications$NotificationStyle
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingEnd
org.threeten.bp.temporal.IsoFields: org.threeten.bp.temporal.TemporalField WEEK_OF_WEEK_BASED_YEAR
org.threeten.bp.zone.StandardZoneRules: java.util.concurrent.ConcurrentMap lastRulesCache
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler
androidx.collection.MapCollections$MapIterator: boolean mEntryValid
com.google.gson.GsonBuilder: boolean serializeNulls
androidx.core.app.NotificationCompat$Builder: int mProgress
org.threeten.bp.format.DateTimePrintContext$1: org.threeten.bp.temporal.TemporalAccessor val$temporal
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CLASS_FACTORY
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean autoCancel
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel channel
org.threeten.bp.chrono.HijrahDate: java.util.HashMap ADJUSTED_MONTH_DAYS
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] DEFAULT_MONTH_DAYS
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE
com.google.gson.stream.JsonWriter: java.lang.String deferredName
org.threeten.bp.Month: org.threeten.bp.Month OCTOBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String sound
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] globalTransform
com.google.gson.internal.LinkedTreeMap: java.util.Comparator comparator
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat RTL
com.google.gson.internal.bind.ArrayTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatBigText
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments
com.google.gson.internal.UnsafeAllocator$2: int val$constructorId
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String INDETERMINATE
androidx.collection.MapCollections: androidx.collection.MapCollections$EntrySet mEntrySet
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String sound
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.HashMap mCallbackMap
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerCoords
androidx.core.app.Person$Builder: java.lang.CharSequence mName
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_ARRAY_FACTORY
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: java.lang.String encodedName
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map serviceAwarePlugins
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle NARROW
androidx.core.app.NotificationManagerCompat$CancelTask: java.lang.String tag
org.threeten.bp.format.DateTimeFormatterBuilder$4: int[] $SwitchMap$org$threeten$bp$format$SignStyle
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra[] $VALUES
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String VIBRATION_PATTERN
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.os.IBinder iBinder
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onUserLeaveHintListeners
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long calledAt
com.google.gson.Gson: boolean serializeNulls
com.google.gson.Gson: java.lang.String datePattern
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mTitle
io.flutter.plugin.common.MethodCall: java.lang.Object arguments
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge accessibilityBridge
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowRootView
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: int color
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED
androidx.media.R$id: int cancel_action
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle LENIENT
com.google.gson.Gson: com.google.gson.internal.Excluder excluder
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartMessenger dartMessenger
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SHOW_BADGE
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_OFFSET_TIME
com.google.gson.Gson: boolean generateNonExecutableJson
io.flutter.plugin.platform.PlatformPlugin: io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField MINUTE_OF_DAY
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride
com.google.gson.internal.ConstructorConstructor$14: com.google.gson.internal.UnsafeAllocator unsafeAllocator
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES
androidx.core.app.Person$Builder: boolean mIsBot
com.google.gson.internal.ConstructorConstructor$11: com.google.gson.internal.ConstructorConstructor this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelName
android.support.v4.os.ResultReceiver: boolean mLocal
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle mExtras
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String icon
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] $VALUES
io.flutter.view.VsyncWaiter$1: io.flutter.view.VsyncWaiter this$0
androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_RED
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.LifecycleRegistry lifecycle
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getParentNodeId
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String domainNetworkPolicy
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_BIG_PICTURE_ERROR_CODE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1 this$1
org.threeten.bp.LocalDate: short month
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory BYTE_FACTORY
androidx.versionedparcelable.VersionedParcelParcel: int mCurrentField
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle FULL_STANDALONE
org.threeten.bp.Month: org.threeten.bp.Month JULY
org.threeten.bp.Year: org.threeten.bp.format.DateTimeFormatter PARSER
com.google.gson.internal.bind.JsonTreeReader: java.lang.String[] pathNames
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger messenger
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_UP
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.Person mUser
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int overrideId
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit DAYS
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter LONG
org.threeten.bp.ZonedDateTime$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
com.google.gson.Gson$4: com.google.gson.TypeAdapter val$longAdapter
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: com.google.gson.Gson context
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] $VALUES
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable mParcel
com.google.gson.GsonBuilder: boolean escapeHtmlChars
io.flutter.view.AccessibilityBridge$4: io.flutter.view.AccessibilityBridge this$0
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ValueRange range
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BOOLEAN_AS_STRING
org.threeten.bp.format.DateTimeFormatterBuilder$TextPrinterParser: org.threeten.bp.format.TextStyle textStyle
org.threeten.bp.format.DateTimeParseContext: org.threeten.bp.format.DecimalStyle symbols
org.threeten.bp.Month: org.threeten.bp.Month FEBRUARY
android.support.v4.media.MediaDescriptionCompat$Builder: android.net.Uri mMediaUri
androidx.collection.SimpleArrayMap: int[] mHashes
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.net.Uri mDataUri
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_KEYBOARD_KEY
io.flutter.plugin.common.StandardMessageCodec: boolean LITTLE_ENDIAN
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_BIG_TEXT
androidx.media.app.NotificationCompat$MediaStyle: int[] mActionsToShowInCompact
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_TEXT
io.flutter.FlutterInjector: boolean accessed
org.threeten.bp.LocalTime$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoUnit
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.NotificationStyle style
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter ATOMIC_INTEGER_ARRAY
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedAccessibilityFocusedNodeId
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Bundle mExtras
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number eventTime
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField MINUTE_OF_HOUR
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String hint
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField MILLI_OF_DAY
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedInputFocusedNodeId
com.google.gson.stream.JsonReader: int peekedNumberLength
com.google.gson.stream.JsonReader: java.lang.String[] pathNames
androidx.core.R$id: int line3
android.support.v4.media.MediaDescriptionCompat$Builder: java.lang.CharSequence mTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONTENT_TITLE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine flutterEngine
androidx.core.app.NotificationCompatBuilder: android.os.Bundle mExtras
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: int expectedModCount
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_OBJECT
com.google.gson.internal.bind.TypeAdapters$33: java.lang.Class val$boxed
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
android.support.v4.media.MediaDescriptionCompat$Builder: java.lang.CharSequence mDescription
org.threeten.bp.temporal.IsoFields: org.threeten.bp.temporal.TemporalUnit QUARTER_YEARS
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING
com.dexterous.flutterlocalnotifications.models.MessageDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails person
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter RFC_1123_DATE_TIME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NAME
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField SECOND_OF_MINUTE
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource RawResource
com.google.gson.Gson: com.google.gson.internal.ConstructorConstructor constructorConstructor
androidx.collection.MapCollections$MapIterator: int mEnd
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory BIT_SET_FACTORY
io.flutter.plugin.platform.PlatformViewsController: boolean flutterViewConvertedToImageView
org.threeten.bp.Year$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoUnit
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
androidx.core.app.NotificationCompat$Builder: android.graphics.Bitmap mLargeIcon
org.threeten.bp.format.DateTimePrintContext: org.threeten.bp.format.DecimalStyle symbols
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.temporal.TemporalQuery PARSED_EXCESS_DAYS
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField EPOCH_DAY
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES
androidx.core.R$dimen: int compat_notification_large_icon_max_width
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_OFFSET_DATE
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BOOLEAN
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory$1: java.util.Map val$subtypeToDelegate
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action INCREASE
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1
io.flutter.view.VsyncWaiter$1$1: io.flutter.view.VsyncWaiter$1 this$1
android.support.v4.media.MediaDescriptionCompat$Builder: java.lang.CharSequence mSubtitle
org.threeten.bp.zone.ZoneOffsetTransition: org.threeten.bp.LocalDateTime transition
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$BubbleMetadata mBubbleMetadata
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetLeft
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CLASS
io.flutter.plugin.common.StringCodec: io.flutter.plugin.common.StringCodec INSTANCE
io.flutter.embedding.engine.loader.FlutterApplicationInfo: boolean automaticallyRegisterPlugins
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mHeadsUpContentView
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.Duration duration
androidx.media.R$layout: int notification_template_big_media_narrow
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.content.SharedPreferences preferences
androidx.core.app.NotificationCompat$Builder: int mNumber
com.google.gson.stream.JsonReader: char[] NON_EXECUTE_PREFIX
io.flutter.Log: int logLevel
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mPeople
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mTextWhenBeginBatchEdit
androidx.core.app.NotificationCompat$BigTextStyle: java.lang.CharSequence mBigText
androidx.core.app.NotificationCompat$Style: boolean mSummaryTextSet
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery LOCAL_TIME
org.threeten.bp.format.DateTimeBuilder: org.threeten.bp.Period excessDays
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory URL_FACTORY
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect childRect
io.flutter.plugin.platform.VirtualDisplayController: android.view.Surface surface
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int height
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource[] $VALUES
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_METHOD
android.support.v4.media.MediaMetadataCompat: android.media.MediaMetadata mMetadataFwk
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isWaitingForActivityReattachment
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.EditorInfo mEditorInfo
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval EveryMinute
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String description
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] inverseTransform
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int width
io.flutter.plugin.editing.TextInputPlugin$1: io.flutter.plugin.editing.TextInputPlugin this$0
org.threeten.bp.chrono.HijrahDate: java.lang.Long[] ADJUSTED_CYCLES
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_TAG
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
com.google.gson.internal.bind.TypeAdapters$32: java.lang.Class val$type
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest
androidx.core.text.BidiFormatter$Builder: int mFlags
org.threeten.bp.Period: int years
io.flutter.embedding.engine.dart.DartMessenger$Reply: int replyId
androidx.core.app.Person$Builder: java.lang.String mUri
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent launchIntent
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.TemporalUnit baseUnit
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedPlatformViewIds
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.gson.internal.bind.JsonTreeReader: int stackSize
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String[] hints
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_GREEN
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String decreasedValue
org.threeten.bp.MonthDay: int month
androidx.core.R$id: int title
com.google.gson.internal.ConstructorConstructor$2: com.google.gson.internal.ConstructorConstructor this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHORTCUT_ID
org.threeten.bp.Instant: org.threeten.bp.Instant EPOCH
com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Class componentType
androidx.core.app.NotificationCompat$Action: boolean mAllowGeneratedReplies
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra BEFORE_BE
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BOOLEAN
androidx.core.app.NotificationManagerCompat: java.lang.Object sLock
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
com.google.gson.internal.bind.TypeAdapters$26$1: com.google.gson.TypeAdapter val$dateTypeAdapter
org.threeten.bp.zone.ZoneOffsetTransitionRule: org.threeten.bp.ZoneOffset offsetAfter
org.threeten.bp.Instant$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoUnit
androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1
androidx.core.app.RemoteActionCompat: boolean mEnabled
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String name
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
org.threeten.bp.LocalDate: short day
org.threeten.bp.format.DecimalStyle: java.util.concurrent.ConcurrentMap CACHE
org.threeten.bp.temporal.IsoFields: org.threeten.bp.temporal.TemporalField QUARTER_OF_YEAR
io.flutter.embedding.android.FlutterView: java.util.Set flutterEngineAttachmentListeners
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler
org.threeten.bp.YearMonth$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoUnit
io.flutter.embedding.android.FlutterSplashView: java.lang.String transitioningIsolateId
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapter delegate
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.embedding.engine.dart.DartMessenger messenger
io.flutter.plugin.common.StringCodec: java.nio.charset.Charset UTF8
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE
io.flutter.plugin.platform.PlatformPlugin$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView platformView
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BODY
org.threeten.bp.chrono.Ser: java.lang.Object object
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: java.util.Map boundFields
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedTreeMap$Node lastReturned
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DecimalStyle decimalStyle
org.threeten.bp.chrono.HijrahDate: int[] LEAP_NUM_DAYS
com.google.gson.internal.ConstructorConstructor: java.util.Map instanceCreators
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field WEEK_OF_WEEK_BASED_YEAR
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle ALWAYS
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS
io.flutter.plugin.editing.TextInputPlugin: boolean mRestartInputPending
androidx.core.app.NotificationCompat$Builder: java.lang.String mChannelId
com.google.gson.internal.Excluder: double version
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_INTERVAL
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mReadCache
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter DOUBLE
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.JsonDeserializer deserializer
org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: java.lang.String[] PATTERNS
com.google.gson.internal.LinkedTreeMap: java.util.Comparator NATURAL_ORDER
io.flutter.plugin.editing.ListenableEditingState: android.view.inputmethod.BaseInputConnection mDummyConnection
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit HALF_DAYS
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack this$0
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek WEDNESDAY
androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat$SideChannelManager sSideChannelManager
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMin
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding servicePluginBinding
androidx.core.R$id: int line1
org.threeten.bp.Month: org.threeten.bp.Month JANUARY
androidx.media.AudioAttributesImplApi21$Builder: android.media.AudioAttributes$Builder mFwkBuilder
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel this$0
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LARGE_ICON_ERROR_CODE
androidx.core.app.Person: androidx.core.graphics.drawable.IconCompat mIcon
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LifecycleOwner mOwner
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel
org.threeten.bp.Month: org.threeten.bp.Month AUGUST
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String DESCRIPTION
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField CLOCK_HOUR_OF_AMPM
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mNext
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.Boolean mIsGroupConversation
io.flutter.plugin.common.FlutterException: java.lang.Object details
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BIG_DECIMAL
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: int[] EXCEED_POINTS
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.String mAction
android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
android.support.v4.media.MediaDescriptionCompat: android.os.Bundle mExtras
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.DayOfWeek dayOfWeek
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: java.util.Map nameToConstant
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime MIN
org.threeten.bp.chrono.MinguoChronology$1: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge accessibilityBridge
com.google.gson.GsonBuilder: boolean lenient
androidx.core.app.NotificationCompat$InboxStyle: java.util.ArrayList mTexts
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd
org.threeten.bp.ZoneOffset: org.threeten.bp.temporal.TemporalQuery FROM
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousFlags
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IMAGE
android.support.v4.media.MediaMetadataCompat: android.os.Bundle mBundle
com.google.gson.TypeAdapter$1: com.google.gson.TypeAdapter this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String label
org.threeten.bp.chrono.Ser: byte type
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery ZONE_ID
org.threeten.bp.zone.ZoneOffsetTransitionRule: org.threeten.bp.ZoneOffset standardOffset
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics
org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset MIN
io.flutter.embedding.android.AndroidTouchProcessor: boolean trackMotionEvents
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound
androidx.core.app.NotificationManagerCompat: java.util.Set sEnabledNotificationListenerPackages
org.threeten.bp.OffsetDateTime: org.threeten.bp.OffsetDateTime MAX
android.support.v4.media.session.PlaybackStateCompat: java.util.List mCustomActions
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mContentView
org.threeten.bp.LocalDate: int year
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer ledColor
androidx.core.app.NotificationManagerCompat$CancelTask: java.lang.String packageName
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: org.threeten.bp.format.SignStyle signStyle
io.flutter.plugin.editing.ListenableEditingState: int mBatchEditNestDepth
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node root
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mBigContentView
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mWriteCache
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Field childNodeIdsField
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_ALPHA
com.google.gson.internal.Excluder: java.util.List serializationStrategies
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra[] $VALUES
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN
androidx.core.text.BidiFormatter$DirectionalityEstimator: boolean isHtml
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext
io.flutter.plugin.platform.AccessibilityEventsDelegate: io.flutter.view.AccessibilityBridge accessibilityBridge
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Context applicationContext
com.google.gson.internal.JavaVersion: int majorJavaVersion
com.google.gson.Gson: java.util.List factories
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.LocalDate MIN_DATE
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedTextRequest mExtractRequest
io.flutter.plugin.editing.TextInputPlugin$InputTarget: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type
org.threeten.bp.format.DateTimePrintContext: java.util.Locale locale
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
androidx.media.AudioAttributesCompat: androidx.media.AudioAttributesImpl mImpl
org.threeten.bp.zone.ZoneOffsetTransitionRule: org.threeten.bp.ZoneOffset offsetBefore
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK
androidx.collection.ArrayMap: androidx.collection.MapCollections mCollections
io.flutter.view.AccessibilityBridge: android.database.ContentObserver animationScaleObserver
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: io.flutter.embedding.engine.systemchannels.LocalizationChannel this$0
io.flutter.embedding.engine.dart.DartMessenger$Reply: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.android.DrawableSplashScreen$1: io.flutter.embedding.android.DrawableSplashScreen this$0
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableLights
androidx.core.text.ICUCompat: java.lang.reflect.Method sGetScriptMethod
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE
io.flutter.plugin.platform.VirtualDisplayController$1$1: io.flutter.plugin.platform.VirtualDisplayController$1 this$1
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetLeft
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableLights
org.threeten.bp.chrono.JapaneseEra: org.threeten.bp.LocalDate since
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action LONG_PRESS
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: byte[] val$data
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action PASTE
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory NUMBER_FACTORY
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle[] $VALUES
android.support.v4.media.MediaMetadataCompat: java.lang.String[] PREFERRED_BITMAP_ORDER
androidx.versionedparcelable.VersionedParcelParcel: int mOffset
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number downTime
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter STRING_BUILDER
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: long motionEventId
io.flutter.embedding.android.FlutterSurfaceView$1: io.flutter.embedding.android.FlutterSurfaceView this$0
androidx.media.R$id: int action0
androidx.core.app.NotificationCompat$Action: int mSemanticAction
com.google.gson.GsonBuilder: boolean serializeSpecialFloatingPointValues
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel channel
com.google.gson.internal.bind.TimeTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int left
org.threeten.bp.chrono.JapaneseDate: int yearOfEra
org.threeten.bp.chrono.MinguoDate$1: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: java.lang.String encodedName
org.threeten.bp.temporal.ValueRange: long minSmallest
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.String conversationTitle
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE
com.google.gson.stream.JsonWriter: int[] stack
org.threeten.bp.OffsetTime: org.threeten.bp.ZoneOffset offset
androidx.collection.ArrayMap$1: androidx.collection.ArrayMap this$0
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1
androidx.core.app.NotificationCompat$Builder: android.app.PendingIntent mContentIntent
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULE_METHOD
org.threeten.bp.MonthDay: org.threeten.bp.format.DateTimeFormatter PARSER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer progress
androidx.core.app.NotificationManagerCompat: java.lang.Object sEnabledNotificationListenersLock
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLAY_SOUND
org.threeten.bp.Month: org.threeten.bp.Month DECEMBER
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
androidx.activity.ImmLeaksCleaner: int sReflectedFieldsInitialized
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement product
android.support.v4.media.MediaDescriptionCompat: java.lang.String mMediaId
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CURRENCY_FACTORY
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory SHORT_FACTORY
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInTraversalOrder
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map subtypeToLabel
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_WHEN
android.support.v4.media.MediaBrowserCompat$MediaItem: int mFlags
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String summaryText
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollPosition
org.threeten.bp.format.DateTimeParseContext$Parsed: org.threeten.bp.ZoneId zone
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra BCE
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte[] DIR_TYPE_CACHE
android.support.v4.media.session.PlaybackStateCompat: int mState
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedTreeMap$Node next
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean released
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetRight
com.google.gson.internal.bind.TypeAdapters$34: java.lang.Class val$base
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver
com.google.gson.GsonBuilder: int dateStyle
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache instance
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence mText
org.threeten.bp.ZoneOffset: java.lang.String id
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra BEFORE_AH
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: java.lang.Runnable mOnDrawRunnable
io.flutter.embedding.android.FlutterImageView: android.graphics.Bitmap currentBitmap
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MILLISECONDS_SINCE_EPOCH
androidx.core.app.NotificationCompat$Builder: boolean mProgressIndeterminate
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek[] ENUMS
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_TIME
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int action
androidx.collection.SimpleArrayMap: java.lang.Object[] mArray
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String contentTitle
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: com.google.gson.TypeAdapter elementTypeAdapter
com.google.gson.internal.bind.JsonTreeReader: java.io.Reader UNREADABLE_READER
com.google.gson.internal.ConstructorConstructor$3: com.google.gson.internal.ConstructorConstructor this$0
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: long[] vibrationPattern
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND_SOURCE
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type rawType
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.lang.String description
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek SUNDAY
com.google.gson.internal.bind.JsonTreeReader: java.lang.Object[] stack
org.threeten.bp.chrono.HijrahDate: int[] MIN_VALUES
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery OFFSET
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id
org.threeten.bp.format.DateTimeBuilder: org.threeten.bp.LocalTime time
io.flutter.plugin.platform.PlatformViewsController$1: io.flutter.plugin.platform.PlatformViewsController this$0
org.threeten.bp.chrono.JapaneseDate$1: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.Time repeatTime
androidx.media.AudioAttributesCompat: android.util.SparseIntArray SUPPRESSIBLE_USAGES
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] EMPTY_TYPE_ARRAY
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.FlutterJNI flutterJNI
org.threeten.bp.temporal.ValueRange: long minLargest
io.flutter.view.AccessibilityBridge$SemanticsNode: int maxValueLength
org.threeten.bp.chrono.JapaneseChronology: org.threeten.bp.chrono.JapaneseChronology INSTANCE
com.google.gson.internal.ConstructorConstructor$10: com.google.gson.internal.ConstructorConstructor this$0
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken
androidx.lifecycle.MethodCallsLogger: java.util.Map mCalledMethods
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int viewId
androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_LOCAL_TIME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean usesChronometer
io.flutter.embedding.android.FlutterSplashView: android.os.Bundle splashScreenState
androidx.core.R$id: int text2
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerPropertiesList
androidx.collection.SimpleArrayMap: java.lang.Object[] mTwiceBaseCache
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0
org.threeten.bp.format.DateTimeFormatterBuilder$2: org.threeten.bp.format.SimpleDateTimeTextProvider$LocaleStore val$store
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Daily
io.flutter.plugin.common.FlutterException: java.lang.String code
androidx.collection.MapCollections$KeySet: androidx.collection.MapCollections this$0
io.flutter.embedding.android.FlutterTextureView: boolean isAttachedToFlutterRenderer
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.lifecycle.Lifecycle mLifecycle
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map plugins
io.flutter.embedding.engine.FlutterOverlaySurface: int id
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method longArrayGetIndex
com.google.gson.Gson: boolean complexMapKeySerialization
org.threeten.bp.chrono.ThaiBuddhistChronology$1: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean onlyAlertOnce
com.google.gson.internal.ConstructorConstructor$13: com.google.gson.internal.ConstructorConstructor this$0
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_INSTANT
org.threeten.bp.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: char literal
androidx.core.text.BidiFormatter: boolean mIsRtlContext
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_SHOW_BADGE
androidx.collection.SimpleArrayMap: int mSize
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ALLOW_WHILE_IDLE
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ATOMIC_BOOLEAN_FACTORY
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMin
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DECREASE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelId
com.google.gson.Gson: com.google.gson.FieldNamingStrategy fieldNamingStrategy
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String IMPORTANCE
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver: android.support.v4.media.MediaBrowserCompat$CustomActionCallback mCallback
com.google.gson.internal.bind.JsonTreeReader: int[] pathIndices
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mKey
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode opaque
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onRequestPermissionsResultListeners
io.flutter.embedding.android.AndroidKeyProcessor: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_LIGHTS
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean obscureText
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String description
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field[] $VALUES
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.LifecycleEventObserver mLifecycleObserver
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int mCurrentVolume
androidx.core.app.NotificationCompatJellybean: boolean sExtrasFieldAccessFailed
org.threeten.bp.Instant: long seconds
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.LocalDate isoDate
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousLabel
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CALENDAR
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: java.lang.String encodedName
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: java.util.Map message
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: android.view.View view
androidx.core.app.NotificationManagerCompat: java.lang.String sEnabledNotificationListeners
io.flutter.plugin.common.MethodCall: java.lang.String method
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatSummaryText
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: io.flutter.plugin.common.MethodChannel$Result val$result
android.support.v4.media.MediaMetadataCompat: androidx.collection.ArrayMap METADATA_KEYS_TYPE
org.threeten.bp.temporal.IsoFields$Unit: java.lang.String name
org.threeten.bp.LocalDateTime$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoUnit
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: java.lang.Character complexCharacter
com.google.gson.internal.LinkedTreeMap: int modCount
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine flutterEngine
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String tag
androidx.core.app.Person: boolean mIsImportant
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra CE
com.google.gson.internal.Excluder: boolean requireExpose
org.threeten.bp.format.DateTimeBuilder: org.threeten.bp.chrono.Chronology chrono
io.flutter.plugin.platform.VirtualDisplayController: int densityDpi
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit[] $VALUES
com.google.gson.internal.ConstructorConstructor$9: com.google.gson.internal.ConstructorConstructor this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness
androidx.lifecycle.Lifecycle: java.util.concurrent.atomic.AtomicReference mInternalScopeRef
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getChildId
org.threeten.bp.chrono.HijrahDate: int[] MONTH_LENGTH
io.flutter.embedding.android.MotionEventTracker$MotionEventId: java.util.concurrent.atomic.AtomicLong ID_COUNTER
org.threeten.bp.temporal.ValueRange: long maxSmallest
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField ERA
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mTickerView
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String contentTitle
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager accessibilityManager
io.flutter.embedding.engine.dart.DartExecutor$1: io.flutter.embedding.engine.dart.DartExecutor this$0
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_LIGHTS
io.flutter.view.AccessibilityBridge$1: io.flutter.view.AccessibilityBridge this$0
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_RED
androidx.core.app.BundleCompat$BundleCompatBaseImpl: java.lang.reflect.Method sGetIBinderMethod
org.threeten.bp.zone.ZoneOffsetTransition: org.threeten.bp.ZoneOffset offsetBefore
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: int viewId
org.threeten.bp.Instant$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap vdControllers
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.SingleViewPresentation presentation
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MATCH_DATE_TIME_COMPONENTS
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger binaryMessenger
org.threeten.bp.chrono.JapaneseEra: java.lang.String name
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$minMax
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark
android.support.v4.os.ResultReceiver$MyRunnable: android.support.v4.os.ResultReceiver this$0
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.ZoneId zone
io.flutter.view.AccessibilityBridge: android.content.ContentResolver contentResolver
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField MICRO_OF_SECOND
android.support.v4.media.MediaMetadataCompat: java.lang.String[] PREFERRED_DESCRIPTION_ORDER
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String largeIcon
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalHeight
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Default
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String WHEN
androidx.versionedparcelable.VersionedParcelParcel: int mFieldId
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides RIGHT
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.os.Handler handler
org.threeten.bp.format.DateTimeFormatterBuilder: java.util.Map FIELD_MAP
org.threeten.bp.format.DateTimeParseContext: org.threeten.bp.chrono.Chronology overrideChronology
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] restorationData
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect rect
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.ListenableEditingState mEditable
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: boolean val$isPrimitive
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sHField
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.MediaDescriptionCompat mDescription
io.flutter.Log: int ASSERT
android.support.v4.os.ResultReceiver$MyResultReceiver: android.support.v4.os.ResultReceiver this$0
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String text
com.google.gson.internal.bind.SqlDateTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
io.flutter.view.AccessibilityBridge$SemanticsNode: int platformViewId
org.threeten.bp.Period: int months
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mHeadsUpContentView
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat ANYRTL_LTR
org.threeten.bp.chrono.HijrahDate: int[] LEAST_MAX_VALUES
org.threeten.bp.OffsetDateTime: org.threeten.bp.OffsetDateTime MIN
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride
org.threeten.bp.format.DateTimeParseContext: java.util.ArrayList parsed
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mEnd
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentTitle
androidx.core.app.NotificationCompat$Builder: android.os.Bundle mExtras
org.threeten.bp.format.DateTimeParseContext$Parsed: org.threeten.bp.Period excessDays
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String bigText
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter URI
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DEFAULT_ICON
org.threeten.bp.temporal.TemporalAdjusters$RelativeDayOfWeek: int relative
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
io.flutter.embedding.android.AndroidKeyProcessor: io.flutter.embedding.android.AndroidKeyProcessor$EventResponder eventResponder
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class baseType
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition STANDARD
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatContentTitle
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollChildren
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser printerParser
org.threeten.bp.Instant: int nanos
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: java.lang.String encodedName
androidx.core.app.NotificationCompat$Builder: android.content.Context mContext
androidx.core.app.NotificationCompat$Builder: boolean mShowWhen
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit[] $VALUES
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: boolean mDefaultIsRtl
org.threeten.bp.chrono.HijrahDate$1: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] ADJUSTED_LEAST_MAX_VALUES
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getRecordSourceNodeId
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.content.ComponentName componentName
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry textureRegistry
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.List mPendingCallbacks
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean channelShowBadge
android.support.v4.media.session.MediaControllerCompat$Callback: android.media.session.MediaController$Callback mCallbackFwk
io.flutter.embedding.android.DrawableSplashScreen: long crossfadeDurationInMillis
android.support.v4.media.session.PlaybackStateCompat: long mActiveItemId
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BOT
org.threeten.bp.zone.StandardZoneRules: long[] standardTransitions
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager mImm
io.flutter.Log: int ERROR
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.view.TextureRegistry$SurfaceTextureEntry textureEntry
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$EntrySet entrySet
com.google.gson.internal.bind.CollectionTypeAdapterFactory: com.google.gson.internal.ConstructorConstructor constructorConstructor
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_CODE
io.flutter.view.AccessibilityBridge$SemanticsNode: float top
androidx.collection.ContainerHelpers: int[] EMPTY_INTS
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Layout mLayout
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String hint
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager afm
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String summaryText
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit CENTURIES
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointFunctionName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_SUMMARY_TEXT
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onActivityResultListeners
org.threeten.bp.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: int padWidth
androidx.core.app.NotificationCompat$Builder: int mGroupAlertBehavior
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject
androidx.core.app.NotificationCompat$Builder: long mTimeout
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD
org.threeten.bp.temporal.TemporalAdjusters$RelativeDayOfWeek: int dowValue
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer id
androidx.versionedparcelable.VersionedParcelParcel: int mNextRead
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
org.threeten.bp.Month: org.threeten.bp.Month NOVEMBER
io.flutter.embedding.engine.dart.DartExecutor: boolean isApplicationRunning
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Daily
org.threeten.bp.format.DecimalStyle: org.threeten.bp.format.DecimalStyle STANDARD
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_APP_LAUNCH_DETAILS_METHOD
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix matrix
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int direction
androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isDecimal
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate MAX
org.threeten.bp.chrono.HijrahDate: int dayOfYear
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE
com.jakewharton.threetenabp.AssetsZoneRulesInitializer: java.lang.String assetPath
org.threeten.bp.zone.ZoneOffsetTransitionRule: org.threeten.bp.Month month
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity
androidx.core.app.Person$Builder: androidx.core.graphics.drawable.IconCompat mIcon
com.google.gson.GsonBuilder: boolean prettyPrinting
io.flutter.embedding.engine.FlutterEngineCache: java.util.Map cachedEngines
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity activity
androidx.core.app.NotificationCompat$Builder: boolean mGroupSummary
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_URI
com.jakewharton.threetenabp.AndroidThreeTen: java.util.concurrent.atomic.AtomicBoolean initialized
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek FRIDAY
org.threeten.bp.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: char padChar
org.threeten.bp.zone.StandardZoneRules: org.threeten.bp.LocalDateTime[] savingsLocalTransitions
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.RepeatInterval repeatInterval
com.google.gson.Gson: boolean htmlSafe
io.flutter.embedding.engine.loader.FlutterLoader$1$1: io.flutter.embedding.engine.loader.FlutterLoader$1 this$1
androidx.core.app.NotificationManagerCompat: android.content.Context mContext
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mInvisibleActions
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent actionIntent
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.chrono.Chronology chrono
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_CONVERSATION
io.flutter.plugin.platform.PlatformViewsController: android.content.Context context
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode image
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder parent
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionExtent
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatSummaryText
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter INTEGER
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String NAME
org.threeten.bp.chrono.HijrahDate: boolean isLeapYear
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.View mFlutterView
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.BitmapSource largeIconBitmapSource
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$KeySet keySet
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.media.session.MediaSession$QueueItem mItemFwk
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMESTAMP
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit DECADES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON_BITMAP_SOURCE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ListenableEditingState mEditable
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUTO_CANCEL
androidx.core.R$id: int right_icon
io.flutter.view.AccessibilityBridge$Flag: int value
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.gson.Gson: int timeStyle
org.threeten.bp.temporal.ChronoField: java.lang.String name
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VISIBILITY
io.flutter.view.AccessibilityBridge: java.util.List flutterNavigationStack
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mLock
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Inbox
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context applicationContext
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_TITLE
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.plugin.common.BasicMessageChannel channel
com.google.gson.Gson: java.util.Map typeTokenCache
org.threeten.bp.format.SimpleDateTimeTextProvider$LocaleStore: java.util.Map valueTextMap
org.threeten.bp.chrono.ThaiBuddhistDate$1: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
org.threeten.bp.ZoneRegion: java.util.regex.Pattern PATTERN
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean autocorrect
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_ICON_ERROR_CODE
io.flutter.embedding.android.FlutterSurfaceView: boolean renderTransparently
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer second
com.google.gson.internal.UnsafeAllocator$2: java.lang.reflect.Method val$newInstance
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.content.Context flutterAppWindowContext
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetBottom
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String payload
org.threeten.bp.temporal.IsoFields$Field: int[] QUARTER_DAYS
androidx.core.app.Person: boolean mIsBot
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.TypeAdapter keyTypeAdapter
com.google.gson.stream.JsonReader: java.io.Reader in
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT
io.flutter.plugin.mouse.MouseCursorPlugin$1: io.flutter.plugin.mouse.MouseCursorPlugin this$0
com.google.gson.stream.JsonWriter: int stackSize
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter UUID
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] mDataOnlyRemoteInputs
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$3: int[] $SwitchMap$com$dexterous$flutterlocalnotifications$models$IconSource
org.threeten.bp.Duration: java.util.regex.Pattern PATTERN
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap$Entry mCurrent
com.google.gson.GsonBuilder: java.util.Map instanceCreators
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showWhen
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.plugin.editing.InputConnectionAdaptor: int mClient
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMax
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String label
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel channel
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map labelToSubtype
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZoneId zone
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HEADER
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration
org.threeten.bp.chrono.ThaiBuddhistChronology: org.threeten.bp.chrono.ThaiBuddhistChronology INSTANCE
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type ownerType
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTimeImpl dateTime
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: java.lang.String label
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context context
com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.internal.ConstructorConstructor constructorConstructor
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int pointerCount
io.flutter.embedding.android.FlutterSplashView: java.lang.Runnable onTransitionComplete
org.threeten.bp.OffsetDateTime: org.threeten.bp.ZoneOffset offset
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver: android.os.Bundle mExtras
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: com.dexterous.flutterlocalnotifications.models.PersonDetails person
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DISMISS
android.support.v4.os.ResultReceiver: android.os.Handler mHandler
com.google.gson.stream.JsonReader: char[] buffer
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver: java.lang.String mAction
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition[] $VALUES
com.google.gson.internal.bind.JsonTreeWriter: java.util.List stack
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry textureRegistry
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime MIN
io.flutter.embedding.android.FlutterSplashView$3: io.flutter.embedding.android.FlutterSplashView this$0
com.google.gson.FieldAttributes: java.lang.reflect.Field field
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_GREEN
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
org.threeten.bp.OffsetDateTime: java.util.Comparator INSTANT_COMPARATOR
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser SENSITIVE
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP
org.threeten.bp.OffsetTime: org.threeten.bp.OffsetTime MAX
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader this$0
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Weekly
com.google.gson.internal.LinkedTreeMap$Node: int height
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_DETAILS
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField CLOCK_HOUR_OF_DAY
org.threeten.bp.zone.Ser: byte type
com.google.gson.internal.bind.TimeTypeAdapter: java.text.DateFormat format
android.support.v4.media.session.PlaybackStateCompat: long mPosition
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.google.gson.internal.bind.JsonTreeReader: java.lang.Object SENTINEL_CLOSED
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread
com.google.gson.JsonArray: java.util.List elements
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableVibration
io.flutter.plugin.common.StandardMessageCodec: java.nio.charset.Charset UTF8
org.threeten.bp.chrono.JapaneseChronology: java.util.Map ERA_FULL_NAMES
io.flutter.embedding.engine.FlutterJNI: boolean setRefreshRateFPSCalled
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_TEXT
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.media.session.PlaybackState$CustomAction mCustomActionFwk
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek TUESDAY
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
org.threeten.bp.OffsetTime: org.threeten.bp.OffsetTime MIN
com.dexterous.flutterlocalnotifications.models.NotificationDetails: int[] additionalFlags
androidx.core.R$drawable: int notification_bg
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl context
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String USES_CHRONOMETER
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String isolateServiceId
androidx.core.graphics.drawable.IconCompat: int mInt2
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: com.google.gson.reflect.TypeToken val$fieldType
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition UTC
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TAG
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek THURSDAY
org.threeten.bp.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: org.threeten.bp.format.DateTimeFormatterBuilder$DateTimePrinterParser printerParser
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TICKER
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer hour
android.support.v4.media.session.ParcelableVolumeInfo: int audioStream
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean playSound
androidx.core.text.TextUtilsCompat: java.util.Locale ROOT
org.threeten.bp.format.DateTimePrintContext$1: org.threeten.bp.chrono.Chronology val$effectiveChrono
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: java.util.Map constantToName
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LiveData this$0
androidx.savedstate.SavedStateRegistry$1: androidx.savedstate.SavedStateRegistry this$0
org.threeten.bp.chrono.HijrahDate: java.util.HashMap ADJUSTED_MONTH_LENGTHS
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel channel
androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable
com.google.gson.internal.Excluder: java.util.List deserializationStrategies
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMax
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$2: android.content.SharedPreferences$Editor val$editor
androidx.core.R$id: int text
io.flutter.view.AccessibilityBridge: int accessibilityFeatureFlags
androidx.arch.core.internal.FastSafeIterableMap: java.util.HashMap mHashMap
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String PLAY_SOUND
io.flutter.plugin.editing.ListenableEditingState: int mSelectionEndWhenBeginBatchEdit
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle STRICT
androidx.media.R$layout: int notification_template_media
io.flutter.plugin.editing.ListenableEditingState: int mSelectionStartWhenBeginBatchEdit
androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: org.threeten.bp.temporal.TemporalField field
io.flutter.embedding.android.FlutterImageView: android.media.Image currentImage
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataMimeType
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
org.threeten.bp.format.SimpleDateTimeTextProvider$LocaleStore: java.util.Map parsable
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$matrix
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] $VALUES
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
org.threeten.bp.LocalTime: byte second
io.flutter.embedding.android.FlutterView$2: io.flutter.embedding.android.FlutterView this$0
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode surface
org.threeten.bp.chrono.HijrahDate: int[] MAX_VALUES
io.flutter.embedding.android.FlutterSurfaceView$2: io.flutter.embedding.android.FlutterSurfaceView this$0
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource BitmapFilePath
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY
io.flutter.plugin.platform.PlatformPlugin: int mEnabledOverlays
androidx.core.app.NotificationCompatBuilder: java.util.List mActionExtrasList
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState
androidx.core.R$dimen: int notification_large_icon_width
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollPosition
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_GROUP_METHOD
io.flutter.Log: int INFO
io.flutter.embedding.android.FlutterSplashView$2: io.flutter.embedding.android.FlutterSplashView this$0
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentText
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String category
org.threeten.bp.MonthDay: int day
io.flutter.plugin.platform.PlatformPlugin$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness
io.flutter.embedding.engine.renderer.FlutterRenderer: android.view.Surface surface
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String increasedValue
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatLines
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter LOCALE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean fullScreenIntent
io.flutter.embedding.engine.FlutterEngine$1: io.flutter.embedding.engine.FlutterEngine this$0
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HIDE_EXPANDED_LARGE_ICON
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS
io.flutter.embedding.engine.dart.DartMessenger$Reply: java.util.concurrent.atomic.AtomicBoolean done
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] $VALUES
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node left
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: java.lang.String encodedName
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter ATOMIC_BOOLEAN
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect viewBounds
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: int subsequentWidth
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField[] $VALUES
io.flutter.embedding.android.FlutterView: java.util.Set flutterUiDisplayListeners
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener
com.google.gson.internal.ConstructorConstructor$2: java.lang.reflect.Type val$type
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
org.threeten.bp.format.DecimalStyle: char zeroDigit
org.threeten.bp.format.DateTimeTextProvider: java.util.concurrent.atomic.AtomicReference MUTABLE_PROVIDER
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViews
org.threeten.bp.chrono.HijrahDate: int dayOfMonth
com.google.gson.internal.ConstructorConstructor$5: com.google.gson.internal.ConstructorConstructor this$0
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String name
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CALLED_AT
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.StyleInformation styleInformation
io.flutter.plugin.editing.TextInputPlugin$2: io.flutter.plugin.editing.TextInputPlugin this$0
io.flutter.plugin.platform.VirtualDisplayController$1: java.lang.Runnable val$onNewSizeFrameAvailable
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mContentView
io.flutter.view.AccessibilityBridge$SemanticsNode: int flags
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.SoundSource soundSource
androidx.core.app.NotificationCompat$Builder: java.lang.String mShortcutId
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String DESCRIPTION
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.BroadcastReceiver broadcastReceiver
io.flutter.plugin.editing.ListenableEditingState: int mChangeNotificationDepth
io.flutter.plugin.platform.VirtualDisplayController$1: android.view.View val$embeddedView
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence mConversationTitle
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory URI_FACTORY
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource DrawableResource
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl handler
io.flutter.view.AccessibilityBridge$SemanticsNode: float bottom
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_CODE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
androidx.core.app.NotificationCompat$Builder: android.app.Notification mPublicVersion
android.support.v4.media.MediaBrowserCompat$ItemReceiver: android.support.v4.media.MediaBrowserCompat$ItemCallback mCallback
androidx.collection.MapCollections: androidx.collection.MapCollections$ValuesCollection mValues
com.google.gson.internal.ConstructorConstructor$2: com.google.gson.InstanceCreator val$rawTypeCreator
androidx.core.app.NotificationManagerCompat$NotifyTask: int id
com.google.gson.internal.bind.ArrayTypeAdapter: com.google.gson.TypeAdapter componentTypeAdapter
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: android.content.SharedPreferences$Editor val$editor
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_LAUNCHED_APP
org.threeten.bp.Instant: org.threeten.bp.Instant MAX
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: boolean val$jsonAdapterPresent
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_GROUP_METHOD
android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler
androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat
io.flutter.plugin.platform.PlatformViewsController$1$1: io.flutter.plugin.platform.PlatformViewsController$1 this$1
io.flutter.plugin.platform.VirtualDisplayController: android.view.View$OnFocusChangeListener focusChangeListener
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.CharSequence mName
org.threeten.bp.ZoneRegion: java.lang.String id
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
androidx.collection.MapCollections$MapIterator: int mIndex
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_NOTIFICATION
com.google.gson.internal.ConstructorConstructor$6: com.google.gson.internal.ConstructorConstructor this$0
io.flutter.embedding.android.FlutterView: io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin
com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Object theUnsafe
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer priority
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_TIME
androidx.core.R$dimen: int notification_right_icon_size
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra BEFORE_ROC
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mStart
io.flutter.view.AccessibilityBridge$SemanticsNode: float right
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String groupKey
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21: java.lang.ref.WeakReference mCallback
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply
com.google.gson.internal.Excluder$1: com.google.gson.Gson val$gson
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Hourly
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean frameworkHasRequestedData
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node prev
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANT
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean playSound
org.threeten.bp.chrono.ThaiBuddhistChronology: java.util.HashMap ERA_SHORT_NAMES
org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser: boolean decimalPoint
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField INSTANT_SECONDS
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mContentDescription
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext
org.threeten.bp.chrono.HijrahDate: int[] NUM_DAYS
com.google.gson.JsonPrimitive: java.lang.Object value
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture$OnFrameAvailableListener onFrameListener
io.flutter.embedding.android.FlutterTextureView: boolean isSurfaceAvailableForRendering
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
androidx.lifecycle.LifecycleRegistry: java.lang.ref.WeakReference mLifecycleOwner
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField HOUR_OF_DAY
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection lastInputConnection
org.threeten.bp.zone.ZoneOffsetTransitionRule: org.threeten.bp.LocalTime time
org.threeten.bp.zone.ZoneOffsetTransitionRule: org.threeten.bp.DayOfWeek dow
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalWidth
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mPendingListeners
androidx.media.AudioAttributesImplApi21: android.media.AudioAttributes mAudioAttributes
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap contextToPlatformView
com.google.gson.internal.LinkedTreeMap$EntrySet$1: com.google.gson.internal.LinkedTreeMap$EntrySet this$1
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String HOUR
android.support.v4.media.MediaMetadataCompat: java.lang.String[] PREFERRED_URI_ORDER
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime MAX
io.flutter.plugin.common.MethodChannel: java.lang.String name
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES
androidx.media.AudioAttributesImplBase: int mFlags
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: io.flutter.plugin.common.MethodChannel channel
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField DAY_OF_YEAR
android.support.v4.media.session.ParcelableVolumeInfo: int maxVolume
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField MICRO_OF_DAY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_OFF_MS
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String groupId
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.concurrent.ExecutorService executor
org.threeten.bp.format.DateTimeParseContext$Parsed: boolean leapSecond
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map broadcastReceiverAwarePlugins
io.flutter.view.AccessibilityBridge$SemanticsNode: int id
androidx.activity.ComponentActivity$3: androidx.activity.ComponentActivity this$0
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetRight
io.flutter.plugin.platform.VirtualDisplayController: android.content.Context context
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInHitTestOrder
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource FilePath
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer day
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingTop
androidx.core.R$dimen: int notification_big_circle_margin
org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC
com.google.gson.stream.JsonReader: int stackSize
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: java.lang.String encodedName
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type lowerBound
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding contentProviderPluginBinding
org.threeten.bp.chrono.HijrahDate: char FILE_SEP
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE_BITMAP_SOURCE
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
androidx.media.AudioAttributesCompat: boolean sForceLegacyBehavior
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI flutterJNI
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: androidx.media.AudioAttributesCompat mAudioAttrsCompat
androidx.core.app.NotificationCompat$Action: int icon
androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0
org.threeten.bp.zone.ZoneRulesInitializer: org.threeten.bp.zone.ZoneRulesInitializer DO_NOTHING
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] $VALUES
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
org.threeten.bp.format.DateTimeFormatterBuilder: java.util.List printerParsers
androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory UUID_FACTORY
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetTop
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_METHOD
androidx.core.graphics.drawable.IconCompat: byte[] mData
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
com.google.gson.stream.JsonWriter: java.lang.String separator
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mPrevious
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle SMART
com.google.gson.stream.JsonWriter: java.lang.String indent
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String timeZoneName
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery ZONE
androidx.collection.MapCollections$ArrayIterator: androidx.collection.MapCollections this$0
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate MIN
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree: java.util.Map substringMap
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode parent
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMethodCodec INSTANCE
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle NEVER
androidx.core.app.NotificationManagerCompat: android.app.NotificationManager mNotificationManager
org.threeten.bp.zone.StandardZoneRules: long[] savingsInstantTransitions
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int viewId
org.threeten.bp.Month: org.threeten.bp.Month[] $VALUES
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String logTag
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.core.app.RemoteActionCompat: android.app.PendingIntent mActionIntent
org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDateTime dateTime
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long id
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: io.flutter.plugin.common.MethodChannel$Result val$result
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int metaState
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry this$1
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit MILLENNIA
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory STRING_FACTORY
org.threeten.bp.chrono.Chronology: java.util.concurrent.ConcurrentHashMap CHRONOS_BY_ID
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarColor
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField DAY_OF_WEEK
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter NUMBER
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.FieldNamingStrategy fieldNamingPolicy
androidx.lifecycle.SingleGeneratedAdapterObserver: androidx.lifecycle.GeneratedAdapter mGeneratedAdapter
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatContentTitle
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.JSONMethodCodec INSTANCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_MESSAGE
org.threeten.bp.chrono.HijrahDate: int yearOfEra
org.threeten.bp.chrono.JapaneseEra: java.util.concurrent.atomic.AtomicReference KNOWN_ERAS
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.JsonSerializer serializer
org.threeten.bp.Month: org.threeten.bp.Month MARCH
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory INTEGER_FACTORY
org.threeten.bp.OffsetTime: org.threeten.bp.temporal.TemporalQuery FROM
com.google.gson.internal.bind.TypeAdapters$34: java.lang.Class val$sub
io.flutter.embedding.android.FlutterTextureView$1: io.flutter.embedding.android.FlutterTextureView this$0
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String flutterAssetsDir
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState
org.threeten.bp.format.DateTimeFormatterBuilder: char padNextChar
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES
androidx.core.app.NotificationCompat$Action: android.os.Bundle mExtras
org.threeten.bp.LocalDate$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoUnit
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ID
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] $VALUES
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver: android.support.v4.media.MediaBrowserCompat$SearchCallback mCallback
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERIODICALLY_SHOW_METHOD
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalTime time
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: android.view.View mView
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map activityAwarePlugins
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel$Result callback
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] mRemoteInputs
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm
org.threeten.bp.OffsetDateTime: org.threeten.bp.temporal.TemporalQuery FROM
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: io.flutter.plugin.common.MethodChannel channel
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String shortcutId
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: boolean serialized
android.support.v4.media.MediaDescriptionCompat: android.net.Uri mMediaUri
org.threeten.bp.chrono.HijrahDate: long gregorianEpochDay
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence[] mRemoteInputHistory
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.android.AndroidKeyProcessor keyProcessor
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionBase
androidx.collection.MapCollections$ArrayIterator: int mIndex
org.threeten.bp.temporal.IsoFields: org.threeten.bp.temporal.TemporalField DAY_OF_QUARTER
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
io.flutter.embedding.engine.systemchannels.SystemChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE
android.support.v4.os.IResultReceiver$Stub$Proxy: android.os.IBinder mRemote
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.BitmapSource bigPictureBitmapSource
com.google.gson.internal.ConstructorConstructor$14: com.google.gson.internal.ConstructorConstructor this$0
com.google.gson.internal.bind.util.ISO8601Utils: java.util.TimeZone TIMEZONE_UTC
org.threeten.bp.format.DateTimeFormatterBuilder$TextPrinterParser: org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser numberPrinterParser
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String uniqueIdentifier
io.flutter.embedding.android.FlutterView$1: io.flutter.embedding.android.FlutterView this$0
io.flutter.embedding.engine.FlutterShellArgs: java.util.Set args
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String scheduledDateTime
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding broadcastReceiverPluginBinding
android.support.v4.media.session.PlaybackStateCompat: android.media.session.PlaybackState mStateFwk
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String KEY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelDescription
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_ALERT_BEHAVIOR
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader$Settings settings
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ZONED_SCHEDULE_METHOD
io.flutter.plugin.editing.TextInputPlugin: android.view.View mView
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean waitForRestorationData
com.google.gson.GsonBuilder: com.google.gson.LongSerializationPolicy longSerializationPolicy
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING
org.threeten.bp.chrono.HijrahChronology: java.util.HashMap ERA_FULL_NAMES
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionExtent
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfWeekAndTime
org.threeten.bp.YearMonth: int month
androidx.core.app.NotificationCompat$Builder: java.lang.String mSortKey
com.google.gson.internal.bind.DateTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
org.threeten.bp.LocalTime: int nano
org.threeten.bp.chrono.ChronoZonedDateTimeImpl$1: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevLeft
com.google.gson.reflect.TypeToken: java.lang.reflect.Type type
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle NARROW_STANDALONE
io.flutter.embedding.android.FlutterTextureView: android.view.Surface renderSurface
androidx.core.R$drawable: int notification_icon_background
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack mutatorsStack
com.google.gson.internal.ConstructorConstructor$8: com.google.gson.internal.ConstructorConstructor this$0
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory$1: java.util.Map val$labelToDelegate
androidx.arch.core.internal.SafeIterableMap: java.util.WeakHashMap mIterators
androidx.core.R$dimen: int notification_small_icon_size_as_large
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_DATE_TIME
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String MINUTE
androidx.core.app.NotificationCompat$Builder: java.lang.String mGroupKey
com.google.gson.GsonBuilder: com.google.gson.internal.Excluder excluder
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0
com.google.gson.reflect.TypeToken: int hashCode
io.flutter.embedding.android.MotionEventTracker: android.util.LongSparseArray eventById
com.google.gson.Gson$2: com.google.gson.Gson this$0
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle NOT_NEGATIVE
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field WEEK_BASED_YEAR
org.threeten.bp.Ser: java.lang.Object object
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONLY_ALERT_ONCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean ongoing
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField OFFSET_SECONDS
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mParcelizerCache
com.google.gson.DefaultDateTypeAdapter: java.lang.Class dateType
androidx.lifecycle.ReflectiveGenericLifecycleObserver: androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Activity activity
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek MONDAY
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter instance
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String bigPicture
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ALL_METHOD
io.flutter.embedding.engine.loader.FlutterApplicationInfo: boolean clearTextPermitted
org.threeten.bp.format.DateTimeParseContext: org.threeten.bp.ZoneId overrideZone
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.Duration duration
io.flutter.embedding.android.FlutterSplashView: java.lang.String previousCompletedSplashIsolate
org.threeten.bp.format.DateTimeFormatter: java.util.Locale locale
io.flutter.plugin.editing.ListenableEditingState: int mComposingStartWhenBeginBatchEdit
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES
io.flutter.plugin.editing.ListenableEditingState$1: io.flutter.plugin.editing.ListenableEditingState this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean inverseTransformDirty
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUMMARY_TEXT
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery LOCAL_DATE
org.threeten.bp.zone.TzdbZoneRulesProvider$Version: java.lang.String[] regionArray
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra[] $VALUES
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION
com.google.gson.internal.LinkedTreeMap$EntrySet: com.google.gson.internal.LinkedTreeMap this$0
io.flutter.plugin.editing.TextInputPlugin: boolean isInputConnectionLocked
com.google.gson.internal.bind.TypeAdapters$35$1: java.lang.Class val$requestedType
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatSummaryText
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit WEEKS
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevTop
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: java.lang.reflect.Type componentType
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
org.threeten.bp.Period: org.threeten.bp.Period ZERO
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField AMPM_OF_DAY
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField NANO_OF_DAY
androidx.core.text.BidiFormatter$DirectionalityEstimator: int length
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.android.AndroidKeyProcessor keyProcessor
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String URI
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_CHECKED
com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Class unsafeClass
androidx.core.graphics.drawable.IconCompat: int mType
com.google.gson.reflect.TypeToken: java.lang.Class rawType
org.threeten.bp.OffsetTime: org.threeten.bp.LocalTime time
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] ADJUSTED_MIN_VALUES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MESSAGES
org.threeten.bp.chrono.HijrahChronology: java.util.HashMap ERA_SHORT_NAMES
com.google.gson.GsonBuilder: int timeStyle
com.google.gson.Gson$5: com.google.gson.TypeAdapter val$longAdapter
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatContentTitle
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory: com.google.gson.internal.ConstructorConstructor constructorConstructor
androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
org.threeten.bp.format.DateTimeParseContext$Parsed: org.threeten.bp.chrono.Chronology chrono
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float yPrecision
android.support.v4.media.session.PlaybackStateCompat$CustomAction: int mIcon
io.flutter.embedding.android.FlutterView: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean mBeforeStart
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ticker
org.threeten.bp.chrono.ThaiBuddhistChronology: java.util.HashMap ERA_FULL_NAMES
android.support.v4.media.session.PlaybackStateCompat: int mErrorCode
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] DEFAULT_LEAP_MONTH_DAYS
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_DATE
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ID
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ID
com.google.gson.GsonBuilder: boolean generateNonExecutableJson
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle SHORT
io.flutter.view.AccessibilityBridge: android.view.View rootAccessibilityView
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] $VALUES
org.threeten.bp.zone.ZoneOffsetTransitionRule: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition timeDefinition
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY
io.flutter.embedding.android.FlutterView$3: java.lang.Runnable val$onDone
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
org.threeten.bp.format.DateTimeFormatterBuilder: int padNextWidth
com.dexterous.flutterlocalnotifications.models.PersonDetails: com.dexterous.flutterlocalnotifications.models.IconSource iconBitmapSource
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle EXCEEDS_PAD
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager delegate
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback
org.threeten.bp.zone.ZoneOffsetTransitionRule: byte dom
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type
org.threeten.bp.chrono.ChronoLocalDateTimeImpl$1: int[] $SwitchMap$org$threeten$bp$temporal$ChronoUnit
android.support.v4.media.session.ParcelableVolumeInfo: int currentVolume
androidx.collection.SimpleArrayMap: int mBaseCacheSize
io.flutter.plugin.common.JSONMessageCodec: io.flutter.plugin.common.JSONMessageCodec INSTANCE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int source
com.google.gson.Gson: java.util.Map instanceCreators
com.google.gson.GsonBuilder: java.lang.String datePattern
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK
androidx.core.app.NotificationCompat$Builder: int mBadgeIcon
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PAYLOAD
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener this$0
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String vmSnapshotData
org.threeten.bp.Month: org.threeten.bp.temporal.TemporalQuery FROM
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition WALL
androidx.core.app.NotificationCompat$MessagingStyle$Message: long mTimestamp
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl: com.google.gson.internal.bind.TreeTypeAdapter this$0
androidx.media.AudioAttributesImplBase$Builder: int mLegacyStream
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_MESSAGE
androidx.lifecycle.CompositeGeneratedAdaptersObserver: androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters
androidx.core.R$id: int chronometer
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int flags
com.google.gson.internal.Excluder$1: boolean val$skipSerialize
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Style mStyle
io.flutter.embedding.engine.loader.FlutterLoader$1: android.content.Context val$appContext
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_BLUE
org.threeten.bp.LocalTime: org.threeten.bp.temporal.TemporalQuery FROM
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputAction
com.jakewharton.threetenabp.AssetsZoneRulesInitializer: android.content.Context context
com.google.gson.GsonBuilder: com.google.gson.FieldNamingStrategy fieldNamingPolicy
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String packageName
org.threeten.bp.zone.TzdbZoneRulesProvider: java.util.List regionIds
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory$1: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory this$0
androidx.versionedparcelable.VersionedParcelParcel: android.util.SparseIntArray mPositionLookup
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
androidx.core.app.Person$Builder: boolean mIsImportant
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec codec
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker INSTANCE
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String typeFieldName
org.threeten.bp.chrono.ChronoZonedDateTime: java.util.Comparator INSTANT_COMPARATOR
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.LocalTime time
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcel mParcel
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] DEFAULT_CYCLE_YEARS
io.flutter.view.AccessibilityBridge$2: io.flutter.view.AccessibilityBridge this$0
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String id
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy IDENTITY
org.threeten.bp.temporal.IsoFields: org.threeten.bp.temporal.TemporalUnit WEEK_BASED_YEARS
com.google.gson.internal.bind.MapTypeAdapterFactory: boolean complexMapKeySerialization
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue
org.threeten.bp.OffsetDateTime$3: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_OFFSET_DATE_TIME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMEOUT_AFTER
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType type
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.temporal.TemporalQuery QUERY_REGION_ONLY
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
org.threeten.bp.Period: java.util.regex.Pattern PATTERN
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_ENABLED
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host
com.google.gson.GsonBuilder: java.util.List factories
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_MIME_TYPE
org.threeten.bp.zone.ZoneOffsetTransitionRule$1: int[] $SwitchMap$org$threeten$bp$zone$ZoneOffsetTransitionRule$TimeDefinition
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_BLUE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE_INFORMATION
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Weekly
com.google.gson.Gson: int dateStyle
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_SOUND_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_NAME
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec createArgsCodec
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit ERAS
androidx.core.text.ICUCompat: java.lang.reflect.Method sAddLikelySubtagsMethod
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE
org.threeten.bp.format.DecimalStyle: char negativeSign
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SET_AS_GROUP_SUMMARY
com.google.gson.internal.UnsafeAllocator$1: java.lang.reflect.Method val$allocateInstance
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DRAWABLE
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: int maxWidth
androidx.core.text.BidiFormatter: java.lang.String LRM_STRING
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] $VALUES
org.threeten.bp.zone.ZoneRulesInitializer: java.util.concurrent.atomic.AtomicReference INITIALIZER
androidx.core.R$drawable: int notification_template_icon_bg
com.google.gson.Gson$1: com.google.gson.Gson this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadPreviousConfig
io.flutter.embedding.android.AndroidTouchProcessor: android.graphics.Matrix IDENTITY_TRANSFORM
org.threeten.bp.chrono.ChronoLocalDateTime: java.util.Comparator DATE_TIME_COMPARATOR
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CHARACTER_FACTORY
org.threeten.bp.LocalTime: byte minute
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME
org.threeten.bp.chrono.ThaiBuddhistChronology: java.util.HashMap ERA_NARROW_NAMES
com.google.gson.Gson: java.lang.ThreadLocal calls
org.threeten.bp.ZoneId: java.util.Map SHORT_IDS
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_RAW_RESOURCE_ERROR_MESSAGE
io.flutter.embedding.android.FlutterImageView: boolean isAttachedToFlutterRenderer
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit MONTHS
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String value
com.google.gson.Gson: com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PROGRESS
org.threeten.bp.Instant: org.threeten.bp.Instant MIN
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.gson.internal.Excluder: boolean serializeInnerClasses
org.threeten.bp.format.DateTimeFormatterBuilder$2: org.threeten.bp.format.DateTimeFormatterBuilder this$0
androidx.core.text.BidiFormatter: java.lang.String RLM_STRING
org.threeten.bp.format.DateTimeFormatterBuilder$InstantPrinterParser: int fractionalDigits
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec codec
androidx.core.R$drawable: int notification_template_icon_low_bg
org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser: org.threeten.bp.temporal.TemporalField field
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.ContentProvider contentProvider
io.flutter.plugin.platform.PlatformViewsController$1$1: java.lang.Runnable val$onComplete
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: io.flutter.embedding.engine.systemchannels.TextInputChannel this$0
androidx.core.R$id: int info
androidx.core.R$dimen: int notification_small_icon_background_padding
androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap
com.google.gson.internal.Excluder$1: com.google.gson.internal.Excluder this$0
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.temporal.TemporalQuery PARSED_LEAP_SECOND
io.flutter.plugin.editing.TextInputPlugin: android.graphics.Rect lastClientRect
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree: java.util.Map substringMapCI
androidx.collection.MapCollections$ValuesCollection: androidx.collection.MapCollections this$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onNewIntentListeners
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit MILLIS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String largeIcon
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: java.lang.reflect.Field val$field
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.android.MotionEventTracker motionEventTracker
org.threeten.bp.chrono.IsoChronology: org.threeten.bp.chrono.IsoChronology INSTANCE
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.InputMethodManager mImm
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: java.lang.String encodedName
com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.reflect.Field overrideField
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_ZONED_DATE_TIME
com.google.gson.internal.bind.TypeAdapters$33: java.lang.Class val$unboxed
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: com.google.gson.TypeAdapter delegate
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON_SOURCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOnMs
org.threeten.bp.format.DateTimeParseContext: boolean caseSensitive
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean important
org.threeten.bp.format.DateTimeBuilder: boolean leapSecond
androidx.core.app.NotificationCompat$Action: boolean mShowsUserInterface
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field QUARTER_OF_YEAR
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_LOCAL_DATE
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.TemporalUnit rangeUnit
org.threeten.bp.chrono.JapaneseEra: org.threeten.bp.chrono.JapaneseEra SHOWA
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Media
androidx.core.app.NotificationCompatBuilder: androidx.core.app.NotificationCompat$Builder mBuilderCompat
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized
org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser: boolean optional
io.flutter.view.AccessibilityBridge$AccessibilityFeature: int value
org.threeten.bp.zone.ZoneRules$Fixed: org.threeten.bp.ZoneOffset offset
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.google.gson.internal.ConstructorConstructor$1: com.google.gson.InstanceCreator val$typeCreator
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapterFactory skipPast
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter BASIC_ISO_DATE
androidx.activity.ComponentActivity$2: androidx.activity.ComponentActivity this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT
com.google.gson.internal.Streams$AppendableWriter: java.lang.Appendable appendable
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LOCALE
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder mRemote
org.threeten.bp.YearMonth$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.ConstructorConstructor constructorConstructor
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sServedViewField
org.threeten.bp.format.DecimalStyle: char positiveSign
io.flutter.plugin.platform.PlatformViewRegistryImpl: java.util.Map viewFactories
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean bot
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_VIBRATION
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean hideExpandedLargeIcon
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides NONE
androidx.core.R$integer: int status_bar_notification_info_maxnum
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter JSON_ELEMENT
android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence mDescription
com.google.gson.internal.ConstructorConstructor$4: com.google.gson.internal.ConstructorConstructor this$0
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.ZoneOffset offset
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String dataDirPath
androidx.core.app.NotificationManagerCompat$CancelTask: int id
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit QUARTER_YEARS
androidx.media.app.NotificationCompat$MediaStyle: boolean mShowCancelButton
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit WEEK_BASED_YEARS
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel
com.google.gson.internal.bind.ObjectTypeAdapter: com.google.gson.Gson gson
io.flutter.embedding.android.AndroidKeyProcessor: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
org.threeten.bp.zone.Ser: java.lang.Object object
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: java.lang.String name
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.Future initResultFuture
com.google.gson.stream.JsonWriter: boolean serializeNulls
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: android.view.View embeddedView
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getSourceNodeId
androidx.core.app.Person: java.lang.String mKey
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionEnd
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter URL
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit FOREVER
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mBigContentView
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigPicture
com.google.gson.internal.LinkedTreeMap$KeySet$1: com.google.gson.internal.LinkedTreeMap$KeySet this$1
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson gson
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHARED_PREFERENCES_KEY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONVERSATION_TITLE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionStart
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter STRING_BUFFER
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: com.google.gson.TypeAdapter val$typeAdapter
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_KEY
android.support.v4.media.session.PlaybackStateCompat: android.os.Bundle mExtras
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField NANO_OF_SECOND
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra AH
com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object value
com.google.gson.internal.bind.ObjectTypeAdapter$2: int[] $SwitchMap$com$google$gson$stream$JsonToken
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser: int minWidth
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_METHOD
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.concurrent.atomic.AtomicLong nextTextureId
org.threeten.bp.chrono.HijrahChronology: org.threeten.bp.chrono.HijrahChronology INSTANCE
org.threeten.bp.chrono.HijrahDate: java.lang.String PATH_SEP
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER
io.flutter.plugin.editing.TextInputPlugin: android.util.SparseArray mAutofillConfigurations
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl this$0
androidx.core.app.NotificationCompat$BigPictureStyle: android.graphics.Bitmap mPicture
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentInfo
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: java.util.Deque pendingEvents
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES
org.threeten.bp.chrono.JapaneseChronology: java.util.Locale LOCALE
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NAME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANCE
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: char[] chars
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataUri
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource Uri
org.threeten.bp.chrono.JapaneseChronology$1: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
org.threeten.bp.temporal.IsoFields$1: int[] $SwitchMap$org$threeten$bp$temporal$IsoFields$Unit
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_DESCRIPTION
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.Gson gson
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
android.support.v4.os.ResultReceiver$MyRunnable: android.os.Bundle mResultData
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
org.threeten.bp.LocalTime$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader imageReader
io.flutter.view.AccessibilityBridge$SemanticsNode: float left
androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates
androidx.media.app.NotificationCompat$MediaStyle: android.support.v4.media.session.MediaSessionCompat$Token mToken
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterSplashView flutterSplashView
io.flutter.embedding.android.FlutterView: boolean isFlutterUiDisplayed
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger binaryMessenger
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_WEEKLY_AT_DAY_AND_TIME_METHOD
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
io.flutter.view.AccessibilityBridge: boolean isReleased
com.google.gson.stream.JsonWriter: boolean htmlSafe
org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser INSTANCE_ID
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit MICROS
org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: java.lang.String noOffsetText
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind background
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mActions
org.threeten.bp.Duration: int nanos
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int top
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.LocalDate isoDate
androidx.core.R$id: int notification_background
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: boolean val$response
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.Long timestamp
androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State
io.flutter.Log: int VERBOSE
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser STRICT
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection LTR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_METHOD
org.threeten.bp.zone.ZoneOffsetTransitionRule: int adjustDays
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String id
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek[] $VALUES
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalHeight
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isSigned
androidx.core.graphics.drawable.IconCompat: int mInt1
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime MIDNIGHT
com.google.gson.JsonNull: com.google.gson.JsonNull INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LINES
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField DAY_OF_MONTH
io.flutter.plugin.platform.PlatformPlugin$1: io.flutter.plugin.platform.PlatformPlugin this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingBottom
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SELECTED
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_GREEN
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map messageHandlers
com.google.gson.internal.Streams$AppendableWriter: com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents Time
androidx.media.AudioAttributesImplApi21: int mLegacyStreamType
com.google.gson.internal.Excluder$1: com.google.gson.reflect.TypeToken val$type
io.flutter.view.AccessibilityBridge$SemanticsNode: int currentValueLength
io.flutter.view.AccessibilityBridge$4: android.view.accessibility.AccessibilityManager val$accessibilityManager
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver$1: com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver this$0
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.LocalDate isoDate
androidx.media.AudioAttributesImplBase$Builder: int mFlags
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel$Reply callback
com.google.gson.stream.JsonReader: boolean lenient
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map contentProviderAwarePlugins
androidx.collection.ContainerHelpers: long[] EMPTY_LONGS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency scheduledNotificationRepeatFrequency
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonPrimitive SENTINEL_CLOSED
org.threeten.bp.ZoneId: org.threeten.bp.temporal.TemporalQuery FROM
io.flutter.embedding.android.FlutterSplashView: java.lang.String TAG
org.threeten.bp.format.DateTimeFormatterBuilder: boolean optional
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle SHORT_STANDALONE
androidx.core.app.NotificationCompatJellybean: java.lang.Object sExtrasLock
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE
com.google.gson.internal.reflect.ReflectionAccessor: com.google.gson.internal.reflect.ReflectionAccessor instance
org.threeten.bp.format.DateTimePrintContext: org.threeten.bp.temporal.TemporalAccessor temporal
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUT
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer iconResourceId
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.media.R$layout: int notification_media_action
org.threeten.bp.format.DateTimeParseException: java.lang.String parsedString
io.flutter.view.VsyncWaiter$1$1: long val$cookie
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String subText
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long millisecondsSinceEpoch
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugin.editing.InputConnectionAdaptor: boolean mMonitorCursorUpdate
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle FULL
androidx.core.app.NotificationCompat$Builder: android.app.Notification mNotification
org.threeten.bp.Month: org.threeten.bp.Month JUNE
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides BOTH
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONGOING
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.SoundSource soundSource
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState
android.support.v4.media.session.MediaSessionCompat$Token: androidx.versionedparcelable.VersionedParcelable mSession2Token
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float xPrecision
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.collection.SimpleArrayMap: java.lang.Object[] mBaseCache
org.threeten.bp.LocalDateTime: org.threeten.bp.temporal.TemporalQuery FROM
androidx.core.text.BidiFormatter$Builder: boolean mIsRtlContext
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action COPY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ADDITIONAL_FLAGS
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
com.google.gson.internal.bind.TypeAdapters$34: com.google.gson.TypeAdapter val$typeAdapter
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_FACTORY
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL
org.threeten.bp.chrono.ChronoZonedDateTime$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
org.threeten.bp.Instant: org.threeten.bp.temporal.TemporalQuery FROM
org.threeten.bp.Clock$SystemClock: org.threeten.bp.ZoneId zone
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler
com.google.gson.GsonBuilder: java.util.List hierarchyFactories
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1 this$1
android.support.v4.os.ResultReceiver: android.support.v4.os.IResultReceiver mReceiver
io.flutter.embedding.android.FlutterImageView$1: int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind
com.google.gson.stream.JsonReader: int peeked
org.threeten.bp.OffsetDateTime: org.threeten.bp.LocalDateTime dateTime
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String nativeLibraryDir
com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.reflect.ReflectionAccessor accessor
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int id
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.view.inputmethod.InputMethodManager inputMethodManager
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map pendingReplies
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery PRECISION
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN
org.threeten.bp.format.DateTimeParseContext: boolean strict
org.threeten.bp.chrono.JapaneseChronology: java.util.Map ERA_NARROW_NAMES
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onSaveInstanceStateListeners
androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent
io.flutter.embedding.android.FlutterSurfaceView: boolean isAttachedToFlutterRenderer
com.google.gson.internal.ConstructorConstructor$14: java.lang.Class val$rawType
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.Boolean groupConversation
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: float[] radiis
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver: android.os.Bundle mExtras
org.threeten.bp.format.DateTimePrintContext$1: org.threeten.bp.chrono.ChronoLocalDate val$effectiveDate
android.support.v4.media.MediaDescriptionCompat: android.media.MediaDescription mDescriptionFwk
androidx.activity.ImmLeaksCleaner: android.app.Activity mActivity
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.MotionEventTracker motionEventTracker
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_ERROR_CODE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.String actionLabel
androidx.core.app.NotificationCompat$Builder: boolean mLocalOnly
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableVibration
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CURRENCY
org.threeten.bp.YearMonth: int year
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.lang.String viewType
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$2: int val$tries
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String NAME
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_VIBRATION
io.flutter.embedding.android.FlutterView$3: io.flutter.embedding.android.FlutterView this$0
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler
org.threeten.bp.zone.StandardZoneRules: org.threeten.bp.ZoneOffset[] standardOffsets
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PRIORITY
io.flutter.embedding.android.FlutterSurfaceView: android.view.SurfaceHolder$Callback surfaceCallback
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int buttonState
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN
com.google.gson.Gson: boolean prettyPrinting
com.google.gson.internal.bind.JsonTreeWriter: java.io.Writer UNWRITABLE_WRITER
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy DEFAULT
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.PlaybackStateCompat: long mActions
androidx.core.app.NotificationCompat$Builder: boolean mColorized
org.threeten.bp.chrono.Chronology: java.util.concurrent.ConcurrentHashMap CHRONOS_BY_TYPE
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.platform.PlatformViewsController platformViewsController
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField ALIGNED_WEEK_OF_MONTH
androidx.collection.MapCollections$EntrySet: androidx.collection.MapCollections this$0
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType
org.threeten.bp.format.DateTimeFormatter: java.util.Set resolverFields
com.google.gson.stream.JsonReader: long peekedLong
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int mPlaybackType
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledColor
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int id
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.plugin.mouse.MouseCursorPlugin: java.util.HashMap systemCursorConstants
org.threeten.bp.zone.ZoneOffsetTransition: org.threeten.bp.ZoneOffset offsetAfter
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter SHORT
org.threeten.bp.temporal.ValueRange: long maxLargest
android.support.v4.media.session.MediaSessionCompat$Token: java.lang.Object mInner
io.flutter.plugin.platform.PlatformPlugin: android.app.Activity activity
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface renderSurface
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String isolateSnapshotData
io.flutter.plugin.platform.VirtualDisplayController$1: io.flutter.plugin.platform.VirtualDisplayController this$0
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] $VALUES
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int mMaxVolume
io.flutter.plugin.platform.PlatformViewsController: android.view.View flutterView
com.google.gson.internal.ConstructorConstructor$1: java.lang.reflect.Type val$type
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String title
io.flutter.embedding.engine.FlutterEngine: java.util.Set engineLifecycleListeners
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingRight
io.flutter.plugin.platform.PlatformPlugin$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
io.flutter.plugin.platform.PlatformViewsController$1$1: io.flutter.plugin.platform.VirtualDisplayController val$vdController
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel this$0
com.google.gson.internal.JsonReaderInternalAccess: com.google.gson.internal.JsonReaderInternalAccess INSTANCE
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_ORDINAL_DATE
com.google.gson.internal.ConstructorConstructor$14: java.lang.reflect.Type val$type
io.flutter.view.AccessibilityBridge: int previousRouteId
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String name
com.dexterous.flutterlocalnotifications.models.NotificationDetails: long[] vibrationPattern
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource FlutterBitmapAsset
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.nio.ByteBuffer params
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource DrawableResource
org.threeten.bp.chrono.JapaneseEra: int eraValue
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_RED
org.threeten.bp.Year$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
com.google.gson.stream.JsonWriter: java.lang.String[] REPLACEMENT_CHARS
com.google.gson.stream.JsonReader: int lineNumber
org.threeten.bp.Month: org.threeten.bp.Month MAY
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.BitmapSource largeIconBitmapSource
androidx.core.app.NotificationCompat$Builder: int mVisibility
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra BE
androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionBase
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mValue
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ENUM_FACTORY
org.threeten.bp.Duration: java.math.BigInteger BI_NANOS_PER_SECOND
org.threeten.bp.YearMonth: org.threeten.bp.temporal.TemporalQuery FROM
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.util.Map$Entry cachedSubstringTree
android.support.v4.media.session.MediaSessionCompat$QueueItem: long mId
androidx.core.app.NotificationCompat$Builder: boolean mAllowSystemGeneratedContextualActions
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int resourceId
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder DEFAULT
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DOTS
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
io.flutter.plugin.platform.PlatformViewsController: int nextOverlayLayerId
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node parent
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode
com.google.gson.internal.bind.DateTypeAdapter: java.util.List dateFormats
android.support.v4.media.MediaBrowserCompat$ItemReceiver: java.lang.String mMediaId
androidx.core.app.NotificationCompat$Builder: int mProgressMax
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] DEFAULT_MONTH_LENGTHS
androidx.core.app.NotificationCompat$Builder: java.lang.String mCategory
android.support.v4.media.MediaDescriptionCompat: android.graphics.Bitmap mIcon
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_ALPHA
org.threeten.bp.MonthDay$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
com.google.gson.JsonObject: com.google.gson.internal.LinkedTreeMap members
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingLeft
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField ALIGNED_DAY_OF_WEEK_IN_MONTH
androidx.core.app.Person: java.lang.CharSequence mName
androidx.core.app.NotificationCompat$Builder: int mPriority
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
androidx.media.R$integer: int cancel_button_image_alpha
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$3: int[] $SwitchMap$com$dexterous$flutterlocalnotifications$RepeatInterval
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.google.gson.internal.LazilyParsedNumber: java.lang.String value
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollIndex
com.google.gson.internal.bind.JsonTreeWriter: java.lang.String pendingName
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.internal.bind.MapTypeAdapterFactory this$0
androidx.fragment.app.Fragment$2: androidx.fragment.app.Fragment this$0
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen splashScreen
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_DATE_TIME
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat mIcon
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry
org.threeten.bp.zone.TzdbZoneRulesProvider: java.util.concurrent.ConcurrentNavigableMap versions
io.flutter.plugin.mouse.MouseCursorPlugin$2: io.flutter.plugin.mouse.MouseCursorPlugin this$0
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] DEFAULT_LEAP_MONTH_LENGTHS
androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery CHRONO
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.ResultReceiver mResultReceiver
androidx.core.app.NotificationCompat$Style: java.lang.CharSequence mBigContentTitle
androidx.media.app.NotificationCompat$MediaStyle: android.app.PendingIntent mCancelButtonIntent
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE
com.google.gson.internal.Excluder$1: boolean val$skipDeserialize
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String engineCachesPath
org.threeten.bp.chrono.HijrahDate: java.lang.String DEFAULT_CONFIG_PATH
io.flutter.plugin.localization.LocalizationPlugin$1: io.flutter.plugin.localization.LocalizationPlugin this$0
org.threeten.bp.MonthDay: org.threeten.bp.temporal.TemporalQuery FROM
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sNextServedViewField
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText mExtractedText
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Messaging
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
org.threeten.bp.format.DateTimeBuilder: org.threeten.bp.chrono.ChronoLocalDate date
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] ADJUSTED_MAX_VALUES
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: com.google.gson.Gson val$context
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PERSON
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousValue
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUB_TEXT
org.threeten.bp.Month$2: int[] $SwitchMap$org$threeten$bp$Month
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_LINES
com.google.gson.Gson: boolean serializeSpecialFloatingPointValues
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager windowManager
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViewParent
io.flutter.embedding.android.FlutterSplashView$1: io.flutter.embedding.android.FlutterSplashView this$0
androidx.core.R$string: int status_bar_notification_info_overflow
io.flutter.embedding.engine.dart.DartExecutor: android.content.res.AssetManager assetManager
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_ON_MS
com.google.gson.internal.ConstructorConstructor$3: java.lang.reflect.Constructor val$constructor
android.support.v4.media.session.ParcelableVolumeInfo: int volumeType
androidx.core.app.NotificationCompat$Builder: int mColor
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowViewGroup
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: int minWidth
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel channel
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy STRING
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: android.view.View view
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField MONTH_OF_YEAR
androidx.core.app.BundleCompat$BundleCompatBaseImpl: boolean sGetIBinderMethodFetched
io.flutter.embedding.engine.renderer.FlutterRenderer$1: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
android.support.v4.media.MediaDescriptionCompat: android.net.Uri mIconUri
org.threeten.bp.chrono.JapaneseEra: org.threeten.bp.chrono.JapaneseEra MEIJI
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] transform
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter INET_ADDRESS
androidx.core.app.NotificationManagerCompat$NotifyTask: android.app.Notification notif
com.google.gson.stream.JsonReader: int limit
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULED_NOTIFICATIONS
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.reflect.TypeToken typeToken
org.threeten.bp.format.DateTimeFormatterBuilder$TextPrinterParser: org.threeten.bp.temporal.TemporalField field
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedTreeMap this$0
org.threeten.bp.format.DateTimeFormatterBuilder$TextPrinterParser: org.threeten.bp.format.DateTimeTextProvider provider
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BYTE
io.flutter.view.AccessibilityBridge: java.util.Map customAccessibilityActions
org.threeten.bp.temporal.IsoFields: org.threeten.bp.temporal.TemporalField WEEK_BASED_YEAR
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: java.lang.reflect.Type type
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND_SOURCE
org.threeten.bp.chrono.JapaneseEra: org.threeten.bp.chrono.JapaneseEra TAISHO
org.threeten.bp.zone.TzdbZoneRulesProvider$Version: java.lang.String versionId
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_DAILY_AT_TIME_METHOD
org.threeten.bp.DayOfWeek: org.threeten.bp.temporal.TemporalQuery FROM
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.util.ArrayList messages
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_METHOD
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.Excluder excluder
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean engineHasProvidedData
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect globalRect
com.google.gson.internal.bind.ObjectTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BIG_INTEGER
io.flutter.view.AccessibilityBridge$SemanticsNode: int actions
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.google.gson.Gson: boolean lenient
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type PLATFORM_VIEW
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long timeoutAfter
org.threeten.bp.Ser: byte type
org.threeten.bp.chrono.Chronology: java.lang.reflect.Method LOCALE_METHOD
org.threeten.bp.zone.ZoneRulesProvider: java.util.concurrent.ConcurrentMap ZONES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DAY
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int edgeFlags
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SLIDER
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler
com.google.gson.Gson: java.util.List builderFactories
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $VALUES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer maxProgress
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CATEGORY
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: java.lang.String name
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle[] $VALUES
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode
org.threeten.bp.Month: org.threeten.bp.Month[] ENUMS
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map componentNameToResults
io.flutter.embedding.engine.loader.FlutterLoader: long initStartTimestampMillis
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PAYLOAD
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek SATURDAY
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesImpl$Builder mBuilderImpl
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver: java.lang.String mQuery
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String icon
androidx.collection.SimpleArrayMap: int mTwiceBaseCacheSize
io.flutter.plugin.common.BasicMessageChannel: java.lang.String name
android.support.v4.media.RatingCompat: int mRatingStyle
android.support.v4.media.RatingCompat: float mRatingValue
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer groupAlertBehavior
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showProgress
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit HOURS
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField YEAR_OF_ERA
android.support.v4.os.ResultReceiver$MyRunnable: int mResultCode
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence title
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField YEAR
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra ROC
android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.IMediaControllerCallback mIControllerCallback
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource[] $VALUES
org.threeten.bp.LocalDate$2: int[] $SwitchMap$org$threeten$bp$temporal$ChronoField
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField ALIGNED_WEEK_OF_YEAR
androidx.arch.core.internal.SafeIterableMap: int mSize
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter STRING
androidx.core.app.NotificationCompatBuilder: android.app.Notification$Builder mBuilder
android.support.v4.media.session.ParcelableVolumeInfo: int controlType
io.flutter.view.AccessibilityBridge$3: io.flutter.view.AccessibilityBridge this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer visibility
org.threeten.bp.Year: org.threeten.bp.temporal.TemporalQuery FROM
android.support.v4.media.session.PlaybackStateCompat: float mSpeed
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit YEARS
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode transparent
org.threeten.bp.YearMonth: org.threeten.bp.format.DateTimeFormatter PARSER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_BLUE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TEXT
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter ATOMIC_INTEGER
android.support.v4.media.session.PlaybackStateCompat: long mBufferedPosition
androidx.core.app.NotificationCompat$Action: boolean mIsContextual
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List customAccessibilityActions
io.flutter.view.AccessibilityBridge$Action: int value
io.flutter.embedding.android.FlutterTextureView: android.view.TextureView$SurfaceTextureListener surfaceTextureListener
com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean allowWhileIdle
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterView flutterView
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine flutterEngine
com.google.gson.internal.bind.TypeAdapters$32: com.google.gson.TypeAdapter val$typeAdapter
org.threeten.bp.chrono.ChronoLocalDate: java.util.Comparator DATE_COMPARATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetTop
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String appStoragePath
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngine flutterEngine
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String uri
com.google.gson.stream.JsonReader: int pos
org.threeten.bp.ZoneOffset: int totalSeconds
androidx.core.app.NotificationCompat$Builder: boolean mColorizedSet
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter ISO_LOCAL_DATE_TIME
org.threeten.bp.format.SimpleDateTimeTextProvider: java.util.Comparator COMPARATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT_TITLE
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode texture
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field DAY_OF_QUARTER
io.flutter.embedding.android.DrawableSplashScreen: io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView splashView
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.ResolverStyle resolverStyle
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD
com.google.gson.internal.UnsafeAllocator$3: java.lang.reflect.Method val$newInstance
androidx.media.AudioAttributesImplBase: int mContentType
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MAX_PROGRESS
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
org.threeten.bp.zone.TzdbZoneRulesProvider: java.util.Set loadedUrls
io.flutter.view.AccessibilityBridge: java.util.Map flutterSemanticsTree
androidx.core.app.NotificationCompat$Builder: android.app.PendingIntent mFullScreenIntent
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField SECOND_OF_DAY
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser LENIENT
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel channel
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CALENDAR_FACTORY
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LTR
androidx.core.app.NotificationCompat$BigPictureStyle: boolean mBigLargeIconSet
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String tag
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
org.threeten.bp.temporal.ChronoUnit: java.lang.String name
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor
org.threeten.bp.Month: org.threeten.bp.Month SEPTEMBER
com.google.gson.stream.JsonWriter: java.io.Writer out
androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Builder mBuilder
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedOverlayLayerIds
androidx.core.app.RemoteActionCompat: boolean mShouldShowIcon
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle NORMAL
io.flutter.plugin.editing.ListenableEditingState: int mComposingEndWhenBeginBatchEdit
org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser: org.threeten.bp.format.DateTimeFormatterBuilder$DateTimePrinterParser[] printerParsers
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener flutterEngineAttachmentListener
org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: int type
io.flutter.view.AccessibilityBridge: java.lang.Integer lastLeftFrameInset
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int mVolumeControl
org.threeten.bp.ZoneOffset: java.util.concurrent.ConcurrentMap SECONDS_CACHE
android.support.v4.media.MediaDescriptionCompat$Builder: android.os.Bundle mExtras
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_DRAWABLE_RESOURCE_ERROR_MESSAGE
com.google.gson.internal.bind.TypeAdapters$35: java.lang.Class val$clazz
androidx.core.text.BidiFormatter$Builder: androidx.core.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView flutterView
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: io.flutter.embedding.engine.systemchannels.PlatformChannel this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
org.threeten.bp.Year: int year
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory LOCALE_FACTORY
com.google.gson.Gson: com.google.gson.reflect.TypeToken NULL_KEY_SURROGATE
com.google.gson.internal.Excluder: int modifiers
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.AndroidKeyProcessor androidKeyProcessor
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String mDataMimeType
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalWidth
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZoneOffset offset
com.google.gson.internal.bind.SqlDateTypeAdapter: java.text.DateFormat format
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer importance
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray overlayLayerViews
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView flutterImageView
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String contentTitle
androidx.media.AudioAttributesCompat: int[] SDK_USAGES
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: float devicePixelRatio
org.threeten.bp.format.DateTimeBuilder: org.threeten.bp.ZoneId zone
android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence mSubtitle
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_METHOD
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.TypeAdapter valueTypeAdapter
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatTitle
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterTextureView flutterTextureView
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.Observer mObserver
androidx.media.R$id: int media_actions
org.threeten.bp.format.DateTimePrintContext: int optional
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.DateTimeComponents matchDateTimeComponents
org.threeten.bp.chrono.HijrahDate: int monthOfYear
org.threeten.bp.chrono.HijrahDate: int[] CYCLEYEAR_START_DATE
com.google.gson.stream.JsonReader: int lineStart
org.threeten.bp.chrono.MinguoChronology: org.threeten.bp.chrono.MinguoChronology INSTANCE
androidx.core.app.NotificationCompat$Builder: boolean mSilent
androidx.media.AudioAttributesImplBase$Builder: int mUsage
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable val$self
androidx.core.app.NotificationCompatJellybean: java.lang.Object sActionsLock
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel this$0
io.flutter.embedding.android.FlutterSplashView: android.view.View splashScreenView
androidx.core.text.BidiFormatter: int mFlags
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT
org.threeten.bp.chrono.HijrahDate: java.util.HashMap ADJUSTED_CYCLE_YEARS
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.support.v4.app.INotificationSideChannel sDefaultImpl
org.threeten.bp.ZonedDateTime: org.threeten.bp.temporal.TemporalQuery FROM
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action TAP
io.flutter.embedding.android.FlutterSurfaceView: boolean isSurfaceAvailableForRendering
androidx.core.app.NotificationCompat$Style: java.lang.CharSequence mSummaryText
com.google.gson.GsonBuilder: boolean complexMapKeySerialization
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOffMs
org.threeten.bp.LocalDate: org.threeten.bp.temporal.TemporalQuery FROM
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String key
org.threeten.bp.zone.ZoneRulesInitializer: java.util.concurrent.atomic.AtomicBoolean INITIALIZED
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String pathToBundle
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
android.support.v4.media.MediaBrowserCompat$MediaItem: android.support.v4.media.MediaDescriptionCompat mDescription
androidx.core.R$dimen: int notification_subtext_size
io.flutter.embedding.android.MotionEventTracker: java.util.PriorityQueue unusedEvents
org.threeten.bp.Ser: void writeInternal(byte,java.lang.Object,java.io.DataOutput)
android.support.v4.media.session.MediaSessionCompat$QueueItem: MediaSessionCompat$QueueItem(android.media.session.MediaSession$QueueItem,android.support.v4.media.MediaDescriptionCompat,long)
org.threeten.bp.MonthDay: void writeExternal(java.io.DataOutput)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean has(java.lang.Class)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String toString()
org.threeten.bp.ZonedDateTime: org.threeten.bp.chrono.ChronoZonedDateTime with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewAttachedToWindow(android.view.View)
androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
org.threeten.bp.ZoneOffset: boolean isSupported(org.threeten.bp.temporal.TemporalField)
androidx.core.app.NotificationCompat$InboxStyle: NotificationCompat$InboxStyle()
org.threeten.bp.chrono.JapaneseEra: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
androidx.savedstate.SavedStateRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onSaveInstanceState(android.os.Bundle)
org.threeten.bp.Period: java.lang.String toString()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
io.flutter.plugin.editing.TextInputPlugin: void access$100(io.flutter.plugin.editing.TextInputPlugin,android.view.View)
org.threeten.bp.ZonedDateTime: org.threeten.bp.chrono.ChronoZonedDateTime minus(long,org.threeten.bp.temporal.TemporalUnit)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onShuffleModeChangedRemoved(boolean)
org.threeten.bp.YearMonth: org.threeten.bp.YearMonth with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
org.threeten.bp.LocalTime: int hashCode()
com.dexterous.flutterlocalnotifications.NotificationStyle: NotificationStyle(java.lang.String,int)
io.flutter.plugin.editing.TextInputPlugin: boolean needsAutofill()
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: void connectSurfaceToRenderer()
org.threeten.bp.jdk8.DefaultInterfaceEra: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
io.flutter.embedding.android.FlutterImageView: boolean acquireLatestImage()
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte dirTypeForward()
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()
androidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)
android.support.v4.media.session.MediaSessionCompat$Token: void writeToParcel(android.os.Parcel,int)
com.google.gson.internal.bind.TypeAdapters$13: java.lang.Number read(com.google.gson.stream.JsonReader)
org.threeten.bp.OffsetDateTime: org.threeten.bp.OffsetDateTime with(org.threeten.bp.LocalDateTime,org.threeten.bp.ZoneOffset)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDestroyView()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityForConfigChanges()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onSaveInstanceState(android.os.Bundle)
com.google.gson.internal.bind.ArrayTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$16: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsPaused()
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.ChronoLocalDate with(org.threeten.bp.temporal.TemporalAdjuster)
androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: java.lang.String toString()
org.threeten.bp.chrono.Chronology: void writeExternal(java.io.DataOutput)
io.flutter.plugin.localization.LocalizationPlugin: void sendLocalesToFlutter(android.content.res.Configuration)
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: int parse(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void sendLocales(java.util.List)
io.flutter.plugin.common.FlutterException: FlutterException(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2402(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToActivity()
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl: TreeTypeAdapter$GsonContextImpl(com.google.gson.internal.bind.TreeTypeAdapter)
io.flutter.embedding.android.FlutterImageView: void pause()
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)
android.support.v4.media.RatingCompat$1: android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel)
org.threeten.bp.ZonedDateTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
android.support.v4.media.session.IMediaControllerCallback$Stub: IMediaControllerCallback$Stub()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
org.threeten.bp.LocalDate: java.lang.Object writeReplace()
androidx.core.graphics.drawable.IconCompat: void onPostParceling()
io.flutter.plugin.platform.PlatformViewsController: void attachToView(android.view.View)
com.google.gson.internal.ConstructorConstructor$10: ConstructorConstructor$10(com.google.gson.internal.ConstructorConstructor)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.ZoneId getZone()
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.ChronoLocalDate minus(long,org.threeten.bp.temporal.TemporalUnit)
com.google.gson.JsonNull: int hashCode()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onNewIntent(android.content.Intent)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: boolean isSupported(org.threeten.bp.temporal.TemporalField)
androidx.media.AudioAttributesImplBase: java.lang.String toString()
com.google.gson.internal.bind.TypeAdapters$22: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: int checkPattern(java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewAttached(android.view.View)
org.threeten.bp.format.SimpleDateTimeTextProvider$1: int compare(java.util.Map$Entry,java.util.Map$Entry)
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable getVersionedParcel()
com.google.gson.stream.JsonReader: boolean isLiteral(char)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: LifecycleChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.versionedparcelable.VersionedParcelParcel: void writeInt(int)
org.threeten.bp.temporal.ValueRange: org.threeten.bp.temporal.ValueRange of(long,long)
org.threeten.bp.ZonedDateTime: int hashCode()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
org.threeten.bp.OffsetDateTime: int get(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.Duration: java.lang.Object writeReplace()
com.google.gson.internal.ConstructorConstructor$14: ConstructorConstructor$14(com.google.gson.internal.ConstructorConstructor,java.lang.Class,java.lang.reflect.Type)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginArray()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)
org.threeten.bp.format.DateTimeParseContext: boolean isStrict()
io.flutter.plugin.editing.TextInputPlugin$2: TextInputPlugin$2(io.flutter.plugin.editing.TextInputPlugin,boolean,double[],double[])
io.flutter.embedding.android.FlutterView$2: FlutterView$2(io.flutter.embedding.android.FlutterView)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void search(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2900(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: DateTimeFormatterBuilder$SettingsParser(java.lang.String,int)
com.google.gson.internal.bind.TypeAdapters$16: TypeAdapters$16()
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.google.gson.internal.bind.TypeAdapters$11: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.embedding.engine.dart.DartMessenger: void handleMessageFromDart(java.lang.String,byte[],int)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent access$300(io.flutter.view.AccessibilityBridge,int,int)
io.flutter.embedding.android.FlutterActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.engine.renderer.FlutterRenderer$1: FlutterRenderer$1(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel()
androidx.core.app.Person: boolean isBot()
com.google.gson.internal.bind.SqlDateTypeAdapter$1: SqlDateTypeAdapter$1()
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object)
org.threeten.bp.zone.ZoneOffsetTransition: org.threeten.bp.ZoneOffset getOffsetBefore()
androidx.versionedparcelable.VersionedParcelParcel: void closeField()
com.google.gson.internal.ConstructorConstructor$5: ConstructorConstructor$5(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Type)
org.threeten.bp.OffsetTime: boolean equals(java.lang.Object)
org.threeten.bp.ZonedDateTime: org.threeten.bp.chrono.ChronoZonedDateTime withZoneSameLocal(org.threeten.bp.ZoneId)
org.threeten.bp.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: boolean print(org.threeten.bp.format.DateTimePrintContext,java.lang.StringBuilder)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
org.threeten.bp.zone.ZoneOffsetTransition: java.util.List getValidOffsets()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
org.threeten.bp.chrono.IsoChronology: java.lang.Object readResolve()
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
org.threeten.bp.OffsetDateTime: org.threeten.bp.OffsetDateTime ofInstant(org.threeten.bp.Instant,org.threeten.bp.ZoneId)
org.threeten.bp.zone.ZoneRules$Fixed: ZoneRules$Fixed(org.threeten.bp.ZoneOffset)
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void attachToNative(boolean)
org.threeten.bp.format.DecimalStyle: DecimalStyle(char,char,char,char)
com.google.gson.internal.UnsafeAllocator: UnsafeAllocator()
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()
com.google.gson.FieldNamingPolicy$4: java.lang.String translateName(java.lang.reflect.Field)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI access$200(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.models.NotificationDetails extractNotificationDetails(io.flutter.plugin.common.MethodChannel$Result,java.util.Map)
org.threeten.bp.chrono.ThaiBuddhistChronology: org.threeten.bp.chrono.ThaiBuddhistDate date(int,int,int)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTimeImpl with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate access$800(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.plugin.platform.PlatformViewsController: boolean validateDirection(int)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusWeeks(long)
org.threeten.bp.OffsetDateTime: void writeExternal(java.io.DataOutput)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void queueTask(androidx.core.app.NotificationManagerCompat$Task)
io.flutter.embedding.android.FlutterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.String)
com.google.gson.internal.LinkedTreeMap$1: LinkedTreeMap$1()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
android.support.v4.media.session.MediaSessionCompat$Token: java.lang.Object getToken()
org.threeten.bp.chrono.MinguoChronology: java.lang.String getCalendarType()
org.threeten.bp.LocalDate: org.threeten.bp.chrono.ChronoLocalDateTime atTime(org.threeten.bp.LocalTime)
org.threeten.bp.Year: boolean isSupported(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
org.threeten.bp.chrono.ChronoZonedDateTime: ChronoZonedDateTime()
org.threeten.bp.LocalTime: int get0(org.threeten.bp.temporal.TemporalField)
androidx.core.app.Person: androidx.core.graphics.drawable.IconCompat getIcon()
org.threeten.bp.zone.StandardZoneRules: java.util.List getValidOffsets(org.threeten.bp.LocalDateTime)
org.threeten.bp.chrono.HijrahEra: long getLong(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.chrono.ThaiBuddhistChronology: org.threeten.bp.chrono.ChronoLocalDate date(org.threeten.bp.temporal.TemporalAccessor)
androidx.core.text.BidiFormatter: BidiFormatter(boolean,int,androidx.core.text.TextDirectionHeuristicCompat)
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
com.google.gson.internal.bind.JsonTreeWriter: void flush()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.String toString()
org.threeten.bp.chrono.ChronoZonedDateTime: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.text.BidiFormatter$DirectionalityEstimator: int getExitDir()
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine)
org.threeten.bp.Year$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateRepeatIntervalMilliseconds(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.android.FlutterActivity: void onStart()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalTime toLocalTime()
io.flutter.embedding.engine.dart.DartExecutor: void onAttachedToJNI()
org.threeten.bp.Instant: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
org.threeten.bp.DayOfWeek: int get(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.ChronoDateImpl plusYears(long)
com.google.gson.TypeAdapter$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setSelection(int,int)
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context)
io.flutter.embedding.android.SplashScreen: boolean doesSplashViewRememberItsTransition()
androidx.arch.core.internal.SafeIterableMap: java.lang.String toString()
androidx.core.app.NotificationCompat$MessagingStyle: boolean isGroupConversation()
org.threeten.bp.Year: org.threeten.bp.Year of(int)
org.threeten.bp.LocalDate: long toEpochDay()
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: char charAt(int)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()
org.threeten.bp.chrono.ChronoLocalDateTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
com.google.gson.internal.bind.TypeAdapters$29: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)
io.flutter.embedding.engine.FlutterEngine: void attachToJni()
org.threeten.bp.format.DateTimeParseContext$Parsed: long getLong(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder optionalEnd()
org.threeten.bp.Month: int minLength()
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Number)
org.threeten.bp.chrono.JapaneseChronology: java.lang.String getId()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void showNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.Log: void w(java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: RestorationChannel$2(io.flutter.embedding.engine.systemchannels.RestorationChannel)
com.google.gson.internal.Excluder: boolean isAnonymousOrLocal(java.lang.Class)
io.flutter.view.AccessibilityBridge: void handleTouchExploration(float,float)
com.google.gson.JsonPrimitive: int hashCode()
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$500(io.flutter.embedding.android.FlutterSplashView)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: INotificationSideChannel$Stub$Proxy(android.os.IBinder)
io.flutter.embedding.android.FlutterActivity: void onDestroy()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.gson.internal.LinkedTreeMap: java.lang.Object remove(java.lang.Object)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object setValue(java.lang.Object)
androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.net.Uri getDataUri()
io.flutter.plugin.common.StandardMessageCodec: StandardMessageCodec()
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$000(io.flutter.embedding.engine.dart.DartExecutor)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseDate minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.List)
com.google.gson.Gson$2: Gson$2(com.google.gson.Gson)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: MethodCallHandlerImpl(android.content.Context)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: PlatformViewsChannel$PlatformViewTouch(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long)
androidx.media.app.NotificationCompat$MediaStyle: int getBigContentViewLayoutResource(int)
com.google.gson.internal.ConstructorConstructor$12: java.lang.Object construct()
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.Chronology getChronology()
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: void writeExternal(java.io.ObjectOutput)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String findAppBundlePath()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context,float,io.flutter.embedding.android.AndroidTouchProcessor)
com.google.gson.internal.reflect.PreJava9ReflectionAccessor: PreJava9ReflectionAccessor()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[])
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: MethodCallHandlerImpl$1(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl,android.content.SharedPreferences$Editor,io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.chrono.JapaneseEra: org.threeten.bp.chrono.JapaneseEra[] values()
org.threeten.bp.OffsetTime: org.threeten.bp.OffsetTime with(org.threeten.bp.temporal.TemporalAdjuster)
com.google.gson.internal.bind.TypeAdapters$6: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle valueOf(java.lang.String)
org.threeten.bp.MonthDay: int hashCode()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: PlatformChannel$Brightness(java.lang.String,int,java.lang.String)
org.threeten.bp.format.DateTimeFormatterBuilder$2: java.lang.String getText(org.threeten.bp.temporal.TemporalField,long,org.threeten.bp.format.TextStyle,java.util.Locale)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: PlaybackStateCompat$CustomAction(android.os.Parcel)
io.flutter.plugin.common.StandardMessageCodec: int readSize(java.nio.ByteBuffer)
com.google.gson.internal.bind.TypeAdapters$6: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipEntityBackward()
androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])
org.threeten.bp.Duration: org.threeten.bp.Duration create(long,int)
com.google.gson.internal.bind.DateTypeAdapter: java.util.Date deserializeToDate(java.lang.String)
org.threeten.bp.format.DateTimeParseContext: DateTimeParseContext(org.threeten.bp.format.DateTimeParseContext)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLedInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: void reply(java.nio.ByteBuffer)
com.google.gson.FieldNamingPolicy$1: java.lang.String translateName(java.lang.reflect.Field)
org.threeten.bp.Year: java.lang.String toString()
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class)
org.threeten.bp.chrono.Chronology: void register(org.threeten.bp.chrono.Chronology)
org.threeten.bp.format.DateTimeBuilder: void resolveTimeInferZeroes(org.threeten.bp.format.ResolverStyle)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
org.threeten.bp.zone.TzdbZoneRulesProvider: java.util.Set provideZoneIds()
androidx.core.text.BidiFormatter: int getEntryDir(java.lang.CharSequence)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel: PlatformChannel(io.flutter.embedding.engine.dart.DartExecutor)
org.threeten.bp.YearMonth: int get(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.google.gson.internal.$Gson$Types: java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)
io.flutter.plugin.editing.ListenableEditingState: ListenableEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View)
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void teardown()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsInactive()
org.threeten.bp.zone.StandardZoneRules: boolean isFixedOffset()
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onMeasure(int,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.platform.PlatformViewsController: void access$1200(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.lang.String toString()
androidx.collection.MapCollections$MapIterator: boolean hasNext()
androidx.core.app.NotificationCompat$Builder: long getWhenIfShowing()
android.support.v4.media.RatingCompat$1: android.support.v4.media.RatingCompat[] newArray(int)
org.threeten.bp.chrono.ThaiBuddhistChronology: java.lang.String getCalendarType()
io.flutter.plugin.editing.TextInputPlugin: void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)
org.threeten.bp.temporal.ValueRange: int checkValidIntValue(long,org.threeten.bp.temporal.TemporalField)
org.threeten.bp.DayOfWeek: DayOfWeek(java.lang.String,int)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)
io.flutter.plugin.editing.FlutterTextUtils: boolean isRegionalIndicatorSymbol(int)
io.flutter.embedding.android.FlutterActivity: boolean shouldRestoreAndSaveState()
org.threeten.bp.jdk8.DefaultInterfaceTemporal: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[])
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
android.support.v4.media.session.MediaSessionCompat$Token: MediaSessionCompat$Token(java.lang.Object,android.support.v4.media.session.IMediaSession,androidx.versionedparcelable.VersionedParcelable)
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: boolean equals(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$8: void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicInteger)
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance()
org.threeten.bp.temporal.IsoFields$Field$1: IsoFields$Field$1(java.lang.String,int)
com.google.gson.internal.bind.TypeAdapters$27: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.YearMonth: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder parseCaseInsensitive()
com.google.gson.internal.bind.TypeAdapters$7: TypeAdapters$7()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean doPerformContextMenuAction(int)
org.threeten.bp.LocalDate$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void invokeViewFocused(int)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: MouseCursorChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngine get(java.lang.String)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: int hashCode()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord)
org.threeten.bp.format.DecimalStyle: java.lang.String convertNumberToI18N(java.lang.String)
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.embedding.android.FlutterView: void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean)
com.google.gson.internal.bind.TypeAdapters$26$1: void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp)
android.support.v4.media.RatingCompat: java.lang.String toString()
io.flutter.view.AccessibilityBridge$2: AccessibilityBridge$2(io.flutter.view.AccessibilityBridge)
com.google.gson.Gson$3: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()
android.support.v4.os.ResultReceiver$MyResultReceiver: ResultReceiver$MyResultReceiver(android.support.v4.os.ResultReceiver)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder appendText(org.threeten.bp.temporal.TemporalField,java.util.Map)
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime of(int,int,int,int,int,int,int)
org.threeten.bp.zone.ZoneRulesInitializer: void setInitializer(org.threeten.bp.zone.ZoneRulesInitializer)
androidx.collection.MapCollections: MapCollections()
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.ChronoLocalDate plus(org.threeten.bp.temporal.TemporalAmount)
org.threeten.bp.zone.ZoneRulesException: ZoneRulesException(java.lang.String,java.lang.Throwable)
io.flutter.embedding.android.FlutterSurfaceView: boolean access$100(io.flutter.embedding.android.FlutterSurfaceView)
org.threeten.bp.LocalDateTime: int hashCode()
androidx.media.app.NotificationCompat$MediaStyle: int getContentViewLayoutResource()
org.threeten.bp.YearMonth: int compareTo(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$23: void write(com.google.gson.stream.JsonWriter,java.net.InetAddress)
org.threeten.bp.OffsetTime: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
org.threeten.bp.ZoneRegion: java.lang.String getId()
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder appendValue(org.threeten.bp.temporal.TemporalField,int,int,org.threeten.bp.format.SignStyle)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel()
androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()
io.flutter.embedding.engine.systemchannels.PlatformChannel: void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi()
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.TemporalAccessor resolve(java.util.Map,org.threeten.bp.temporal.TemporalAccessor,org.threeten.bp.format.ResolverStyle)
org.threeten.bp.chrono.ChronoPeriod: ChronoPeriod()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
androidx.collection.SimpleArrayMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateNextNotificationTrigger(long,long)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiDisplayed()
org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser: java.lang.String toString()
com.google.gson.internal.LinkedTreeMap$KeySet: boolean contains(java.lang.Object)
org.threeten.bp.chrono.ChronoLocalDate: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)
org.threeten.bp.OffsetTime: long getLong(org.threeten.bp.temporal.TemporalField)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle)
org.threeten.bp.chrono.JapaneseChronology: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.ChronoField)
com.google.gson.internal.bind.TypeAdapters$9: void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicBoolean)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: PlatformViewsChannel$PlatformViewCreationRequest(int,java.lang.String,double,double,int,java.nio.ByteBuffer)
org.threeten.bp.format.DateTimeFormatter$1: org.threeten.bp.Period queryFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.android.FlutterActivity: java.lang.String getDartEntrypointFunctionName()
org.threeten.bp.format.DateTimeParseContext$Parsed: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: boolean hasNext()
androidx.media.AudioAttributesImplBase: int getLegacyStreamType()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(boolean)
androidx.collection.MapCollections$KeySet: boolean contains(java.lang.Object)
com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)
org.threeten.bp.temporal.TemporalQueries$5: org.threeten.bp.ZoneOffset queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.bind.JsonTreeReader: void endArray()
org.threeten.bp.LocalDateTime: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDateTime)
org.threeten.bp.Period: org.threeten.bp.temporal.Temporal addTo(org.threeten.bp.temporal.Temporal)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasAction(io.flutter.view.AccessibilityBridge$Action)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: SingleViewPresentation$PresentationState()
io.flutter.view.AccessibilityBridge$SemanticsNode: void ensureInverseTransform()
androidx.arch.core.internal.SafeIterableMap$ListIterator: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.lifecycle.Lifecycle$Event: Lifecycle$Event(java.lang.String,int)
org.threeten.bp.LocalTime$1: LocalTime$1()
org.threeten.bp.Clock: Clock()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
io.flutter.embedding.android.FlutterSplashView$3: void run()
org.threeten.bp.format.DateTimeFormatterBuilder: int appendInternal(org.threeten.bp.format.DateTimeFormatterBuilder$DateTimePrinterParser)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityEnabled()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: FlutterMutatorsStack$FlutterMutatorType(java.lang.String,int)
org.threeten.bp.LocalTime: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: BasicMessageChannel$IncomingMessageHandler$1(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: void addEvent(android.view.KeyEvent)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
io.flutter.embedding.android.FlutterActivity: void onPause()
io.flutter.plugin.editing.TextInputPlugin$InputTarget: TextInputPlugin$InputTarget(io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type,int)
android.support.v4.os.IResultReceiver$Stub$Proxy: android.os.IBinder asBinder()
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseEra getEra()
org.threeten.bp.Instant: int get(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.temporal.IsoFields$Field$4: org.threeten.bp.temporal.ValueRange rangeRefinedBy(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plusHours(long)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: void resetWillNotDraw(boolean,boolean)
android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()
io.flutter.embedding.android.FlutterSplashView$3: FlutterSplashView$3(io.flutter.embedding.android.FlutterSplashView)
org.threeten.bp.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: DateTimeFormatterBuilder$CharLiteralPrinterParser(char)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerDeviceTypeForToolType(int)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails from(java.util.Map)
org.threeten.bp.OffsetTime: org.threeten.bp.ZoneOffset getOffset()
org.threeten.bp.Month$1: Month$1()
com.google.gson.internal.bind.TypeAdapters$1: TypeAdapters$1()
org.threeten.bp.zone.ZoneRulesInitializer$ServiceLoaderZoneRulesInitializer: ZoneRulesInitializer$ServiceLoaderZoneRulesInitializer()
com.google.gson.internal.bind.TypeAdapters$28: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.text.BidiFormatter$Builder: void initialize(boolean)
org.threeten.bp.OffsetDateTime$1: org.threeten.bp.OffsetDateTime queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTimeImpl plus(long,org.threeten.bp.temporal.TemporalUnit)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onCaptioningEnabledChanged(boolean)
com.google.gson.internal.bind.TypeAdapters$9: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.chrono.ChronoZonedDateTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextString()
io.flutter.embedding.android.FlutterActivity: boolean stillAttachedForEvent(java.lang.String)
org.threeten.bp.ZoneId: int hashCode()
com.google.gson.JsonElement: boolean isJsonNull()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean isValidDrawableResource(android.content.Context,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: java.lang.Object writeReplace()
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.Temporal addTo(org.threeten.bp.temporal.Temporal,long)
io.flutter.plugin.platform.VirtualDisplayController$1$1: VirtualDisplayController$1$1(io.flutter.plugin.platform.VirtualDisplayController$1)
com.google.gson.Gson$2: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.LinkedTreeMap: void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)
android.support.v4.media.RatingCompat$1: java.lang.Object[] newArray(int)
androidx.core.app.NotificationCompat$Builder: int getColor()
com.google.gson.Gson: java.lang.String toString()
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onSessionReady()
io.flutter.plugin.platform.PlatformView: void onInputConnectionUnlocked()
androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewDetached()
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime parse(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
org.threeten.bp.DayOfWeek$1: org.threeten.bp.DayOfWeek queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.bind.TypeAdapters$13: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.view.AccessibilityBridge: void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean access$100(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
com.google.gson.reflect.TypeToken: int hashCode()
org.threeten.bp.Ser: java.lang.Object readInternal(byte,java.io.DataInput)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: TextInputChannel$InputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean)
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()
com.google.gson.internal.bind.TypeAdapters$11: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.format.DateTimeBuilder: void resolveInstant()
org.threeten.bp.chrono.ChronoLocalDate: boolean equals(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: int hashCode()
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] values()
org.threeten.bp.YearMonth: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
androidx.collection.MapCollections$KeySet: int size()
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: boolean print(org.threeten.bp.format.DateTimePrintContext,java.lang.StringBuilder)
com.google.gson.Gson$2: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,byte[])
com.google.gson.internal.bind.JsonTreeReader: void push(java.lang.Object)
org.threeten.bp.LocalDateTime: boolean isSupported(org.threeten.bp.temporal.TemporalField)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3000(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.collection.MapCollections$KeySet: boolean retainAll(java.util.Collection)
com.google.gson.internal.LinkedTreeMap$KeySet$1: java.lang.Object next()
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void pushRoute(java.lang.String)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseDate plus(org.threeten.bp.temporal.TemporalAmount)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahDate resolvePreviousValid(int,int,int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readMessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
org.threeten.bp.chrono.ThaiBuddhistEra: int getValue()
io.flutter.plugin.editing.ListenableEditingState: void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean)
org.threeten.bp.chrono.Chronology: org.threeten.bp.chrono.ChronoZonedDateTime zonedDateTime(org.threeten.bp.Instant,org.threeten.bp.ZoneId)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
com.google.gson.internal.bind.TypeAdapters$25: java.util.Currency read(com.google.gson.stream.JsonReader)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.plugin.platform.PlatformViewsController$1: void ensureValidAndroidVersion(int)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.ChronoLocalDate with(org.threeten.bp.temporal.TemporalField,long)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime withNano(int)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatter toFormatter()
org.threeten.bp.zone.ZoneOffsetTransition: long toEpochSecond()
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence,int)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.ChronoDateImpl plusDays(long)
com.google.gson.internal.bind.TreeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.YearMonth: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void release()
org.threeten.bp.YearMonth: int getYear()
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field valueOf(java.lang.String)
androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.Chronology getChronology()
io.flutter.plugin.common.MethodCall: java.lang.Object argument(java.lang.String)
org.threeten.bp.OffsetDateTime: long toEpochSecond()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
com.google.gson.internal.bind.JsonTreeWriter: void put(com.google.gson.JsonElement)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)
com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class)
org.threeten.bp.format.DateTimePrintContext$1: long getLong(org.threeten.bp.temporal.TemporalField)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors(io.flutter.view.AccessibilityViewEmbedder$1)
org.threeten.bp.MonthDay: boolean equals(java.lang.Object)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.chrono.ChronoZonedDateTime withZoneSameLocal(org.threeten.bp.ZoneId)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime with(org.threeten.bp.temporal.TemporalAdjuster)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: $Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])
org.threeten.bp.Instant: org.threeten.bp.Instant ofEpochSecond(long,long)
com.google.gson.stream.JsonReader: void setLenient(boolean)
org.threeten.bp.chrono.ChronoLocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)
com.google.gson.internal.Excluder: boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: java.lang.Object readResolve()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel)
io.flutter.embedding.android.FlutterActivity: void onActivityResult(int,int,android.content.Intent)
org.threeten.bp.chrono.HijrahDate: int getDayOfMonth(int,int,int)
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void keyUp(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent)
org.threeten.bp.zone.Ser: org.threeten.bp.ZoneOffset readOffset(java.io.DataInput)
io.flutter.plugin.common.JSONUtil: java.lang.Object wrap(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
org.threeten.bp.Instant: int compareTo(java.lang.Object)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.lifecycle.LifecycleRegistry: void sync()
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate ofYearDay(int,int)
io.flutter.embedding.android.FlutterTextureView: boolean access$100(io.flutter.embedding.android.FlutterTextureView)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVibrationPattern(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.collection.MapCollections$ValuesCollection: boolean add(java.lang.Object)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.gson.Gson$1: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.jdk8.DefaultInterfaceEra: boolean isSupported(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: VirtualDisplayController$OneTimeOnDrawListener(android.view.View,java.lang.Runnable)
org.threeten.bp.format.DateTimeParseContext: java.util.Locale getLocale()
org.threeten.bp.temporal.ChronoUnit: boolean isDateBased()
org.threeten.bp.ZoneId: ZoneId()
org.threeten.bp.OffsetTime: org.threeten.bp.OffsetTime plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3500(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.chrono.ChronoZonedDateTime: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
androidx.collection.MapCollections$MapIterator: java.lang.Object next()
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap)
org.threeten.bp.Clock$SystemClock: java.lang.String toString()
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] values()
androidx.collection.SimpleArrayMap: int indexOfNull()
org.threeten.bp.temporal.ChronoField: long getFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeBuilder parseToBuilder(java.lang.CharSequence,java.text.ParsePosition)
androidx.core.app.NotificationCompat$Builder: android.os.Bundle getExtras()
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: NotificationManagerCompat$ServiceConnectedEvent(android.content.ComponentName,android.os.IBinder)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter open(int,char)
com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)
androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
org.threeten.bp.Instant: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)
androidx.core.app.NotificationManagerCompat$NotifyTask: void send(android.support.v4.app.INotificationSideChannel)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void done(int)
org.threeten.bp.OffsetDateTime$2: OffsetDateTime$2()
org.threeten.bp.YearMonth: org.threeten.bp.YearMonth withYear(int)
org.threeten.bp.OffsetDateTime: java.lang.Object writeReplace()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3200(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.google.gson.stream.JsonWriter: void string(java.lang.String)
io.flutter.view.AccessibilityBridge$1: void onLongPress(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void pendingNotificationRequests(io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.temporal.ValueRange: int hashCode()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
org.threeten.bp.temporal.TemporalQueries$1: org.threeten.bp.ZoneId queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.GsonBuilder: void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)
io.flutter.embedding.android.FlutterView: boolean acquireLatestImageViewFrame()
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit[] values()
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder appendLiteral(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readPlatformSpecifics(java.util.Map,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.collection.MapCollections$EntrySet: boolean retainAll(java.util.Collection)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: ChronoZonedDateTimeImpl(org.threeten.bp.chrono.ChronoLocalDateTimeImpl,org.threeten.bp.ZoneOffset,org.threeten.bp.ZoneId)
org.threeten.bp.chrono.IsoChronology: org.threeten.bp.LocalDate date(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.Year: org.threeten.bp.Year readExternal(java.io.DataInput)
com.google.gson.internal.LinkedTreeMap: java.lang.Object get(java.lang.Object)
org.threeten.bp.Instant: long toEpochMilli()
io.flutter.embedding.android.FlutterActivity: java.lang.String getCachedEngineId()
androidx.core.app.AlarmManagerCompat: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource[] values()
com.google.gson.internal.bind.TypeAdapters$29: TypeAdapters$29()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotifications(io.flutter.plugin.common.MethodChannel$Result)
com.google.gson.internal.bind.TypeAdapters$5: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$2800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
org.threeten.bp.Year: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
androidx.collection.MapCollections$KeySet: boolean equals(java.lang.Object)
org.threeten.bp.temporal.TemporalQueries$6: TemporalQueries$6()
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
org.threeten.bp.chrono.ChronoLocalDateTime$1: int compare(java.lang.Object,java.lang.Object)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmoji(int)
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenTransitionNeededNow()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.format.DateTimePrintContext: org.threeten.bp.format.DecimalStyle getSymbols()
io.flutter.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.embedding.android.FlutterActivity: void onPostResume()
org.threeten.bp.temporal.IsoFields$Field$2: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal,long)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.ChronoLocalDate with(org.threeten.bp.temporal.TemporalField,long)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: SafeIterableMap$DescendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.ConstructorConstructor$1: java.lang.Object construct()
io.flutter.embedding.engine.FlutterEngine: boolean isAttachedToJni()
com.google.gson.internal.bind.JsonTreeReader: java.lang.String locationString()
io.flutter.embedding.android.FlutterActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.google.gson.internal.Excluder: boolean excludeClass(java.lang.Class,boolean)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ThaiBuddhistChronology getChronology()
com.google.gson.internal.bind.TypeAdapters$28: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.temporal.TemporalQueries$4: org.threeten.bp.ZoneId queryFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.plugin.platform.PlatformViewsController: void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
org.threeten.bp.zone.ZoneOffsetTransitionRule: org.threeten.bp.zone.ZoneOffsetTransitionRule readExternal(java.io.DataInput)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3902(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
org.threeten.bp.ZoneOffset: int getTotalSeconds()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String fullAssetPathFrom(java.lang.String)
org.threeten.bp.chrono.ThaiBuddhistDate: long toEpochDay()
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: void access$000(io.flutter.embedding.android.AndroidKeyProcessor$EventResponder,android.view.KeyEvent)
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat$Builder setLegacyStreamType(int)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides()
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node last()
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence)
com.google.gson.internal.LinkedTreeMap$EntrySet$1: java.lang.Object next()
io.flutter.plugin.editing.TextInputPlugin: void showTextInput(android.view.View)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipEntityForward()
org.threeten.bp.chrono.MinguoEra: java.lang.Object writeReplace()
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.temporal.ValueRange actualRange(int)
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)
org.threeten.bp.YearMonth: java.lang.String toString()
androidx.collection.MapCollections$MapIterator: void remove()
com.google.gson.internal.bind.TypeAdapters$27: java.util.Calendar read(com.google.gson.stream.JsonReader)
io.flutter.embedding.engine.renderer.FlutterRenderer: void swapSurface(android.view.Surface)
io.flutter.plugin.editing.TextInputPlugin$1: void show()
org.threeten.bp.chrono.HijrahDate: java.lang.Object writeReplace()
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcelable readParcelable()
com.google.gson.Gson$3: Gson$3()
com.google.gson.internal.bind.TypeAdapters$32: java.lang.String toString()
org.threeten.bp.Month: long getLong(org.threeten.bp.temporal.TemporalField)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: VirtualDisplayController$OneTimeOnDrawListener$1(io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
com.google.gson.JsonElement: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4302(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
com.google.gson.internal.bind.TypeAdapters$10: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.Gson: com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer)
com.google.gson.internal.LinkedTreeMap$Node: int hashCode()
org.threeten.bp.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: java.lang.String toString()
org.threeten.bp.ZonedDateTime: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getRemoteInputs()
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat build()
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable)
org.threeten.bp.chrono.HijrahEra: void writeExternal(java.io.DataOutput)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ChronoLocalDate with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
android.support.v4.media.session.MediaSessionCompat$QueueItem: void writeToParcel(android.os.Parcel,int)
com.google.gson.internal.bind.TypeAdapters$24: TypeAdapters$24()
androidx.versionedparcelable.VersionedParcel: void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
org.threeten.bp.ZonedDateTime: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
android.support.v4.media.session.IMediaControllerCallback$Stub: android.os.IBinder asBinder()
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.ChronoDateImpl plusYears(long)
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ValueRange rangeRefinedBy(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.android.FlutterImageView: void updateCurrentBitmap()
androidx.collection.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)
androidx.core.app.NotificationCompat$Action: boolean isContextual()
androidx.core.text.ICUCompat: java.lang.String getScript(java.lang.String)
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
com.google.gson.internal.LazilyParsedNumber: LazilyParsedNumber(java.lang.String)
androidx.media.app.NotificationCompat$MediaStyle: android.widget.RemoteViews generateBigContentView()
com.google.gson.internal.bind.JsonTreeReader: boolean hasNext()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String)
io.flutter.embedding.android.FlutterActivity: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors()
io.flutter.embedding.android.FlutterTextureView: void access$200(io.flutter.embedding.android.FlutterTextureView)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject)
io.flutter.view.AccessibilityBridge$SemanticsNode: void collectRoutes(java.util.List)
com.google.gson.internal.ConstructorConstructor: java.lang.String toString()
com.google.gson.internal.ConstructorConstructor$2: java.lang.Object construct()
androidx.media.AudioAttributesCompat: boolean equals(java.lang.Object)
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: int checkRtl(java.lang.CharSequence,int,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String detailedExceptionString(java.lang.Exception)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setInitialRoute(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: void access$400(io.flutter.embedding.android.FlutterSurfaceView)
androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasSelection()
com.google.gson.internal.bind.TypeAdapters$35$1: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.lang.Class)
org.threeten.bp.chrono.JapaneseChronology: int prolepticYear(org.threeten.bp.chrono.Era,int)
androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
com.google.gson.Gson$2: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.versionedparcelable.ParcelImpl$1: ParcelImpl$1()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,byte[],int)
io.flutter.embedding.android.FlutterView$3: void onFlutterUiNoLongerDisplayed()
org.threeten.bp.OffsetDateTime: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
org.threeten.bp.ZoneOffset: int compareTo(org.threeten.bp.ZoneOffset)
androidx.versionedparcelable.VersionedParcelParcel: void writeCharSequence(java.lang.CharSequence)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivity()
android.support.v4.media.MediaDescriptionCompat$1: java.lang.Object[] newArray(int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: void send()
android.support.v4.media.session.ParcelableVolumeInfo: void writeToParcel(android.os.Parcel,int)
com.google.gson.internal.bind.TypeAdapters$17: TypeAdapters$17()
org.threeten.bp.format.DateTimeBuilder: void resolveMakeChanges(org.threeten.bp.temporal.TemporalField,org.threeten.bp.LocalTime)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: boolean parseNumber(int[],int,java.lang.CharSequence,boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void removeAll()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler)
org.threeten.bp.Clock$SystemClock: int hashCode()
com.google.gson.FieldNamingPolicy$2: FieldNamingPolicy$2(java.lang.String,int)
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence(java.lang.CharSequence,int)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)
androidx.versionedparcelable.VersionedParcelParcel: int readInt()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
com.google.gson.internal.Streams: java.io.Writer writerForAppendable(java.lang.Appendable)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseChronology getChronology()
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.plugin.editing.ListenableEditingState: void endBatchEdit()
org.threeten.bp.chrono.JapaneseChronology: java.lang.Object readResolve()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.FieldNamingPolicy$6: FieldNamingPolicy$6(java.lang.String,int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: boolean equals(java.lang.Object)
androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)
org.threeten.bp.format.DateTimeParseContext$Parsed: DateTimeParseContext$Parsed(org.threeten.bp.format.DateTimeParseContext,org.threeten.bp.format.DateTimeParseContext$1)
com.google.gson.internal.bind.TypeAdapters$32: TypeAdapters$32(java.lang.Class,com.google.gson.TypeAdapter)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatter toFormatter(org.threeten.bp.format.ResolverStyle)
org.threeten.bp.jdk8.Jdk8Methods: int safeToInt(long)
org.threeten.bp.temporal.IsoFields$Field: int access$500(org.threeten.bp.LocalDate)
org.threeten.bp.temporal.IsoFields$Field: int getWeekRange(int)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap)
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit[] values()
org.threeten.bp.ZonedDateTime: int getSecond()
io.flutter.plugin.editing.ListenableEditingState: void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: KeyEventChannel(io.flutter.plugin.common.BinaryMessenger)
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: void onReceive(android.content.Context,android.content.Intent)
org.threeten.bp.ZonedDateTime: org.threeten.bp.chrono.ChronoLocalDateTime toLocalDateTime()
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime withSecond(int)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
androidx.collection.ArrayMap$1: java.util.Map colGetMap()
androidx.collection.SimpleArrayMap: boolean containsValue(java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: FlutterActivityAndFragmentDelegate$1(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
com.google.gson.internal.JavaVersion: int getMajorJavaVersion()
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.embedding.engine.dart.DartExecutor,boolean)
io.flutter.plugin.platform.PlatformView: void onFlutterViewAttached(android.view.View)
org.threeten.bp.chrono.ChronoZonedDateTime: int hashCode()
com.google.gson.stream.JsonReader: void checkLenient()
com.google.gson.stream.JsonReader: void endArray()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void go(int)
org.threeten.bp.format.DateTimeParseContext: org.threeten.bp.format.DecimalStyle getSymbols()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: void writeExternal(java.io.ObjectOutput)
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver$1: ScheduledNotificationReceiver$1(com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver)
org.threeten.bp.jdk8.Jdk8Methods: long floorDiv(long,long)
androidx.core.app.NotificationCompat$BigPictureStyle: NotificationCompat$BigPictureStyle()
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationEnd(android.animation.Animator)
io.flutter.view.AccessibilityBridge: boolean externalViewRequestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ChronoLocalDateTime atTime(org.threeten.bp.LocalTime)
org.threeten.bp.zone.ZoneRulesInitializer: void initialize()
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter)
com.google.gson.Gson$3: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: $Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)
com.google.gson.DefaultDateTypeAdapter: DefaultDateTypeAdapter(java.lang.Class,java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void requestExistingInputState()
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle[] values()
com.google.gson.JsonParseException: JsonParseException(java.lang.String)
org.threeten.bp.MonthDay: org.threeten.bp.Month getMonth()
io.flutter.plugin.editing.FlutterTextUtils: boolean isVariationSelector(int)
androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.flutter.plugin.platform.PlatformPlugin: void access$600(io.flutter.plugin.platform.PlatformPlugin)
org.threeten.bp.format.DateTimeFormatter: DateTimeFormatter(org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser,java.util.Locale,org.threeten.bp.format.DecimalStyle,org.threeten.bp.format.ResolverStyle,java.util.Set,org.threeten.bp.chrono.Chronology,org.threeten.bp.ZoneId)
org.threeten.bp.zone.ZoneOffsetTransition: java.lang.String toString()
com.google.gson.internal.reflect.ReflectionAccessor: ReflectionAccessor()
org.threeten.bp.LocalTime: int getSecond()
androidx.core.app.NotificationCompat$Action: boolean getAllowGeneratedReplies()
android.support.v4.os.ResultReceiver$1: android.support.v4.os.ResultReceiver[] newArray(int)
org.threeten.bp.temporal.TemporalQueries$4: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object setValue(java.lang.Object)
org.threeten.bp.jdk8.Jdk8Methods: int safeSubtract(int,int)
io.flutter.plugin.platform.PlatformPlugin$1: PlatformPlugin$1(io.flutter.plugin.platform.PlatformPlugin)
org.threeten.bp.LocalDateTime: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: LocalizationChannel$1(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
org.threeten.bp.LocalTime$1: org.threeten.bp.LocalTime queryFrom(org.threeten.bp.temporal.TemporalAccessor)
androidx.media.AudioAttributesCompat$Builder: AudioAttributesCompat$Builder()
org.threeten.bp.Instant: java.lang.Object readResolve()
org.threeten.bp.format.DateTimeParseContext$Parsed: boolean isSupported(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.temporal.IsoFields$Field$2: boolean isSupportedBy(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: java.lang.String toString()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation getDefaultStyleInformation(java.util.Map)
org.threeten.bp.Duration: java.lang.String toString()
com.google.gson.internal.bind.TypeAdapters$34: java.lang.String toString()
com.google.gson.stream.JsonReader: void endObject()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void popRoute()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery offset()
io.flutter.embedding.android.FlutterSurfaceView: void pause()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: FlutterEngineConnectionRegistry(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader)
io.flutter.plugin.editing.TextInputPlugin$1: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
org.threeten.bp.zone.ZoneRules: org.threeten.bp.zone.ZoneRules of(org.threeten.bp.ZoneOffset)
org.threeten.bp.ZoneOffset: void validate(int,int,int)
android.support.v4.media.MediaBrowserCompat$MediaItem: java.lang.String toString()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
androidx.core.app.NotificationCompat$Action: androidx.core.graphics.drawable.IconCompat getIconCompat()
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21: void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo)
com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.reflect.Field getOverrideField()
io.flutter.embedding.android.FlutterView: void detachFromFlutterEngine()
io.flutter.embedding.android.SplashScreen: android.os.Bundle saveSplashScreenState()
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String getIsolateServiceId()
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder()
io.flutter.plugin.platform.VirtualDisplayController: void dispose()
org.threeten.bp.chrono.Chronology: void updateResolveMap(java.util.Map,org.threeten.bp.temporal.ChronoField,long)
org.threeten.bp.temporal.IsoFields$Unit: boolean isDateBased()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id()
io.flutter.embedding.android.FlutterActivity: void onFlutterUiDisplayed()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$2: FlutterLocalNotificationsPlugin$2(android.content.SharedPreferences$Editor,int)
com.google.gson.internal.bind.TypeAdapters$18: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.embedding.android.FlutterView: void revertImageView(java.lang.Runnable)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap)
org.threeten.bp.OffsetTime$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.SplashScreen provideSplashScreen()
com.google.gson.JsonPrimitive: java.lang.String getAsString()
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader)
org.threeten.bp.jdk8.Jdk8Methods: int floorDiv(int,int)
android.support.v4.os.ResultReceiver$1: ResultReceiver$1()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
org.threeten.bp.MonthDay: int get(org.threeten.bp.temporal.TemporalField)
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: MethodChannel$IncomingResultHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.zone.ZoneOffsetTransition: int getDurationSeconds()
androidx.collection.MapCollections$KeySet: boolean add(java.lang.Object)
com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
android.support.v4.media.session.MediaSessionCompat$Token: int describeContents()
io.flutter.embedding.engine.FlutterEngine: void registerPlugins()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidRawSoundResource(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.collection.MapCollections$ValuesCollection: boolean retainAll(java.util.Collection)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onAttach(android.content.Context)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void draw(android.graphics.Canvas)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$5200(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.Month: org.threeten.bp.Month plus(long)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection fromInt(int)
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
androidx.core.app.NotificationCompat$MessagingStyle: void addCompatExtras(android.os.Bundle)
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.String keyToString(com.google.gson.JsonElement)
com.google.gson.internal.LinkedTreeMap: void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
org.threeten.bp.format.DateTimeParseContext: org.threeten.bp.format.DateTimeParseContext$Parsed currentParsed()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
org.threeten.bp.chrono.Ser: Ser(byte,java.lang.Object)
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context access$000(io.flutter.plugin.localization.LocalizationPlugin)
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.gson.internal.bind.TypeAdapters$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.chrono.ChronoLocalDateTime: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
org.threeten.bp.format.DateTimeFormatterBuilder$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.bind.TypeAdapters$26: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: PlatformChannel$AppSwitcherDescription(int,java.lang.String)
org.threeten.bp.chrono.Chronology: int compareTo(org.threeten.bp.chrono.Chronology)
io.flutter.embedding.android.FlutterView: boolean dispatchKeyEvent(android.view.KeyEvent)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onQueueChanged(java.util.List)
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree prepareParser(java.util.Set)
io.flutter.plugin.platform.PlatformViewsController: void onDisplayOverlaySurface(int,int,int,int,int)
com.google.gson.internal.bind.DateTypeAdapter$1: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.gson.internal.ConstructorConstructor$9: java.lang.Object construct()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.Person buildPerson(android.content.Context,com.dexterous.flutterlocalnotifications.models.PersonDetails)
org.threeten.bp.LocalDate: long getLong(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
org.threeten.bp.DayOfWeek: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
org.threeten.bp.YearMonth: org.threeten.bp.YearMonth with(int,int)
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser[] values()
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
org.threeten.bp.LocalDate: int lengthOfYear()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelAllNotifications(io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder appendValue(org.threeten.bp.temporal.TemporalField,int)
io.flutter.embedding.engine.FlutterEngineCache: void remove(java.lang.String)
com.google.gson.FieldNamingPolicy: java.lang.String upperCaseFirstLetter(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails fromNotificationDetails(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.android.FlutterImageView: void detachFromRenderer()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate)
androidx.collection.MapCollections$KeySet: boolean removeAll(java.util.Collection)
io.flutter.view.AccessibilityBridge: void sendWindowContentChangeEvent(int)
androidx.arch.core.internal.SafeIterableMap: boolean equals(java.lang.Object)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.ChronoDateImpl plusDays(long)
org.threeten.bp.temporal.ValueRange: boolean isFixed()
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder appendLiteral(char)
org.threeten.bp.zone.TzdbZoneRulesProvider: TzdbZoneRulesProvider(java.io.InputStream)
org.threeten.bp.LocalDateTime: int getHour()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetAfter(java.lang.CharSequence,int)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel access$1400(io.flutter.plugin.platform.PlatformViewsController)
org.threeten.bp.chrono.JapaneseChronology: org.threeten.bp.chrono.Era eraOf(int)
org.threeten.bp.YearMonth: int compareTo(org.threeten.bp.YearMonth)
com.google.gson.internal.bind.TypeAdapters$27: void write(com.google.gson.stream.JsonWriter,java.util.Calendar)
com.google.gson.internal.bind.TimeTypeAdapter: TimeTypeAdapter()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding(android.app.Activity,androidx.lifecycle.Lifecycle)
org.threeten.bp.format.DateTimeTextProvider: DateTimeTextProvider()
io.flutter.view.AccessibilityBridge: boolean access$500(io.flutter.view.AccessibilityBridge)
androidx.media.AudioAttributesImplApi21$Builder: AudioAttributesImplApi21$Builder()
com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()
com.google.gson.DefaultDateTypeAdapter: java.lang.Class verifyDateType(java.lang.Class)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)
org.threeten.bp.chrono.MinguoChronology: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.ChronoField)
io.flutter.plugin.platform.PlatformViewsController: android.content.Context access$200(io.flutter.plugin.platform.PlatformViewsController)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)
io.flutter.plugin.platform.PlatformViewsController: android.view.View access$900(io.flutter.plugin.platform.PlatformViewsController)
com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)
org.threeten.bp.YearMonth: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm)
org.threeten.bp.format.DateTimePrintContext$1: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
org.threeten.bp.chrono.IsoChronology: org.threeten.bp.LocalDateTime localDateTime(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.format.SimpleDateTimeTextProvider$LocaleStore: java.lang.String getText(long,org.threeten.bp.format.TextStyle)
io.flutter.plugin.platform.AccessibilityEventsDelegate: AccessibilityEventsDelegate()
org.threeten.bp.LocalDateTime$1: LocalDateTime$1()
io.flutter.embedding.android.FlutterImageView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler)
org.threeten.bp.LocalTime: org.threeten.bp.OffsetTime atOffset(org.threeten.bp.ZoneOffset)
org.threeten.bp.chrono.JapaneseDate: long toEpochDay()
org.threeten.bp.OffsetDateTime$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.JsonElement: com.google.gson.JsonPrimitive getAsJsonPrimitive()
com.google.gson.internal.LinkedTreeMap: java.util.Set entrySet()
com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.MinguoDate with(org.threeten.bp.LocalDate)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
org.threeten.bp.LocalTime: boolean isSupported(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.LocalDate: boolean isSupported(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.LocalDateTime: org.threeten.bp.chrono.ChronoZonedDateTime atZone(org.threeten.bp.ZoneId)
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle[] getBundleArrayForMessages(java.util.List)
com.google.gson.internal.bind.TypeAdapters$26$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: void remove()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
org.threeten.bp.format.DateTimePrintContext$1: DateTimePrintContext$1(org.threeten.bp.chrono.ChronoLocalDate,org.threeten.bp.temporal.TemporalAccessor,org.threeten.bp.chrono.Chronology,org.threeten.bp.ZoneId)
org.threeten.bp.LocalTime: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endObject()
com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class)
io.flutter.view.AccessibilityBridge: void access$400(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
org.threeten.bp.LocalDate: int compareTo(org.threeten.bp.chrono.ChronoLocalDate)
org.threeten.bp.zone.ZoneRules$Fixed: org.threeten.bp.zone.ZoneOffsetTransition getTransition(org.threeten.bp.LocalDateTime)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
org.threeten.bp.temporal.TemporalQueries$4: TemporalQueries$4()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: FlutterRenderer$ViewportMetrics()
org.threeten.bp.temporal.ValueRange: boolean isValidIntValue(long)
io.flutter.embedding.android.FlutterView: void removeFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
org.threeten.bp.Period: boolean equals(java.lang.Object)
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class)
org.threeten.bp.chrono.ChronoLocalDateTime: java.lang.String toString()
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType,long)
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.YearMonth: org.threeten.bp.YearMonth readExternal(java.io.DataInput)
com.google.gson.internal.bind.TypeAdapters$11: java.lang.Number read(com.google.gson.stream.JsonReader)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String)
org.threeten.bp.zone.Ser: void writeExternal(java.io.ObjectOutput)
com.google.gson.Gson$4: Gson$4(com.google.gson.TypeAdapter)
android.support.v4.media.session.MediaControllerCompat$Callback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3300(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiNoLongerDisplayed()
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()
androidx.core.app.NotificationCompat$InboxStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStart()
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime ofSecondOfDay(long)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
com.google.gson.internal.bind.TypeAdapters$8: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery localDate()
io.flutter.embedding.engine.loader.FlutterLoader$1$1: FlutterLoader$1$1(io.flutter.embedding.engine.loader.FlutterLoader$1)
org.threeten.bp.temporal.IsoFields$Field$2: org.threeten.bp.temporal.ValueRange range()
androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)
org.threeten.bp.format.DateTimeFormatterBuilder$2: java.util.Iterator getTextIterator(org.threeten.bp.temporal.TemporalField,org.threeten.bp.format.TextStyle,java.util.Locale)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineDetachedFromFlutterView()
com.google.gson.internal.Streams$AppendableWriter: void write(char[],int,int)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime with(org.threeten.bp.temporal.TemporalField,long)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] values()
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1: android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel)
com.google.gson.JsonNull: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityBridge: void access$1300(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.android.FlutterActivity: void onBackPressed()
org.threeten.bp.ZoneOffset$1: ZoneOffset$1()
org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: java.lang.String toString()
org.threeten.bp.LocalDateTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.gson.internal.JavaVersion: boolean isJava9OrLater()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.google.gson.internal.bind.DateTypeAdapter$1: DateTypeAdapter$1()
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.String toString()
org.threeten.bp.YearMonth: org.threeten.bp.YearMonth minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationRepeat(android.animation.Animator)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder appendValue(org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)
org.threeten.bp.format.DateTimeFormatter$2: java.lang.Boolean queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: ReflectiveTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder,com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1: android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)
org.threeten.bp.chrono.JapaneseEra: void writeExternal(java.io.DataOutput)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
androidx.collection.MapCollections: java.util.Set getEntrySet()
io.flutter.embedding.android.DrawableSplashScreen$1: DrawableSplashScreen$1(io.flutter.embedding.android.DrawableSplashScreen,java.lang.Runnable)
com.google.gson.DefaultDateTypeAdapter: DefaultDateTypeAdapter(java.lang.Class,int,int)
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime of(org.threeten.bp.LocalDate,org.threeten.bp.LocalTime)
androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean handleMessage(android.os.Message)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime plusDays(long)
com.google.gson.internal.bind.TypeAdapters$35$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void onServiceDisconnected(android.content.ComponentName)
org.threeten.bp.temporal.IsoFields$Field: IsoFields$Field(java.lang.String,int)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.ChronoLocalDate plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
com.google.gson.internal.bind.JsonTreeReader$1: JsonTreeReader$1()
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime readExternal(java.io.DataInput)
org.threeten.bp.YearMonth: java.lang.Object readResolve()
com.google.gson.Gson: java.lang.String toJson(java.lang.Object)
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$4: java.lang.Boolean read(com.google.gson.stream.JsonReader)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Collection)
org.threeten.bp.temporal.TemporalAdjusters: org.threeten.bp.temporal.TemporalAdjuster previousOrSame(org.threeten.bp.DayOfWeek)
io.flutter.plugin.platform.PlatformViewsController$1: long createVirtualDisplayForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
org.threeten.bp.OffsetDateTime: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.chrono.HijrahDate: long getLong(org.threeten.bp.temporal.TemporalField)
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin)
org.threeten.bp.chrono.JapaneseEra: org.threeten.bp.chrono.JapaneseEra of(int)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime plus(long,org.threeten.bp.temporal.TemporalUnit)
android.support.v4.media.MediaBrowserCompat$MediaItem: MediaBrowserCompat$MediaItem(android.os.Parcel)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
android.support.v4.media.MediaBrowserCompat$MediaItem$1: java.lang.Object createFromParcel(android.os.Parcel)
org.threeten.bp.chrono.HijrahDate: int lengthOfYear()
org.threeten.bp.temporal.ValueRange: org.threeten.bp.temporal.ValueRange of(long,long,long)
androidx.core.app.NotificationCompatBuilder: void removeSoundAndVibration(android.app.Notification)
com.google.gson.internal.bind.TypeAdapters$15: void write(com.google.gson.stream.JsonWriter,java.lang.Character)
io.flutter.embedding.android.FlutterSplashView: void access$200(io.flutter.embedding.android.FlutterSplashView)
org.threeten.bp.chrono.HijrahDate: void readDeviationConfig()
org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser: java.math.BigDecimal convertToFraction(long)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource valueOf(java.lang.String)
org.threeten.bp.temporal.IsoFields$Field: int getWeek(org.threeten.bp.LocalDate)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.gson.internal.bind.TypeAdapters$3: java.lang.Boolean read(com.google.gson.stream.JsonReader)
org.threeten.bp.DayOfWeek: boolean isSupported(org.threeten.bp.temporal.TemporalField)
com.google.gson.internal.bind.SqlDateTypeAdapter: java.sql.Date read(com.google.gson.stream.JsonReader)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusMonths(long)
com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()
org.threeten.bp.temporal.ValueRange: ValueRange(long,long,long,long)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context,android.util.AttributeSet,int)
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOngoing(boolean)
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel)
io.flutter.plugin.editing.ListenableEditingState: int getComposingStart()
org.threeten.bp.ZoneOffset: long getLong(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.Instant: org.threeten.bp.Instant create(long,int)
org.threeten.bp.Ser: java.lang.Object read(java.io.DataInput)
org.threeten.bp.OffsetDateTime: org.threeten.bp.OffsetDateTime of(org.threeten.bp.LocalDateTime,org.threeten.bp.ZoneOffset)
org.threeten.bp.chrono.ThaiBuddhistChronology: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.ChronoField)
io.flutter.embedding.android.FlutterActivity: void onUserLeaveHint()
org.threeten.bp.chrono.Chronology$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.ChronoLocalDateTime: int compareTo(org.threeten.bp.chrono.ChronoLocalDateTime)
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory: com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValue(java.nio.ByteBuffer)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)
com.google.gson.internal.bind.util.ISO8601Utils: int parseInt(java.lang.String,int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray()
io.flutter.plugin.platform.PlatformViewsController: void detach()
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.Person getPerson()
com.google.gson.internal.bind.TypeAdapters$1: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.OffsetDateTime: int hashCode()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: PlatformViewsChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setBot(boolean)
org.threeten.bp.chrono.JapaneseEra: org.threeten.bp.chrono.JapaneseEra from(org.threeten.bp.LocalDate)
org.threeten.bp.chrono.MinguoDate: long getLong(org.threeten.bp.temporal.TemporalField)
androidx.arch.core.internal.SafeIterableMap$ListIterator: SafeIterableMap$ListIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
io.flutter.embedding.android.FlutterView$1: FlutterView$1(io.flutter.embedding.android.FlutterView)
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery precision()
org.threeten.bp.MonthDay: boolean isSupported(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.Clock$SystemClock: long millis()
io.flutter.plugin.platform.PlatformViewsController$1: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
org.threeten.bp.chrono.HijrahDate: java.lang.Object readResolve()
org.threeten.bp.ZoneOffset: int totalSeconds(int,int,int)
com.google.gson.internal.bind.TypeAdapters$22: TypeAdapters$22()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
org.threeten.bp.chrono.HijrahDate: void checkValidMonth(int)
org.threeten.bp.LocalDateTime: org.threeten.bp.chrono.ChronoLocalDateTime with(org.threeten.bp.temporal.TemporalAdjuster)
org.threeten.bp.zone.ZoneRulesProvider: void registerProvider(org.threeten.bp.zone.ZoneRulesProvider)
androidx.core.app.NotificationCompat$Style: void addCompatExtras(android.os.Bundle)
android.support.v4.media.MediaMetadataCompat$1: java.lang.Object[] newArray(int)
org.threeten.bp.ZoneId$1: org.threeten.bp.ZoneId queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.zone.ZoneOffsetTransition: org.threeten.bp.Instant getInstant()
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalTime toLocalTime()
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahChronology getChronology()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$2802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
com.google.gson.internal.bind.util.ISO8601Utils: boolean checkOffset(java.lang.String,int,char)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra[] values()
io.flutter.plugin.platform.VirtualDisplayController$1: VirtualDisplayController$1(io.flutter.plugin.platform.VirtualDisplayController,android.view.View,java.lang.Runnable)
org.threeten.bp.LocalDate: long getProlepticMonth()
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal,long)
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra valueOf(java.lang.String)
org.threeten.bp.zone.ZoneRulesProvider: ZoneRulesProvider()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performEditorAction(int)
org.threeten.bp.temporal.IsoFields$Field$1: org.threeten.bp.temporal.ValueRange rangeRefinedBy(org.threeten.bp.temporal.TemporalAccessor)
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
io.flutter.plugin.localization.LocalizationPlugin$1: LocalizationPlugin$1(io.flutter.plugin.localization.LocalizationPlugin)
org.threeten.bp.Instant: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.MonthDay: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery chronology()
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object[] newArray(int)
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: DateTimeFormatterBuilder$NumberPrinterParser(org.threeten.bp.temporal.TemporalField,int,int,org.threeten.bp.format.SignStyle,int)
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
android.support.v4.media.RatingCompat$1: RatingCompat$1()
com.google.gson.internal.bind.TypeAdapters$24: void write(com.google.gson.stream.JsonWriter,java.util.UUID)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: boolean getBoolean(android.os.Bundle,java.lang.String,boolean)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.media.AudioAttributesImplBase: int getContentType()
org.threeten.bp.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: java.lang.String toString()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToService()
org.threeten.bp.chrono.JapaneseChronology: org.threeten.bp.chrono.ChronoLocalDateTime localDateTime(org.threeten.bp.temporal.TemporalAccessor)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle$Message findLatestIncomingMessage()
org.threeten.bp.ZonedDateTime: ZonedDateTime(org.threeten.bp.LocalDateTime,org.threeten.bp.ZoneOffset,org.threeten.bp.ZoneId)
android.support.v4.media.MediaMetadataCompat$1: android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String)
com.google.gson.JsonElement: boolean isJsonObject()
org.threeten.bp.temporal.IsoFields$Field$1: boolean isSupportedBy(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTimeImpl of(org.threeten.bp.chrono.ChronoLocalDate,org.threeten.bp.LocalTime)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ThaiBuddhistDate plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.ZoneRegion: org.threeten.bp.ZoneRegion ofLenient(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2102(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
androidx.core.app.NotificationCompat$MessagingStyle$Message: long getTimestamp()
org.threeten.bp.temporal.IsoFields$Field$2: long getFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader createImageReader(int,int)
org.threeten.bp.chrono.HijrahDate: void parseLine(java.lang.String,int)
org.threeten.bp.Year: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.embedding.android.AndroidTouchProcessor: void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer)
com.google.gson.stream.JsonReader: double nextDouble()
com.jakewharton.threetenabp.AndroidThreeTen: void init(android.content.Context,java.lang.String)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()
org.threeten.bp.temporal.ValueRange: boolean isIntValue()
com.google.gson.internal.ConstructorConstructor$2: ConstructorConstructor$2(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type)
org.threeten.bp.chrono.IsoChronology: IsoChronology()
org.threeten.bp.LocalTime: java.lang.String toString()
com.google.gson.internal.bind.TypeAdapters$5: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
org.threeten.bp.chrono.HijrahDate: int getMonthOfYear(int,int)
io.flutter.embedding.engine.loader.FlutterLoader$1: java.lang.Object call()
androidx.media.AudioAttributesImplApi21: boolean equals(java.lang.Object)
com.google.gson.stream.JsonReader: boolean hasNext()
androidx.core.app.NotificationManagerCompat: void notify(java.lang.String,int,android.app.Notification)
org.threeten.bp.Year: int hashCode()
com.google.gson.internal.bind.TypeAdapters$35: TypeAdapters$35(java.lang.Class,com.google.gson.TypeAdapter)
org.threeten.bp.zone.ZoneOffsetTransitionRule: void writeExternal(java.io.DataOutput)
org.threeten.bp.chrono.ChronoDateImpl: org.threeten.bp.chrono.ChronoDateImpl plus(long,org.threeten.bp.temporal.TemporalUnit)
android.support.v4.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)
org.threeten.bp.format.DateTimeBuilder: void addObject(org.threeten.bp.LocalTime)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.google.gson.Gson$1: java.lang.Double read(com.google.gson.stream.JsonReader)
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
org.threeten.bp.format.DateTimePrintContext: java.lang.String toString()
androidx.collection.MapCollections$EntrySet: boolean add(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void success(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.AndroidKeyProcessor,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
org.threeten.bp.chrono.ThaiBuddhistEra: java.lang.Object writeReplace()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: TextInputChannel$Configuration$Autofill(java.lang.String,java.lang.String[],io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)
com.google.gson.internal.bind.JsonTreeWriter$1: void flush()
org.threeten.bp.ZonedDateTime: java.lang.Object readResolve()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
org.threeten.bp.temporal.IsoFields$Field: int access$400(org.threeten.bp.LocalDate)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager access$900(io.flutter.view.AccessibilityBridge)
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionLocked()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence)
androidx.media.app.NotificationCompat$MediaStyle: NotificationCompat$MediaStyle()
org.threeten.bp.temporal.IsoFields$Field$4: IsoFields$Field$4(java.lang.String,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: int atMost(int)
org.threeten.bp.format.TextStyle: TextStyle(java.lang.String,int)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.Duration: org.threeten.bp.Duration ofNanos(long)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel()
org.threeten.bp.format.DateTimeFormatterBuilder$InstantPrinterParser: int parse(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int)
com.google.gson.Gson: com.google.gson.TypeAdapter floatAdapter(boolean)
org.threeten.bp.temporal.IsoFields$Field$2: IsoFields$Field$2(java.lang.String,int)
io.flutter.embedding.android.FlutterView: boolean isAttachedToFlutterEngine()
io.flutter.plugin.platform.PlatformViewsController: void onAttachedToJNI()
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean)
org.threeten.bp.chrono.ThaiBuddhistChronology: org.threeten.bp.chrono.ThaiBuddhistEra eraOf(int)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
org.threeten.bp.ZoneOffset: int compareTo(java.lang.Object)
org.threeten.bp.OffsetTime: org.threeten.bp.OffsetTime of(org.threeten.bp.LocalTime,org.threeten.bp.ZoneOffset)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String translateAutofillHint(java.lang.String)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
androidx.core.app.NotificationManagerCompat$SideChannelManager: NotificationManagerCompat$SideChannelManager(android.content.Context)
org.threeten.bp.LocalDateTime: org.threeten.bp.chrono.ChronoLocalDate toLocalDate()
io.flutter.embedding.android.FlutterSplashView: void transitionToFlutter()
io.flutter.embedding.android.AndroidKeyProcessor: void destroy()
org.threeten.bp.Year: int compareTo(org.threeten.bp.Year)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
io.flutter.plugin.common.StandardMessageCodec: void readAlignment(java.nio.ByteBuffer,int)
org.threeten.bp.chrono.ChronoLocalDate: org.threeten.bp.chrono.ChronoLocalDate minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
androidx.collection.ArrayMap$1: java.lang.Object colSetValue(int,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String)
io.flutter.view.AccessibilityBridge: void access$1200(io.flutter.view.AccessibilityBridge)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2602(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.gson.internal.$Gson$Types: int hashCodeOrZero(java.lang.Object)
org.threeten.bp.YearMonth: org.threeten.bp.YearMonth withMonth(int)
org.threeten.bp.zone.ZoneRulesProvider: org.threeten.bp.zone.ZoneRulesProvider getProvider(java.lang.String)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.LocalDate: LocalDate(int,int,int)
com.google.gson.internal.Excluder: boolean isValidSince(com.google.gson.annotations.Since)
com.google.gson.internal.bind.JsonTreeReader: JsonTreeReader(com.google.gson.JsonElement)
io.flutter.view.AccessibilityBridge: android.view.View access$100(io.flutter.view.AccessibilityBridge)
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree: void add(java.lang.String)
org.threeten.bp.chrono.ChronoLocalDateTime: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDateTime)
org.threeten.bp.ZoneOffset: java.lang.Object writeReplace()
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context)
com.google.gson.internal.bind.TypeAdapters$21: java.net.URL read(com.google.gson.stream.JsonReader)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.AlarmManager getAlarmManager(android.content.Context)
org.threeten.bp.format.SimpleDateTimeTextProvider: java.util.Comparator access$100()
com.google.gson.JsonSyntaxException: JsonSyntaxException(java.lang.String,java.lang.Throwable)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence)
com.google.gson.internal.JavaVersion: int getMajorJavaVersion(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: void onFrameAvailable(android.graphics.SurfaceTexture)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void setLocalizationMessageHandler(io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler)
androidx.core.app.NotificationCompat$Style: void setBuilder(androidx.core.app.NotificationCompat$Builder)
org.threeten.bp.ZoneRegion: void write(java.io.DataOutput)
androidx.collection.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)
com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)
org.threeten.bp.ZoneOffset: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
org.threeten.bp.Duration: int compareTo(org.threeten.bp.Duration)
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List decodeSystemUiOverlays(org.json.JSONArray)
io.flutter.plugin.editing.TextInputPlugin: void notifyValueChanged(java.lang.String)
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable getEditable()
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
io.flutter.view.AccessibilityBridge$2: void onAccessibilityStateChanged(boolean)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: FlutterActivityLaunchConfigs$BackgroundMode(java.lang.String,int)
io.flutter.embedding.android.FlutterImageView: void resizeIfNeeded(int,int)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory$1: RuntimeTypeAdapterFactory$1(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory,java.util.Map,java.util.Map)
io.flutter.plugin.editing.TextInputPlugin: void hideTextInput(android.view.View)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)
org.threeten.bp.format.DecimalStyle: java.lang.String toString()
org.threeten.bp.LocalDate: int get0(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.LocalDateTime: int getDayOfMonth()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int)
org.threeten.bp.DayOfWeek$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.collection.MapCollections$KeySet: boolean isEmpty()
org.threeten.bp.chrono.JapaneseEra: java.lang.String toString()
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String)
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: MediaControllerCompat$MediaControllerImplApi21$ExtraCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
org.threeten.bp.OffsetDateTime: int getNano()
androidx.collection.MapCollections$MapIterator: java.lang.Object getValue()
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
io.flutter.view.AccessibilityBridge: boolean performAction(int,int,android.os.Bundle)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder append(org.threeten.bp.format.DateTimeFormatter)
org.threeten.bp.chrono.IsoEra: IsoEra(java.lang.String,int)
io.flutter.plugin.editing.TextInputPlugin: void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle)
org.threeten.bp.temporal.ValueRange: boolean equals(java.lang.Object)
com.google.gson.internal.bind.JsonTreeWriter: JsonTreeWriter()
org.threeten.bp.chrono.HijrahDate: void checkValidDayOfYear(int)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager getWindowManager()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String access$000(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
org.threeten.bp.chrono.IsoEra: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
org.threeten.bp.DayOfWeek: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
org.threeten.bp.Year: org.threeten.bp.Year plusYears(long)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.temporal.ValueRange: java.lang.String toString()
android.support.v4.media.RatingCompat: int describeContents()
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$4700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityBridge$TextDirection: AccessibilityBridge$TextDirection(java.lang.String,int)
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiDisplayed()
io.flutter.embedding.android.AndroidKeyProcessor: boolean isPendingEvent(android.view.KeyEvent)
io.flutter.embedding.android.FlutterActivity: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
com.google.gson.internal.bind.TypeAdapters$15: java.lang.Character read(com.google.gson.stream.JsonReader)
org.threeten.bp.Year: java.lang.Object writeReplace()
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityDisabled()
io.flutter.plugin.platform.PlatformPlugin: void popSystemNavigator()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readChannelInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createIconWithBackground(int,int,int,int)
io.flutter.plugin.editing.TextInputPlugin: boolean composingChanged(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
com.google.gson.GsonBuilder: com.google.gson.Gson create()
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,boolean)
com.google.gson.internal.Streams$AppendableWriter: void close()
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder optionalStart()
org.threeten.bp.YearMonth: void writeExternal(java.io.DataOutput)
org.threeten.bp.DateTimeException: DateTimeException(java.lang.String,java.lang.Throwable)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser: org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser withOptional(boolean)
org.threeten.bp.temporal.TemporalQueries$7: org.threeten.bp.LocalTime queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.zone.Ser: void readExternal(java.io.ObjectInput)
io.flutter.embedding.android.FlutterActivity: android.view.View createFlutterView()
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation: StyleInformation()
com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZoneOffset getOffset()
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeParseContext$Parsed parseUnresolved0(java.lang.CharSequence,java.text.ParsePosition)
org.threeten.bp.Period: org.threeten.bp.Period ofDays(int)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: MethodChannel$IncomingMethodCallHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler)
io.flutter.plugin.platform.VirtualDisplayController: void resize(int,int,java.lang.Runnable)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
io.flutter.plugin.editing.InputConnectionAdaptor: void closeConnection()
com.google.gson.internal.$Gson$Types: java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)
com.google.gson.internal.LinkedTreeMap: LinkedTreeMap(java.util.Comparator)
org.threeten.bp.format.DateTimeBuilder: java.lang.Long getFieldValue0(org.threeten.bp.temporal.TemporalField)
com.google.gson.internal.bind.TypeAdapters$2: TypeAdapters$2()
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ChronoDateImpl plus(long,org.threeten.bp.temporal.TemporalUnit)
com.google.gson.internal.JavaVersion: int determineMajorJavaVersion()
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
com.google.gson.GsonBuilder: GsonBuilder()
org.threeten.bp.chrono.ThaiBuddhistDate: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int)
com.google.gson.internal.bind.TypeAdapters$34: TypeAdapters$34(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
io.flutter.plugin.localization.LocalizationPlugin$1: java.lang.String getStringResource(java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLargeIconInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context,android.view.inputmethod.InputMethodManager)
androidx.versionedparcelable.VersionedParcelParcel: void setOutputField(int)
com.google.gson.stream.JsonWriter: int peek()
org.threeten.bp.chrono.MinguoChronology: org.threeten.bp.chrono.ChronoZonedDateTime zonedDateTime(org.threeten.bp.Instant,org.threeten.bp.ZoneId)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.google.gson.internal.LinkedTreeMap$EntrySet: java.util.Iterator iterator()
androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)
io.flutter.view.VsyncWaiter$1$1: VsyncWaiter$1$1(io.flutter.view.VsyncWaiter$1,long)
org.threeten.bp.format.DateTimeFormatterBuilder$InstantPrinterParser: java.lang.String toString()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistry getRegistry()
org.threeten.bp.format.DateTimeBuilder: java.lang.String toString()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger)
org.threeten.bp.ZonedDateTime: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
org.threeten.bp.temporal.IsoFields$Field: int getWeekBasedYear(org.threeten.bp.LocalDate)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahDate with(org.threeten.bp.temporal.TemporalField,long)
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.Temporal addTo(org.threeten.bp.temporal.Temporal,long)
io.flutter.view.AccessibilityBridge$4: AccessibilityBridge$4(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityManager)
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: DateTimeFormatterBuilder$NumberPrinterParser(org.threeten.bp.temporal.TemporalField,int,int,org.threeten.bp.format.SignStyle)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: DeferredComponentChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.gson.internal.bind.TypeAdapters$24: java.util.UUID read(com.google.gson.stream.JsonReader)
com.google.gson.FieldNamingPolicy$2: java.lang.String translateName(java.lang.reflect.Field)
io.flutter.util.PathUtils: java.lang.String getFilesDir(android.content.Context)
com.google.gson.internal.bind.ObjectTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.LinkedTreeMap$EntrySet: int size()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture surfaceTexture()
org.threeten.bp.jdk8.Jdk8Methods: long safeSubtract(long,long)
androidx.media.AudioAttributesImplBase$Builder: AudioAttributesImplBase$Builder()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifier(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationDetails from(java.util.Map)
android.support.v4.media.session.MediaControllerCompat$Callback: void onQueueTitleChanged(java.lang.CharSequence)
org.threeten.bp.chrono.Chronology: org.threeten.bp.chrono.Chronology of(java.lang.String)
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: LinkedTreeMap$LinkedTreeMapIterator(com.google.gson.internal.LinkedTreeMap)
androidx.lifecycle.Lifecycling$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
org.threeten.bp.temporal.IsoFields$Field$2: java.lang.String toString()
com.google.gson.JsonArray: JsonArray()
com.google.gson.internal.Streams$AppendableWriter: Streams$AppendableWriter(java.lang.Appendable)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState createFromParcel(android.os.Parcel)
com.google.gson.JsonArray: java.util.Iterator iterator()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onUserLeaveHint()
org.threeten.bp.ZoneId: org.threeten.bp.ZoneId from(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
org.threeten.bp.ZonedDateTime: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.plugin.editing.TextInputPlugin: void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
com.google.gson.internal.bind.TypeAdapters$20: java.lang.StringBuffer read(com.google.gson.stream.JsonReader)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleVerticalMovement(boolean,boolean)
org.threeten.bp.Period: long toTotalMonths()
io.flutter.plugin.platform.PlatformViewRegistryImpl: PlatformViewRegistryImpl()
com.google.gson.internal.bind.TypeAdapters$22: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager access$400(io.flutter.plugin.editing.TextInputPlugin)
org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset of(java.lang.String)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface()
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4400(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean)
androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.LocalTime toLocalTime()
org.threeten.bp.chrono.JapaneseDate: boolean isSupported(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.jdk8.Jdk8Methods: long safeMultiply(long,long)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Activity attachedActivity()
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.android.FlutterActivity: void onSaveInstanceState(android.os.Bundle)
androidx.collection.MapCollections$ValuesCollection: boolean containsAll(java.util.Collection)
io.flutter.embedding.android.FlutterView$3: void onFlutterUiDisplayed()
com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.text.BidiFormatter: int getExitDir(java.lang.CharSequence)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate minusDays(long)
androidx.collection.MapCollections$ArrayIterator: boolean hasNext()
io.flutter.plugin.editing.TextInputPlugin: void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
org.threeten.bp.Instant: boolean isSupported(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.jdk8.Jdk8Methods: int compareLongs(long,long)
org.threeten.bp.OffsetTime: java.lang.Object readResolve()
io.flutter.plugin.common.StandardMessageCodec: void writeValue(java.io.ByteArrayOutputStream,java.lang.Object)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onExtrasChanged(android.os.Bundle)
io.flutter.embedding.android.FlutterView$1: void onAccessibilityChanged(boolean,boolean)
androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)
io.flutter.plugin.editing.TextInputPlugin: void destroy()
org.threeten.bp.Duration: java.lang.Object readResolve()
org.threeten.bp.MonthDay: java.lang.Object readResolve()
android.support.v4.media.session.IMediaSession$Stub$Proxy: IMediaSession$Stub$Proxy(android.os.IBinder)
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
com.google.gson.internal.bind.JsonTreeReader: java.lang.String getPath()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(long)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map access$200(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$4800(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.chrono.IsoChronology: org.threeten.bp.LocalDate resolveDate(java.util.Map,org.threeten.bp.format.ResolverStyle)
org.threeten.bp.LocalDateTime: org.threeten.bp.chrono.ChronoLocalDateTime with(org.threeten.bp.temporal.TemporalField,long)
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: void run()
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.TemporalAccessor resolve(java.util.Map,org.threeten.bp.temporal.TemporalAccessor,org.threeten.bp.format.ResolverStyle)
io.flutter.embedding.engine.FlutterShellArgs: io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent)
com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)
org.threeten.bp.format.DateTimePrintContext: DateTimePrintContext(org.threeten.bp.temporal.TemporalAccessor,org.threeten.bp.format.DateTimeFormatter)
com.google.gson.internal.bind.TypeAdapters$24: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
io.flutter.plugin.platform.PlatformPlugin: void access$500(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ChronoDateImpl plusYears(long)
org.threeten.bp.LocalDateTime: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
androidx.core.app.NotificationCompat$Action: int getIcon()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean)
org.threeten.bp.format.DateTimeFormatterBuilder$TextPrinterParser: java.lang.String toString()
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray(java.lang.Object[])
org.threeten.bp.MonthDay: org.threeten.bp.MonthDay of(int,int)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String getLogTag()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long getId()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper()
androidx.collection.MapCollections$EntrySet: int hashCode()
org.threeten.bp.YearMonth$1: YearMonth$1()
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.MinguoDate plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.zone.ZoneRules$Fixed: int hashCode()
io.flutter.view.AccessibilityBridge$1: void updateSemantics(java.nio.ByteBuffer,java.lang.String[])
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.format.DateTimePrintContext: org.threeten.bp.temporal.TemporalAccessor adjust(org.threeten.bp.temporal.TemporalAccessor,org.threeten.bp.format.DateTimeFormatter)
io.flutter.view.AccessibilityBridge$3: AccessibilityBridge$3(io.flutter.view.AccessibilityBridge,android.os.Handler)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String)
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: java.lang.String toString()
org.threeten.bp.OffsetDateTime: int compareTo(org.threeten.bp.OffsetDateTime)
org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser: java.lang.String toString()
com.google.gson.stream.JsonWriter: boolean isLenient()
androidx.collection.MapCollections: java.util.Set getKeySet()
androidx.collection.SimpleArrayMap: void clear()
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$500(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int access$200(long)
io.flutter.plugin.platform.PlatformViewsController: void destroyOverlaySurfaces()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.OffsetDateTime: boolean isSupported(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.ZonedDateTime: java.lang.String toString()
org.threeten.bp.ZonedDateTime: org.threeten.bp.chrono.ChronoLocalDate toLocalDate()
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahDate plusMonths(long)
org.threeten.bp.LocalDateTime: org.threeten.bp.DayOfWeek getDayOfWeek()
com.google.gson.LongSerializationPolicy$1: LongSerializationPolicy$1(java.lang.String,int)
androidx.collection.MapCollections: java.util.Collection getValues()
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21: void onQueueTitleChanged(java.lang.CharSequence)
com.google.gson.internal.bind.TypeAdapters$17: java.math.BigDecimal read(com.google.gson.stream.JsonReader)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float)
org.threeten.bp.temporal.TemporalQueries$3: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
android.support.v4.os.ResultReceiver$1: java.lang.Object[] newArray(int)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
com.google.gson.Gson: Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List)
android.support.v4.media.MediaMetadataCompat: android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void next(int)
com.google.gson.internal.UnsafeAllocator$3: java.lang.Object newInstance(java.lang.Class)
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object unwrapNull(java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect getGlobalRect()
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen access$100(io.flutter.embedding.android.FlutterSplashView)
io.flutter.plugin.editing.TextInputPlugin: void clearTextInputClient()
io.flutter.plugin.editing.TextInputPlugin$1: TextInputPlugin$1(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.view.AccessibilityBridge$SemanticsNode: void transformPoint(float[],float[],float[])
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.OffsetTime: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler)
androidx.media.AudioAttributesImplBase: int getFlags()
org.threeten.bp.LocalTime: int compareTo(java.lang.Object)
org.threeten.bp.ZoneId: java.lang.String toString()
com.google.gson.internal.bind.TypeAdapters$33: java.lang.String toString()
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate readExternal(java.io.DataInput)
io.flutter.embedding.android.FlutterView: java.util.Set access$200(io.flutter.embedding.android.FlutterView)
org.threeten.bp.chrono.ThaiBuddhistDate: int hashCode()
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setImportant(boolean)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getString(android.os.Bundle,java.lang.String)
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
org.threeten.bp.Year: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahDate with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.embedding.android.FlutterView$3: FlutterView$3(io.flutter.embedding.android.FlutterView,io.flutter.embedding.engine.renderer.FlutterRenderer,java.lang.Runnable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationAppLaunchDetails(io.flutter.plugin.common.MethodChannel$Result)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSound(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.Ser: Ser()
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.FlutterInjector$1)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
org.threeten.bp.LocalDateTime: int getYear()
io.flutter.embedding.android.FlutterView: void onSizeChanged(int,int,int,int)
org.threeten.bp.chrono.ChronoLocalDateTime: boolean isAfter(org.threeten.bp.chrono.ChronoLocalDateTime)
androidx.arch.core.internal.SafeIterableMap: int size()
org.threeten.bp.temporal.IsoFields$Field$3: org.threeten.bp.temporal.TemporalAccessor resolve(java.util.Map,org.threeten.bp.temporal.TemporalAccessor,org.threeten.bp.format.ResolverStyle)
org.threeten.bp.format.DateTimeBuilder: org.threeten.bp.format.DateTimeBuilder addFieldValue(org.threeten.bp.temporal.TemporalField,long)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: boolean isFixedWidth(org.threeten.bp.format.DateTimeParseContext)
io.flutter.embedding.android.FlutterActivity: void onResume()
org.threeten.bp.chrono.MinguoChronology: org.threeten.bp.chrono.MinguoDate date(int,int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateWith(java.nio.ByteBuffer,java.lang.String[])
org.threeten.bp.YearMonth: java.lang.Object writeReplace()
androidx.core.app.NotificationCompat$MessagingStyle: boolean hasMessagesWithoutSender()
org.threeten.bp.chrono.HijrahChronology: java.lang.String getId()
io.flutter.embedding.android.FlutterSplashView: void onRestoreInstanceState(android.os.Parcelable)
com.google.gson.internal.bind.TypeAdapters$25: java.lang.Object read(com.google.gson.stream.JsonReader)
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: NotificationChannelGroupDetails()
org.threeten.bp.LocalDateTime$1: org.threeten.bp.LocalDateTime queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()
com.google.gson.internal.bind.TimeTypeAdapter: java.sql.Time read(com.google.gson.stream.JsonReader)
org.threeten.bp.LocalDateTime: int getNano()
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: int hashCode()
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.Lifecycle getLifecycle()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTimeImpl plusMinutes(long)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.gson.TypeAdapter$1: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate minusYears(long)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)
com.google.gson.internal.LinkedTreeMap$KeySet: LinkedTreeMap$KeySet(com.google.gson.internal.LinkedTreeMap)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMediaStyle(androidx.core.app.NotificationCompat$Builder)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void onQueueChanged(java.util.List)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent)
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl: TreeTypeAdapter$GsonContextImpl(com.google.gson.internal.bind.TreeTypeAdapter,com.google.gson.internal.bind.TreeTypeAdapter$1)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onResume()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
org.threeten.bp.chrono.IsoChronology: java.lang.String getCalendarType()
android.support.v4.media.MediaDescriptionCompat: int describeContents()
android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)
com.google.gson.stream.JsonReader: long nextLong()
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Collection)
org.threeten.bp.chrono.HijrahEra: int get(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.chrono.MinguoDate: int hashCode()
com.google.gson.internal.ConstructorConstructor$13: java.lang.Object construct()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean isFocusable()
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] values()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.google.gson.internal.bind.ObjectTypeAdapter: ObjectTypeAdapter(com.google.gson.Gson)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readSoundInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDateTime toLocalDateTime()
io.flutter.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)
org.threeten.bp.OffsetDateTime: org.threeten.bp.LocalDateTime toLocalDateTime()
org.threeten.bp.ZoneOffset$1: org.threeten.bp.ZoneOffset queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.DateTimeException: DateTimeException(java.lang.String)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void success(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection createInputConnection(android.view.View,android.view.inputmethod.EditorInfo)
io.flutter.embedding.engine.FlutterEngine$1: void onEngineWillDestroy()
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()
com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseDate with(org.threeten.bp.LocalDate)
com.google.gson.internal.Streams: void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingState(int,java.lang.String,int,int,int,int)
org.threeten.bp.chrono.HijrahDate: void addDeviationAsHijrah(int,int,int,int,int)
org.threeten.bp.chrono.HijrahEra: HijrahEra(java.lang.String,int)
io.flutter.view.AccessibilityBridge: void predictCursorMovement(io.flutter.view.AccessibilityBridge$SemanticsNode,int,boolean,boolean)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
org.threeten.bp.zone.StandardZoneRules: java.lang.String toString()
org.threeten.bp.format.DateTimePrintContext: void startOptional()
org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset readExternal(java.io.DataInput)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
com.dexterous.flutterlocalnotifications.BitmapSource: BitmapSource(java.lang.String,int)
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21: MediaControllerCompat$Callback$MediaControllerCallbackApi21(android.support.v4.media.session.MediaControllerCompat$Callback)
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel)
io.flutter.plugin.mouse.MouseCursorPlugin$1: void activateSystemCursor(java.lang.String)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.ChronoLocalDate minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra of(int)
androidx.media.app.NotificationCompat$MediaStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
org.threeten.bp.chrono.HijrahChronology: org.threeten.bp.chrono.HijrahDate date(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.JapaneseDate: int hashCode()
io.flutter.embedding.android.FlutterSurfaceView: void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int)
android.support.v4.media.session.MediaSessionCompat$Token$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
org.threeten.bp.chrono.ChronoZonedDateTime: long toEpochSecond()
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: void writeToParcel(android.os.Parcel,int)
io.flutter.view.AccessibilityBridge$4: void onTouchExplorationStateChanged(boolean)
io.flutter.plugin.common.JSONMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.flutter.embedding.engine.loader.FlutterApplicationInfo: FlutterApplicationInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)
io.flutter.embedding.android.FlutterSurfaceView$2: FlutterSurfaceView$2(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.view.AccessibilityBridge: boolean isTouchExplorationEnabled()
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver: void onReceiveResult(int,android.os.Bundle)
androidx.media.AudioAttributesCompat: AudioAttributesCompat(androidx.media.AudioAttributesImpl)
androidx.core.app.NotificationCompat$Action: android.os.Bundle getExtras()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long)
com.google.gson.stream.JsonReader: java.lang.String toString()
org.threeten.bp.jdk8.DefaultInterfaceTemporalAccessor: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: java.lang.Object getSystemService(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)
com.google.gson.internal.bind.TypeAdapters$7: java.lang.Number read(com.google.gson.stream.JsonReader)
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: TextDirectionHeuristicsCompat$AnyStrong(boolean)
org.threeten.bp.LocalDateTime: void writeExternal(java.io.DataOutput)
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21: void onMetadataChanged(android.media.MediaMetadata)
androidx.collection.MapCollections$EntrySet: void clear()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(java.lang.Class)
com.google.gson.JsonPrimitive: boolean isIntegral(com.google.gson.JsonPrimitive)
com.google.gson.stream.JsonWriter: void writeDeferredName()
org.threeten.bp.ZoneId: org.threeten.bp.ZoneId normalized()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTimeImpl plusSeconds(long)
android.support.v4.media.session.PlaybackStateCompat$1: android.support.v4.media.session.PlaybackStateCompat[] newArray(int)
org.threeten.bp.ZonedDateTime: java.lang.Object writeReplace()
org.threeten.bp.ZoneRegion: org.threeten.bp.ZoneRegion ofId(java.lang.String,boolean)
io.flutter.plugin.platform.PlatformPlugin$1: void setPreferredOrientations(int)
org.threeten.bp.Period: Period(int,int,int)
androidx.arch.core.internal.SafeIterableMap$Entry: int hashCode()
androidx.core.text.BidiFormatter$DirectionalityEstimator: int getEntryDir()
io.flutter.plugin.editing.TextInputPlugin: TextInputPlugin(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context)
org.threeten.bp.YearMonth: org.threeten.bp.YearMonth plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ChronoDateImpl plusMonths(long)
io.flutter.view.VsyncWaiter: VsyncWaiter(android.view.WindowManager)
io.flutter.embedding.engine.renderer.FlutterRenderer: void unregisterTexture(long)
org.threeten.bp.chrono.MinguoEra: void writeExternal(java.io.DataOutput)
android.support.v4.media.session.MediaSessionCompat$QueueItem: java.util.List fromQueueItemList(java.util.List)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.google.gson.JsonPrimitive: int getAsInt()
org.threeten.bp.LocalDateTime: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.MonthDay$1: org.threeten.bp.MonthDay queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.OffsetTime: org.threeten.bp.OffsetTime with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.plugin.editing.ListenableEditingState: java.lang.String toString()
com.google.gson.Gson$3: java.lang.Number read(com.google.gson.stream.JsonReader)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject)
org.threeten.bp.format.DateTimeBuilder: void resolveMakeChanges(org.threeten.bp.temporal.TemporalField,org.threeten.bp.chrono.ChronoLocalDate)
androidx.collection.MapCollections$MapIterator: MapCollections$MapIterator(androidx.collection.MapCollections)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPostResume()
com.google.gson.internal.ConstructorConstructor$4: java.lang.Object construct()
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)
androidx.media.AudioAttributesCompat: java.lang.String usageToString(int)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase(int,int,int,int)
android.support.v4.os.ResultReceiver: int describeContents()
com.google.gson.internal.bind.TypeAdapters$14: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
org.threeten.bp.temporal.IsoFields$Field: boolean isIso(org.threeten.bp.temporal.TemporalAccessor)
android.support.v4.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean)
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter withChronology(org.threeten.bp.chrono.Chronology)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: void run()
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedTreeMap$Node nextNode()
io.flutter.plugin.platform.PlatformViewsController: int access$500(io.flutter.plugin.platform.PlatformViewsController,double)
org.threeten.bp.format.DateTimeBuilder: void addObject(org.threeten.bp.chrono.ChronoLocalDate)
com.google.gson.internal.ConstructorConstructor$12: ConstructorConstructor$12(com.google.gson.internal.ConstructorConstructor)
io.flutter.view.AccessibilityBridge: boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void onExtrasChanged(android.os.Bundle)
com.google.gson.internal.bind.TypeAdapters$3: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.FieldNamingPolicy$5: FieldNamingPolicy$5(java.lang.String,int)
org.threeten.bp.chrono.IsoEra: int getValue()
com.google.gson.internal.reflect.PreJava9ReflectionAccessor: void makeAccessible(java.lang.reflect.AccessibleObject)
org.threeten.bp.OffsetTime: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.OffsetTime$1: org.threeten.bp.OffsetTime queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.JsonIOException: JsonIOException(java.lang.Throwable)
org.threeten.bp.Year: org.threeten.bp.Year minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: android.view.KeyEvent findPendingEvent(android.view.KeyEvent)
io.flutter.embedding.engine.renderer.FlutterRenderer: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
org.threeten.bp.LocalDateTime: int getSecond()
org.threeten.bp.OffsetDateTime: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plusSeconds(long)
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: TextDirectionHeuristicsCompat$FirstStrong()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: NotificationChannelDetails()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean)
org.threeten.bp.zone.ZoneOffsetTransition: void writeExternal(java.io.DataOutput)
com.google.gson.stream.JsonReader: char readEscapeCharacter()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onActivityResult(int,int,android.content.Intent)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: NotificationChannelAction(java.lang.String,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.gson.stream.JsonReader: void nextNull()
org.threeten.bp.format.SimpleDateTimeTextProvider$LocaleStore: java.util.Iterator getTextIterator(org.threeten.bp.format.TextStyle)
org.threeten.bp.chrono.ThaiBuddhistDate: long getProlepticMonth()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean,android.net.Uri)
com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Time)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime ofInstant(org.threeten.bp.LocalDateTime,org.threeten.bp.ZoneOffset,org.threeten.bp.ZoneId)
io.flutter.plugin.editing.TextInputPlugin: void access$500(io.flutter.plugin.editing.TextInputPlugin,int)
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ValueRange range()
com.google.gson.internal.Excluder$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.LocalDate: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long parseLong(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.MessageDetails: MessageDetails(java.lang.String,java.lang.Long,com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.String)
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationManagerCompat getNotificationManager(android.content.Context)
org.threeten.bp.DayOfWeek: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.chrono.Chronology: org.threeten.bp.chrono.ChronoLocalDate ensureChronoLocalDate(org.threeten.bp.temporal.Temporal)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.List decodeList(java.lang.String)
com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)
androidx.collection.ArrayMap$1: int colGetSize()
com.jakewharton.threetenabp.AndroidThreeTen: void init(android.content.Context)
org.threeten.bp.chrono.ThaiBuddhistEra: void writeExternal(java.io.DataOutput)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter nullValue()
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.ChronoLocalDateTime atTime(org.threeten.bp.LocalTime)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int)
com.google.gson.JsonObject: int hashCode()
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ThaiBuddhistDate with(org.threeten.bp.LocalDate)
io.flutter.embedding.android.FlutterSplashView: android.view.View access$300(io.flutter.embedding.android.FlutterSplashView)
org.threeten.bp.chrono.MinguoEra: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale localeFromString(java.lang.String)
com.google.gson.internal.bind.JsonTreeReader$1: void close()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.gson.internal.bind.TypeAdapters$28: java.util.Locale read(com.google.gson.stream.JsonReader)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: android.view.KeyEvent access$100(io.flutter.embedding.android.AndroidKeyProcessor$EventResponder,android.view.KeyEvent)
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.android.FlutterView: void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime resolveOffset(org.threeten.bp.ZoneOffset)
org.threeten.bp.OffsetDateTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement get()
org.threeten.bp.format.DateTimeBuilder: void crossCheck()
org.threeten.bp.chrono.HijrahChronology: org.threeten.bp.chrono.ChronoZonedDateTime zonedDateTime(org.threeten.bp.Instant,org.threeten.bp.ZoneId)
com.google.gson.FieldNamingPolicy$5: java.lang.String translateName(java.lang.reflect.Field)
io.flutter.embedding.engine.FlutterEngineCache: void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine)
androidx.collection.MapCollections$ValuesCollection: boolean addAll(java.util.Collection)
io.flutter.embedding.android.FlutterView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
io.flutter.embedding.android.FlutterActivity: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
org.threeten.bp.zone.Ser: Ser()
org.threeten.bp.Year: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
android.support.v4.media.session.IMediaControllerCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
org.threeten.bp.zone.ZoneOffsetTransitionRule: void appendZeroPad(java.lang.StringBuilder,long)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.ChronoLocalDate with(org.threeten.bp.temporal.TemporalAdjuster)
org.threeten.bp.Month: int get(org.threeten.bp.temporal.TemporalField)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.gson.stream.JsonWriter: void setHtmlSafe(boolean)
com.google.gson.internal.bind.TypeAdapters$8: java.util.concurrent.atomic.AtomicInteger read(com.google.gson.stream.JsonReader)
com.google.gson.internal.LazilyParsedNumber: java.lang.String toString()
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()
com.google.gson.internal.Excluder: boolean excludeClassChecks(java.lang.Class)
io.flutter.view.AccessibilityBridge: void onTouchExplorationExit()
org.threeten.bp.zone.TzdbZoneRulesProvider$Version: org.threeten.bp.zone.ZoneRules getRules(java.lang.String)
com.google.gson.internal.Primitives: boolean isPrimitive(java.lang.reflect.Type)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: TextInputChannel$Configuration(boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[])
android.support.v4.os.IResultReceiver$Stub$Proxy: IResultReceiver$Stub$Proxy(android.os.IBinder)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder appendZoneRegionId()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()
org.threeten.bp.chrono.HijrahChronology: HijrahChronology()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivityForConfigChanges()
androidx.collection.ArrayMap$1: int colIndexOfKey(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$18: TypeAdapters$18()
io.flutter.embedding.android.AndroidTouchProcessor: AndroidTouchProcessor(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
com.google.gson.stream.JsonReader: void skipQuotedValue(char)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadAction(io.flutter.view.AccessibilityBridge$Action)
android.support.v4.os.ResultReceiver$1: java.lang.Object createFromParcel(android.os.Parcel)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.ArrayList loadScheduledNotifications(android.content.Context)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.chrono.ChronoZonedDateTimeImpl create(org.threeten.bp.Instant,org.threeten.bp.ZoneId)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int decodeOrientations(org.json.JSONArray)
androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void performPrivateCommand(int,java.lang.String,android.os.Bundle)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
org.threeten.bp.zone.StandardZoneRules: org.threeten.bp.zone.StandardZoneRules readExternal(java.io.DataInput)
org.threeten.bp.format.DecimalStyle: char getZeroDigit()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTimeImpl plusHours(long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson buildGson()
org.threeten.bp.YearMonth: org.threeten.bp.YearMonth plusYears(long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setLights(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
org.threeten.bp.ZonedDateTime: int getDayOfMonth()
org.threeten.bp.chrono.Chronology: Chronology()
org.threeten.bp.ZonedDateTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
org.threeten.bp.LocalDate: org.threeten.bp.chrono.Era getEra()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigPictureStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
org.threeten.bp.ZoneRegion: java.lang.Object readResolve()
io.flutter.view.AccessibilityBridge: int access$1102(io.flutter.view.AccessibilityBridge,int)
org.threeten.bp.chrono.MinguoChronology: org.threeten.bp.chrono.ChronoLocalDate date(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String)
org.threeten.bp.chrono.Chronology: org.threeten.bp.chrono.Chronology readExternal(java.io.DataInput)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: boolean excludeField(java.lang.reflect.Field,boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: BigPictureStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,com.dexterous.flutterlocalnotifications.BitmapSource,java.lang.String,com.dexterous.flutterlocalnotifications.BitmapSource,java.lang.Boolean)
androidx.collection.MapCollections$KeySet: MapCollections$KeySet(androidx.collection.MapCollections)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readGroupingInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiNoLongerDisplayed()
org.threeten.bp.format.DateTimePrintContext: org.threeten.bp.temporal.TemporalAccessor getTemporal()
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate of(int,int,int)
com.google.gson.internal.LinkedTreeMap: void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigPictureStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
androidx.core.app.NotificationCompat$BigTextStyle: NotificationCompat$BigTextStyle()
io.flutter.Log: void d(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onSaveInstanceState(android.os.Bundle)
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(int,int)
androidx.core.app.NotificationCompatBuilder: android.app.Notification build()
io.flutter.embedding.engine.dart.DartExecutor$1: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
org.threeten.bp.chrono.HijrahChronology: org.threeten.bp.chrono.ChronoLocalDateTime localDateTime(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.bind.JsonTreeReader: void beginObject()
org.threeten.bp.temporal.TemporalQueries$3: org.threeten.bp.temporal.TemporalUnit queryFrom(org.threeten.bp.temporal.TemporalAccessor)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: int describeContents()
io.flutter.view.AccessibilityBridge$1: AccessibilityBridge$1(io.flutter.view.AccessibilityBridge)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter name(java.lang.String)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPriority(int)
org.threeten.bp.Month: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Notification createNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.android.FlutterImageView: void onSizeChanged(int,int,int,int)
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: java.util.Collection read(com.google.gson.stream.JsonReader)
io.flutter.view.VsyncWaiter$1: void asyncWaitForVsync(long)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String access$100(java.lang.Exception)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.MinguoDate with(org.threeten.bp.temporal.TemporalAdjuster)
org.threeten.bp.LocalDateTime: LocalDateTime(org.threeten.bp.LocalDate,org.threeten.bp.LocalTime)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean clearMetaKeyStates(int)
com.google.gson.stream.JsonWriter: void close()
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()
org.threeten.bp.zone.ZoneOffsetTransition: boolean isGap()
org.threeten.bp.format.DateTimeBuilder: void resolveFractional()
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime resolveInstant(org.threeten.bp.LocalDateTime)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean launchedActivityFromHistory(android.content.Intent)
com.google.gson.Gson: void toJson(com.google.gson.JsonElement,java.lang.Appendable)
org.threeten.bp.LocalDate: int getYear()
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails from(java.util.Map)
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: void removePendingEvent(android.view.KeyEvent)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusYears(long)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.ChronoLocalDate with(org.threeten.bp.temporal.TemporalAdjuster)
com.google.gson.internal.LazilyParsedNumber: double doubleValue()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.plugin.platform.PlatformViewsController$1: void disposeAndroidViewForPlatformView(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelNotification(java.lang.Integer,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List)
io.flutter.plugin.editing.ListenableEditingState: void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.versionedparcelable.VersionedParcelParcel: boolean readBoolean()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void unspecifiedAction(int)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: NotificationDetails()
com.google.gson.internal.bind.TypeAdapters$10: java.util.concurrent.atomic.AtomicIntegerArray read(com.google.gson.stream.JsonReader)
io.flutter.plugin.common.StandardMessageCodec: void writeLong(java.io.ByteArrayOutputStream,long)
org.threeten.bp.OffsetDateTime: java.lang.String toString()
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DecimalStyle getDecimalStyle()
org.threeten.bp.chrono.ThaiBuddhistDate: void writeExternal(java.io.DataOutput)
org.threeten.bp.temporal.ValueRange: long getMinimum()
com.google.gson.internal.LazilyParsedNumber: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime readExternal(java.io.DataInput)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context getApplicationContext()
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit valueOf(java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$1: java.lang.Object[] newArray(int)
io.flutter.embedding.android.FlutterSurfaceView: void disconnectSurfaceFromRenderer()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Boolean)
io.flutter.embedding.android.AndroidKeyProcessor: java.lang.Character applyCombiningCharacterToBaseCharacter(int)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder appendOffsetId()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVibrate(long[])
org.threeten.bp.chrono.ChronoZonedDateTime$1: int compare(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterView: void init()
io.flutter.embedding.android.FlutterTextureView$1: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: TypeAdapterRuntimeTypeWrapper(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean shouldBeActive()
com.google.gson.stream.JsonReader: int doPeek()
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemOverlays(java.util.List)
org.threeten.bp.format.DateTimeParseContext: int setParsedField(org.threeten.bp.temporal.TemporalField,long,int,int)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] values()
org.threeten.bp.zone.ZoneRules$Fixed: boolean isValidOffset(org.threeten.bp.LocalDateTime,org.threeten.bp.ZoneOffset)
org.threeten.bp.zone.ZoneOffsetTransitionRule: java.lang.Object writeReplace()
org.threeten.bp.format.SimpleDateTimeTextProvider: java.util.Map$Entry createEntry(java.lang.Object,java.lang.Object)
org.threeten.bp.LocalTime: int getHour()
androidx.collection.MapCollections$EntrySet: boolean containsAll(java.util.Collection)
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance()
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: TypeAdapters$EnumTypeAdapter(java.lang.Class)
com.google.gson.internal.bind.TypeAdapters$21: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.zone.ZoneOffsetTransitionRule: ZoneOffsetTransitionRule(org.threeten.bp.Month,int,org.threeten.bp.DayOfWeek,org.threeten.bp.LocalTime,int,org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition,org.threeten.bp.ZoneOffset,org.threeten.bp.ZoneOffset,org.threeten.bp.ZoneOffset)
org.threeten.bp.jdk8.Jdk8Methods: int compareInts(int,int)
org.threeten.bp.format.DateTimeFormatter$2: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.bind.CollectionTypeAdapterFactory: CollectionTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)
org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser: long convertFromFraction(java.math.BigDecimal)
androidx.collection.MapCollections$EntrySet: boolean add(java.util.Map$Entry)
com.google.gson.internal.bind.TypeAdapters$21: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
android.support.v4.media.MediaDescriptionCompat: java.lang.String toString()
org.threeten.bp.zone.ZoneRulesProvider: java.util.Set getAvailableZoneIds()
com.google.gson.internal.Streams$AppendableWriter: void write(int)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: java.lang.Object getSystemService(java.lang.String)
androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()
com.google.gson.stream.JsonWriter: void newline()
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object)
org.threeten.bp.jdk8.Jdk8Methods: int safeAdd(int,int)
android.support.v4.media.session.ParcelableVolumeInfo$1: java.lang.Object[] newArray(int)
org.threeten.bp.temporal.IsoFields$Field$4: long getFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.ChronoLocalDate: org.threeten.bp.chrono.Era getEra()
org.threeten.bp.Year: void writeExternal(java.io.DataOutput)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21(android.media.AudioAttributes)
io.flutter.embedding.android.FlutterActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.collection.MapCollections$EntrySet: boolean contains(java.lang.Object)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: MapTypeAdapterFactory$Adapter(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)
io.flutter.plugin.platform.PlatformViewsController: void onEndFrame()
org.threeten.bp.OffsetDateTime: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.chrono.Chronology: void init()
com.google.gson.internal.bind.TypeAdapters$6: java.lang.Number read(com.google.gson.stream.JsonReader)
org.threeten.bp.chrono.ThaiBuddhistEra: int get(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.format.DateTimeFormatter$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.ChronoZonedDateTime: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
org.threeten.bp.chrono.MinguoChronology: java.lang.Object readResolve()
com.google.gson.internal.LinkedTreeMap$KeySet: boolean remove(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.plugin.editing.TextInputPlugin: void saveEditableSizeAndTransform(double,double,double[])
io.flutter.embedding.engine.systemchannels.TextInputChannel: TextInputChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26(android.media.AudioAttributes)
io.flutter.plugin.platform.PlatformPlugin$1: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
io.flutter.embedding.engine.renderer.FlutterRenderer: void startRenderingToSurface(android.view.Surface)
io.flutter.plugin.platform.PlatformPlugin: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: PlatformChannel$SoundType(java.lang.String,int,java.lang.String)
org.threeten.bp.chrono.HijrahDate: void writeExternal(java.io.DataOutput)
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenNeededNow()
org.threeten.bp.chrono.IsoEra: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
org.threeten.bp.zone.TzdbZoneRulesProvider: java.lang.String toString()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTime readExternal(java.io.ObjectInput)
org.threeten.bp.chrono.ChronoZonedDateTime: int get(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.chrono.HijrahEra: int prolepticYear(int)
android.support.v4.media.session.PlaybackStateCompat: int describeContents()
androidx.collection.MapCollections$ValuesCollection: boolean remove(java.lang.Object)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)
io.flutter.embedding.android.FlutterView: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
io.flutter.plugin.editing.TextInputPlugin$1: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
org.threeten.bp.Year: Year(int)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
org.threeten.bp.Year: org.threeten.bp.Year with(org.threeten.bp.temporal.TemporalField,long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime plusNanos(long)
com.google.gson.internal.bind.DateTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDate(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetBefore(java.lang.CharSequence,int)
com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.text.BidiFormatter: java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.chrono.ChronoZonedDateTime plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
org.threeten.bp.Duration: org.threeten.bp.Duration ofSeconds(long,long)
org.threeten.bp.LocalDate: org.threeten.bp.chrono.Chronology getChronology()
org.threeten.bp.zone.Ser: long readEpochSec(java.io.DataInput)
org.threeten.bp.LocalDate: int lengthOfMonth()
com.google.gson.internal.LinkedTreeMap$KeySet: java.util.Iterator iterator()
com.google.gson.internal.bind.TypeAdapters$26$1: java.lang.Object read(com.google.gson.stream.JsonReader)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: ScheduledNotificationReceiver()
androidx.collection.MapCollections$EntrySet: int size()
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[])
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.ChronoLocalDate plus(long,org.threeten.bp.temporal.TemporalUnit)
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()
io.flutter.embedding.android.FlutterView: android.view.PointerIcon getSystemPointerIcon(int)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean)
org.threeten.bp.ZoneId: org.threeten.bp.ZoneId of(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$35$1: TypeAdapters$35$1(com.google.gson.internal.bind.TypeAdapters$35,java.lang.Class)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()
com.google.gson.internal.UnsafeAllocator$3: UnsafeAllocator$3(java.lang.reflect.Method)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahDate ofEpochDay(long)
io.flutter.embedding.android.FlutterActivity: void configureStatusBarForFullscreenFlutterExperience()
androidx.core.app.Person: java.lang.CharSequence getName()
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
io.flutter.plugin.editing.FlutterTextUtils: FlutterTextUtils(io.flutter.embedding.engine.FlutterJNI)
android.support.v4.os.ResultReceiver$MyRunnable: ResultReceiver$MyRunnable(android.support.v4.os.ResultReceiver,int,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
org.threeten.bp.zone.ZoneRules: ZoneRules()
org.threeten.bp.format.DateTimeBuilder: org.threeten.bp.format.DateTimeBuilder putFieldValue0(org.threeten.bp.temporal.TemporalField,long)
androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannels()
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void setEventResponseHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
org.threeten.bp.temporal.TemporalQueries$1: TemporalQueries$1()
com.google.gson.JsonPrimitive: boolean getAsBoolean()
org.threeten.bp.OffsetDateTime$1: OffsetDateTime$1()
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: byte[] buffer()
io.flutter.plugin.editing.TextInputPlugin: void autofill(android.util.SparseArray)
io.flutter.embedding.android.FlutterSplashView$1: FlutterSplashView$1(io.flutter.embedding.android.FlutterSplashView)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
androidx.media.AudioAttributesImplBase: int hashCode()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
org.threeten.bp.chrono.ChronoLocalDate: int compareTo(org.threeten.bp.chrono.ChronoLocalDate)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime resolveLocal(org.threeten.bp.LocalDateTime)
com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: MessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean,java.lang.Boolean)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.content.Context createDisplayContext(android.view.Display)
androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.media.AudioAttributesImplApi26$Builder: AudioAttributesImplApi26$Builder()
io.flutter.embedding.android.FlutterActivity: boolean shouldHandleDeeplinking()
org.threeten.bp.format.DateTimeParseContext: void startOptional()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTime with(org.threeten.bp.temporal.TemporalAdjuster)
org.threeten.bp.chrono.ChronoLocalDateTime: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.chrono.ChronoDateImpl: org.threeten.bp.chrono.ChronoLocalDate plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
android.support.v4.media.session.PlaybackStateCompat: android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object)
com.google.gson.JsonObject: boolean has(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int hashCode()
androidx.media.AudioAttributesCompat: int toVolumeStreamType(boolean,int,int)
org.threeten.bp.Instant: void writeExternal(java.io.DataOutput)
io.flutter.plugin.platform.PlatformViewsController: void initializeRootImageViewIfNeeded()
org.threeten.bp.Month: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
android.support.v4.os.ResultReceiver$MyResultReceiver: void send(int,android.os.Bundle)
org.threeten.bp.LocalDateTime: long getLong(org.threeten.bp.temporal.TemporalField)
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
org.threeten.bp.chrono.IsoEra: long getLong(org.threeten.bp.temporal.TemporalField)
io.flutter.plugin.platform.PlatformPlugin$1: void setClipboardData(java.lang.String)
io.flutter.embedding.android.FlutterActivity: boolean popSystemNavigator()
org.threeten.bp.OffsetDateTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
com.google.gson.JsonObject: com.google.gson.JsonElement remove(java.lang.String)
io.flutter.embedding.android.FlutterActivity: void switchLaunchThemeForNormalTheme()
org.threeten.bp.chrono.ChronoZonedDateTime$1: int compare(org.threeten.bp.chrono.ChronoZonedDateTime,org.threeten.bp.chrono.ChronoZonedDateTime)
org.threeten.bp.chrono.ChronoLocalDate: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)
io.flutter.plugin.platform.PlatformViewsController: boolean usesVirtualDisplay(java.lang.Integer)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$2: void run()
com.google.gson.internal.bind.JsonTreeWriter: void close()
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree: org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree access$100(org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree,java.lang.CharSequence,boolean)
io.flutter.plugin.platform.VirtualDisplayController: VirtualDisplayController(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.hardware.display.VirtualDisplay,io.flutter.plugin.platform.PlatformViewFactory,android.view.Surface,io.flutter.view.TextureRegistry$SurfaceTextureEntry,android.view.View$OnFocusChangeListener,int,java.lang.Object)
org.threeten.bp.YearMonth: boolean isSupported(org.threeten.bp.temporal.TemporalField)
android.support.v4.media.MediaMetadataCompat$1: MediaMetadataCompat$1()
org.threeten.bp.temporal.ChronoField: boolean isTimeBased()
io.flutter.view.AccessibilityBridge$1: void onTooltip(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$18: void write(com.google.gson.stream.JsonWriter,java.math.BigInteger)
com.google.gson.internal.bind.TypeAdapters$29: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime parse(java.lang.CharSequence,org.threeten.bp.format.DateTimeFormatter)
com.google.gson.DefaultDateTypeAdapter: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.plugin.common.StandardMessageCodec: void writeDouble(java.io.ByteArrayOutputStream,double)
org.threeten.bp.format.DecimalStyle: int hashCode()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean beginBatchEdit()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readColor(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()
com.google.gson.internal.Excluder$1: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.OffsetTime: long toEpochNano()
org.threeten.bp.zone.StandardZoneRules: StandardZoneRules(long[],org.threeten.bp.ZoneOffset[],long[],org.threeten.bp.ZoneOffset[],org.threeten.bp.zone.ZoneOffsetTransitionRule[])
org.threeten.bp.LocalDate: org.threeten.bp.LocalDateTime atTime(org.threeten.bp.LocalTime)
com.google.gson.stream.JsonWriter: void replaceTop(int)
com.google.gson.internal.LinkedTreeMap$Node: java.lang.String toString()
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.ChronoDateImpl plusDays(long)
org.threeten.bp.chrono.ChronoDateImpl: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
com.google.gson.internal.bind.TypeAdapters$1: void write(com.google.gson.stream.JsonWriter,java.lang.Class)
com.google.gson.internal.bind.TypeAdapters$3: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.chrono.HijrahChronology: org.threeten.bp.chrono.HijrahEra eraOf(int)
org.threeten.bp.chrono.ChronoLocalDate: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
android.support.v4.media.session.MediaSessionCompat$QueueItem$1: java.lang.Object createFromParcel(android.os.Parcel)
org.threeten.bp.chrono.MinguoDate: void writeExternal(java.io.DataOutput)
org.threeten.bp.chrono.JapaneseEra: java.lang.Object readResolve()
androidx.versionedparcelable.VersionedParcelParcel: boolean readField(int)
org.threeten.bp.format.DateTimePrintContext: java.util.Locale getLocale()
io.flutter.plugin.platform.VirtualDisplayController: void dispatchTouchEvent(android.view.MotionEvent)
com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,java.util.Currency)
org.threeten.bp.chrono.HijrahDate: HijrahDate(long)
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()
androidx.core.graphics.drawable.IconCompat: int getResId()
io.flutter.view.AccessibilityBridge: void release()
org.threeten.bp.chrono.Chronology: java.lang.Object readResolve()
com.google.gson.internal.bind.TypeAdapters$7: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.TypeAdapters$23: TypeAdapters$23()
com.google.gson.Gson: java.lang.String toJson(com.google.gson.JsonElement)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: FlutterLocalNotificationsPlugin()
com.google.gson.Gson: void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.TypeAdapters$23: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.embedding.android.FlutterActivity: android.content.Context getContext()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: int get(org.threeten.bp.temporal.TemporalField)
androidx.collection.MapCollections$ValuesCollection: boolean contains(java.lang.Object)
org.threeten.bp.Year: int get(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.Year: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.ChronoDateImpl plusYears(long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationChannels(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterActivity: void release()
androidx.core.graphics.drawable.IconCompat: java.lang.String toString()
android.support.v4.media.MediaDescriptionCompat$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.collection.ArrayMap$1: void colRemoveAt(int)
com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
com.google.gson.internal.bind.TypeAdapters$29: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object)
org.threeten.bp.OffsetDateTime: org.threeten.bp.OffsetDateTime from(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.format.DateTimeParseContext$Parsed: org.threeten.bp.format.DateTimeParseContext$Parsed copy()
io.flutter.plugin.editing.ListenableEditingState: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)
io.flutter.view.AccessibilityBridge: void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener)
org.threeten.bp.chrono.ThaiBuddhistChronology: java.lang.String getId()
com.google.gson.internal.UnsafeAllocator: void assertInstantiable(java.lang.Class)
android.support.v4.media.MediaBrowserCompat$MediaItem: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] getRestorationData()
org.threeten.bp.Month: int length(boolean)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiNoLongerDisplayed()
io.flutter.plugin.common.MethodChannel: java.lang.String access$100(io.flutter.plugin.common.MethodChannel)
org.threeten.bp.chrono.HijrahDate: boolean isLeapYear(long)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ThaiBuddhistDate plusMonths(long)
org.threeten.bp.chrono.IsoChronology: org.threeten.bp.chrono.ChronoLocalDateTime localDateTime(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.zone.ZoneRulesProvider: void registerProvider0(org.threeten.bp.zone.ZoneRulesProvider)
org.threeten.bp.chrono.Chronology: int hashCode()
androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String getValueLabelHint()
io.flutter.plugin.editing.ListenableEditingState$1: ListenableEditingState$1(io.flutter.plugin.editing.ListenableEditingState,android.view.View,boolean,android.text.Editable)
org.threeten.bp.format.DateTimeFormatter: java.util.Locale getLocale()
io.flutter.embedding.engine.renderer.FlutterRenderer: void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
io.flutter.plugin.editing.TextInputPlugin: void setKeyEventProcessor(io.flutter.embedding.android.AndroidKeyProcessor)
com.google.gson.internal.bind.TypeAdapters$2: java.util.BitSet read(com.google.gson.stream.JsonReader)
org.threeten.bp.chrono.HijrahEra: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
org.threeten.bp.jdk8.DefaultInterfaceEra: long getLong(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.chrono.Chronology$1: org.threeten.bp.chrono.Chronology queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.zone.ZoneOffsetTransition: org.threeten.bp.zone.ZoneOffsetTransition readExternal(java.io.DataInput)
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery zoneId()
androidx.lifecycle.MethodCallsLogger: MethodCallsLogger()
org.threeten.bp.Instant: org.threeten.bp.Instant minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.ZoneId$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: PlatformViewsChannel$PlatformViewResizeRequest(int,double,double)
org.threeten.bp.LocalDateTime: org.threeten.bp.chrono.ChronoLocalDateTime minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.plugin.platform.PlatformViewRegistryImpl: io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
org.threeten.bp.format.DateTimeBuilder: void crossCheck(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost()
com.google.gson.stream.JsonReader: boolean isLenient()
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean doCheck(java.lang.CharSequence,int,int)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
android.support.v4.media.session.MediaSessionCompat$Token: void setSession2Token(androidx.versionedparcelable.VersionedParcelable)
androidx.media.AudioAttributesImplApi21$Builder: androidx.media.AudioAttributesImpl$Builder setLegacyStreamType(int)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.Chronology getChronology()
io.flutter.plugin.editing.TextInputPlugin: void setPlatformViewTextInputClient(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String)
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs()
org.threeten.bp.Instant: java.lang.Object writeReplace()
org.threeten.bp.LocalTime: int getMinute()
io.flutter.plugin.platform.PlatformPlugin$1: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
org.threeten.bp.chrono.MinguoEra: int getValue()
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder appendInstant()
io.flutter.embedding.engine.loader.FlutterLoader$1: FlutterLoader$1(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: PlatformChannel$1(io.flutter.embedding.engine.systemchannels.PlatformChannel)
com.google.gson.internal.UnsafeAllocator$4: UnsafeAllocator$4()
androidx.collection.MapCollections: boolean equalsSetHelper(java.util.Set,java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: TextInputChannel$TextEditState(java.lang.String,int,int,int,int)
android.support.v4.media.session.ParcelableVolumeInfo$1: android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int)
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
org.threeten.bp.LocalDateTime: int compareTo0(org.threeten.bp.LocalDateTime)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String)
org.threeten.bp.OffsetTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
androidx.core.app.NotificationManagerCompat: void cancel(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
org.threeten.bp.chrono.MinguoDate: MinguoDate(org.threeten.bp.LocalDate)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
androidx.lifecycle.LifecycleRegistry: boolean isSynced()
com.google.gson.JsonArray: java.lang.String getAsString()
org.threeten.bp.LocalDate: void writeExternal(java.io.DataOutput)
com.google.gson.stream.JsonReader$1: void promoteNameToValue(com.google.gson.stream.JsonReader)
org.threeten.bp.zone.Ser: java.lang.Object read(java.io.DataInput)
androidx.arch.core.internal.SafeIterableMap: int hashCode()
com.google.gson.internal.bind.JsonTreeReader: void expect(com.google.gson.stream.JsonToken)
org.threeten.bp.Clock$SystemClock: org.threeten.bp.Instant instant()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)
androidx.versionedparcelable.VersionedParcel: java.lang.String readString(java.lang.String,int)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
org.threeten.bp.format.DateTimeParseContext: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
org.threeten.bp.ZoneOffset: java.lang.Object readResolve()
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field[] values()
org.threeten.bp.zone.Ser: void writeEpochSec(long,java.io.DataOutput)
org.threeten.bp.LocalDate: int getMonthValue()
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra[] values()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter beginArray()
com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Object getUnsafeInstance()
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onLayout(boolean,int,int,int,int)
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.TypeAdapters$29: com.google.gson.JsonElement read(com.google.gson.stream.JsonReader)
androidx.core.app.Person: java.lang.String getKey()
androidx.core.app.NotificationManagerCompat$CancelTask: void send(android.support.v4.app.INotificationSideChannel)
org.threeten.bp.zone.ZoneOffsetTransitionRule: int hashCode()
io.flutter.embedding.android.FlutterSurfaceView: void access$200(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
org.threeten.bp.chrono.MinguoEra: int get(org.threeten.bp.temporal.TemporalField)
io.flutter.plugin.common.JSONMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField valueOf(java.lang.String)
android.support.v4.media.session.MediaSessionCompat$Token$1: MediaSessionCompat$Token$1()
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime with(org.threeten.bp.LocalDate,org.threeten.bp.LocalTime)
androidx.versionedparcelable.VersionedParcelParcel: void writeParcelable(android.os.Parcelable)
io.flutter.embedding.engine.dart.DartExecutor: DartExecutor(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager)
io.flutter.plugin.platform.PlatformPlugin$1: void restoreSystemUiOverlays()
org.threeten.bp.zone.Ser: Ser(byte,java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$20: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: int parse(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int)
com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource valueOf(java.lang.String)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseDate with(org.threeten.bp.temporal.TemporalField,long)
org.threeten.bp.Duration: boolean equals(java.lang.Object)
org.threeten.bp.zone.ZoneOffsetTransitionRule: org.threeten.bp.zone.ZoneOffsetTransition createTransition(int)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1)
org.threeten.bp.format.DateTimeBuilder: void mergeInstantFields()
io.flutter.embedding.android.FlutterView$2: void onFlutterUiNoLongerDisplayed()
org.threeten.bp.zone.StandardZoneRules: java.lang.Object writeReplace()
org.threeten.bp.zone.ZoneRules$Fixed: org.threeten.bp.ZoneOffset getOffset(org.threeten.bp.Instant)
org.threeten.bp.chrono.Ser: java.lang.Object readResolve()
org.threeten.bp.LocalDate: org.threeten.bp.DayOfWeek getDayOfWeek()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSmallIcon(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.gson.Gson$1: Gson$1(com.google.gson.Gson)
org.threeten.bp.chrono.MinguoEra: MinguoEra(java.lang.String,int)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: ScheduledNotificationRepeatFrequency(java.lang.String,int)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: ReflectiveTypeAdapterFactory$1(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,boolean,boolean,java.lang.reflect.Field,boolean,com.google.gson.TypeAdapter,com.google.gson.Gson,com.google.gson.reflect.TypeToken,boolean)
org.threeten.bp.ZoneOffset: int parseNumber(java.lang.CharSequence,int,boolean)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder parseLenient()
io.flutter.view.AccessibilityBridge$3: void onChange(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigTextStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime plusSeconds(long)
org.threeten.bp.chrono.JapaneseChronology: org.threeten.bp.chrono.JapaneseEra eraOf(int)
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence getTitle()
org.threeten.bp.format.DateTimeParseContext: DateTimeParseContext(org.threeten.bp.format.DateTimeFormatter)
io.flutter.embedding.engine.FlutterEngine$1: void onPreEngineRestart()
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Editable getEditable()
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
com.google.gson.internal.bind.JsonTreeReader: void close()
androidx.collection.SimpleArrayMap: boolean isEmpty()
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap access$1000(io.flutter.plugin.platform.PlatformViewsController)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails readPersonDetails(java.util.Map)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.core.app.Person: android.app.Person toAndroidPerson()
io.flutter.plugin.platform.PlatformViewsController: void onBeginFrame()
com.google.gson.stream.JsonReader: java.lang.String nextName()
org.threeten.bp.format.DecimalStyle: int convertToDigit(char)
com.google.gson.internal.bind.TypeAdapters$19: void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLedDetails(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.gson.internal.LinkedTreeMap$KeySet: void clear()
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: void onKeyEventHandled(android.view.KeyEvent)
com.google.gson.stream.JsonReader: void beginObject()
android.support.v4.media.session.MediaControllerCompat$Callback: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
android.support.v4.os.ResultReceiver: ResultReceiver(android.os.Parcel)
android.support.v4.media.session.PlaybackStateCompat: PlaybackStateCompat(android.os.Parcel)
androidx.core.app.NotificationCompat$Builder: int getPriority()
androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void schedule(android.view.View,java.lang.Runnable)
org.threeten.bp.MonthDay: int compareTo(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initialize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.gson.stream.JsonWriter: void beforeValue()
org.threeten.bp.chrono.JapaneseEra: org.threeten.bp.LocalDate endDate()
com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type)
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: java.lang.CharSequence subSequence(int,int)
android.support.v4.media.session.ParcelableVolumeInfo: int describeContents()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
com.google.gson.stream.JsonReader: void skipUnquotedValue()
androidx.collection.SimpleArrayMap: SimpleArrayMap()
org.threeten.bp.LocalTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.ValueRange getWeekRange(org.threeten.bp.LocalDate)
com.google.gson.JsonNull: JsonNull()
org.threeten.bp.chrono.Chronology: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag)
org.threeten.bp.OffsetTime: org.threeten.bp.OffsetTime from(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree: DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree(int)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.format.SignStyle: boolean parse(boolean,boolean,boolean)
org.threeten.bp.temporal.IsoFields$Field$3: long getFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
org.threeten.bp.chrono.ChronoZonedDateTime: int compareTo(org.threeten.bp.chrono.ChronoZonedDateTime)
org.threeten.bp.format.DateTimeFormatterBuilder$1: DateTimeFormatterBuilder$1()
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plusNanos(long)
org.threeten.bp.chrono.ChronoLocalDate: int hashCode()
org.threeten.bp.chrono.IsoChronology: org.threeten.bp.chrono.ChronoZonedDateTime zonedDateTime(org.threeten.bp.Instant,org.threeten.bp.ZoneId)
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField[] values()
androidx.collection.ArrayMap$1: void colClear()
io.flutter.view.AccessibilityBridge: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginObject()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readInboxStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager getWindowManager()
io.flutter.embedding.engine.renderer.FlutterRenderer: FlutterRenderer(io.flutter.embedding.engine.FlutterJNI)
androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
org.threeten.bp.chrono.IsoEra: boolean isSupported(org.threeten.bp.temporal.TemporalField)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
org.threeten.bp.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: DateTimeFormatterBuilder$PadPrinterParserDecorator(org.threeten.bp.format.DateTimeFormatterBuilder$DateTimePrinterParser,int,char)
androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.gson.internal.bind.TypeAdapters$15: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.ArrayList readMessages(java.util.ArrayList)
io.flutter.embedding.engine.FlutterEngine$1: FlutterEngine$1(io.flutter.embedding.engine.FlutterEngine)
androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.gson.stream.JsonReader: boolean fillBuffer(int)
io.flutter.plugin.platform.PlatformViewsController: int toPhysicalPixels(double)
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.VirtualDisplayController create(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.view.TextureRegistry$SurfaceTextureEntry,int,int,int,java.lang.Object,android.view.View$OnFocusChangeListener)
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewDetachedFromWindow(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView)
org.threeten.bp.temporal.IsoFields$Unit: IsoFields$Unit(java.lang.String,int,java.lang.String,org.threeten.bp.Duration)
com.google.gson.stream.JsonReader$1: JsonReader$1()
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void keyDown(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent)
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String toString()
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable)
io.flutter.embedding.engine.systemchannels.RestorationChannel: void setRestorationData(byte[])
org.threeten.bp.ZoneOffset: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
androidx.collection.ArrayMap$1: java.lang.Object colGetEntry(int,int)
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree: DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree(int,org.threeten.bp.format.DateTimeFormatterBuilder$1)
org.threeten.bp.LocalDateTime: boolean equals(java.lang.Object)
org.threeten.bp.OffsetDateTime: org.threeten.bp.OffsetDateTime with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine)
org.threeten.bp.format.DateTimeParseContext: boolean charEqualsIgnoreCase(char,char)
com.google.gson.JsonParseException: JsonParseException(java.lang.Throwable)
org.threeten.bp.format.DateTimeParseContext$Parsed: int get(org.threeten.bp.temporal.TemporalField)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
androidx.collection.MapCollections$ArrayIterator: MapCollections$ArrayIterator(androidx.collection.MapCollections,int)
com.google.gson.JsonElement: JsonElement()
org.threeten.bp.LocalDateTime: int getMinute()
io.flutter.embedding.android.FlutterView: void sendUserSettingsToFlutter()
org.threeten.bp.OffsetDateTime: org.threeten.bp.ZoneOffset getOffset()
org.threeten.bp.Year: int compareTo(java.lang.Object)
androidx.collection.MapCollections$EntrySet: java.util.Iterator iterator()
com.google.gson.Gson: void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)
com.google.gson.internal.bind.TypeAdapters$2: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
com.google.gson.internal.$Gson$Types: void checkNotPrimitive(java.lang.reflect.Type)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plus(long,org.threeten.bp.temporal.TemporalUnit)
com.google.gson.Gson$5: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.JsonReaderInternalAccess: JsonReaderInternalAccess()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
io.flutter.plugin.platform.PlatformViewsController$1: void setDirection(int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
org.threeten.bp.LocalDate: int get(org.threeten.bp.temporal.TemporalField)
android.support.v4.media.session.MediaSessionCompat$Token: MediaSessionCompat$Token(java.lang.Object)
androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()
com.google.gson.internal.ConstructorConstructor$14: java.lang.Object construct()
org.threeten.bp.LocalTime: int get(org.threeten.bp.temporal.TemporalField)
android.support.v4.media.MediaBrowserCompat$MediaItem$1: java.lang.Object[] newArray(int)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onQueueTitleChanged(java.lang.CharSequence)
com.google.gson.internal.bind.TypeAdapters$16: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.format.DateTimePrintContext: void endOptional()
com.google.gson.TypeAdapter: TypeAdapter()
com.google.gson.internal.ConstructorConstructor$7: java.lang.Object construct()
org.threeten.bp.temporal.TemporalAdjusters$RelativeDayOfWeek: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
org.threeten.bp.OffsetDateTime$2: int compare(java.lang.Object,java.lang.Object)
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
com.google.gson.internal.LinkedTreeMap$KeySet: int size()
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.MinguoDate minus(long,org.threeten.bp.temporal.TemporalUnit)
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(int,int,int)
com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)
com.google.gson.internal.bind.JsonTreeReader: void beginArray()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.util.PathUtils: java.lang.String getDataDirectory(android.content.Context)
io.flutter.embedding.android.FlutterImageView: void closeCurrentImage()
com.google.gson.internal.bind.TypeAdapters$14: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4202(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
org.threeten.bp.chrono.ChronoZonedDateTime$1: ChronoZonedDateTime$1()
com.google.gson.internal.bind.TypeAdapters$11: TypeAdapters$11()
org.threeten.bp.format.SimpleDateTimeTextProvider$1: int compare(java.lang.Object,java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Enum)
com.google.gson.JsonElement: boolean isJsonPrimitive()
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime ofLocal(org.threeten.bp.LocalDateTime,org.threeten.bp.ZoneId,org.threeten.bp.ZoneOffset)
io.flutter.plugin.platform.PlatformPlugin: void access$800(io.flutter.plugin.platform.PlatformPlugin,java.lang.String)
org.threeten.bp.LocalTime: java.lang.Object readResolve()
org.threeten.bp.format.DateTimeParseContext: org.threeten.bp.format.DateTimeParseContext$Parsed toParsed()
org.threeten.bp.ZonedDateTime: int getMonthValue()
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser valueOf(java.lang.String)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void cancel(java.lang.String,int,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: void clearPlatformViewClient(int)
org.threeten.bp.zone.StandardZoneRules: org.threeten.bp.ZoneOffset getOffset(org.threeten.bp.Instant)
com.google.gson.internal.LazilyParsedNumber: float floatValue()
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object)
io.flutter.view.VsyncWaiter$1: VsyncWaiter$1(io.flutter.view.VsyncWaiter)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDateMatchingDateTimeComponents(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
org.threeten.bp.chrono.Chronology: org.threeten.bp.chrono.ChronoLocalDateTime localDateTime(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.LocalTime: int getNano()
io.flutter.plugin.platform.PlatformViewsController$1: PlatformViewsController$1(io.flutter.plugin.platform.PlatformViewsController)
org.threeten.bp.format.DateTimeParseContext: org.threeten.bp.ZoneId access$100(org.threeten.bp.format.DateTimeParseContext)
com.google.gson.internal.PreJava9DateFormatProvider: java.text.DateFormat getUSDateTimeFormat(int,int)
com.google.gson.LongSerializationPolicy: LongSerializationPolicy(java.lang.String,int,com.google.gson.LongSerializationPolicy$1)
android.support.v4.media.session.ParcelableVolumeInfo$1: ParcelableVolumeInfo$1()
org.threeten.bp.zone.ZoneRules$Fixed: java.util.List getValidOffsets(org.threeten.bp.LocalDateTime)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean isRtl(java.lang.CharSequence,int,int)
com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.IconSource: IconSource(java.lang.String,int)
com.jakewharton.threetenabp.AssetsZoneRulesInitializer: void initializeProviders()
io.flutter.view.AccessibilityBridge$Flag: AccessibilityBridge$Flag(java.lang.String,int,int)
io.flutter.embedding.android.FlutterSurfaceView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.plugin.editing.TextInputPlugin$1: void clearClient()
androidx.versionedparcelable.ParcelUtils: ParcelUtils()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endArray()
androidx.media.AudioAttributesImplApi21$Builder: androidx.media.AudioAttributesImplApi21$Builder setLegacyStreamType(int)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle setGroupConversation(boolean)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
org.threeten.bp.jdk8.Jdk8Methods: int floorMod(long,int)
androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()
org.threeten.bp.format.DateTimeParseContext: void setStrict(boolean)
com.google.gson.internal.bind.TypeAdapters$14: java.lang.Number read(com.google.gson.stream.JsonReader)
org.threeten.bp.chrono.JapaneseEra: JapaneseEra(int,org.threeten.bp.LocalDate,java.lang.String)
org.threeten.bp.chrono.ChronoZonedDateTime: org.threeten.bp.Instant toInstant()
org.threeten.bp.zone.Ser: java.lang.Object readInternal(byte,java.io.DataInput)
org.threeten.bp.MonthDay: long getLong(org.threeten.bp.temporal.TemporalField)
com.google.gson.reflect.TypeToken: java.lang.String toString()
com.google.gson.internal.bind.TypeAdapters$3: void write(com.google.gson.stream.JsonWriter,java.lang.Boolean)
org.threeten.bp.chrono.ChronoDateImpl: org.threeten.bp.chrono.ChronoLocalDateTime atTime(org.threeten.bp.LocalTime)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime ofSecondOfDay(long,int)
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: ScheduledNotificationBootReceiver()
androidx.arch.core.internal.SafeIterableMap$Entry: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean)
org.threeten.bp.MonthDay: java.lang.Object writeReplace()
org.threeten.bp.temporal.TemporalQueries$5: TemporalQueries$5()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setWhen(long)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser withSubsequentWidth(int)
android.support.v4.media.session.MediaSessionCompat$Token$1: android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.Month$1: org.threeten.bp.Month queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeatNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
org.threeten.bp.YearMonth: YearMonth(int,int)
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: boolean print(org.threeten.bp.format.DateTimePrintContext,java.lang.StringBuilder)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String)
com.google.gson.TypeAdapter: com.google.gson.TypeAdapter nullSafe()
io.flutter.plugin.platform.PlatformViewsController$1: void clearFocus(int)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTime plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: int parse(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int)
com.google.gson.internal.bind.TypeAdapters$30: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.flutter.plugin.common.StandardMessageCodec: void writeChar(java.io.ByteArrayOutputStream,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.format.DateTimePrintContext: java.lang.Long getValue(org.threeten.bp.temporal.TemporalField)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidBigPictureResources(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
org.threeten.bp.LocalDateTime: int compareTo(java.lang.Object)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: LocalizationChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager getInputMethodManager()
androidx.collection.MapCollections$ValuesCollection: int size()
com.google.gson.TypeAdapter: com.google.gson.JsonElement toJsonTree(java.lang.Object)
com.google.gson.internal.bind.JsonTreeReader: void endObject()
org.threeten.bp.chrono.ChronoLocalDateTime: org.threeten.bp.chrono.Chronology getChronology()
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
org.threeten.bp.OffsetTime: java.lang.Object writeReplace()
io.flutter.view.AccessibilityBridge: void sendLatestAccessibilityFlagsToFlutter()
org.threeten.bp.chrono.JapaneseChronology: org.threeten.bp.chrono.JapaneseDate date(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromFirstChar(java.util.Locale)
com.google.gson.internal.bind.JsonTreeWriter$1: void write(char[],int,int)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ChronoLocalDate plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.format.DateTimeFormatterBuilder$3: int compare(java.lang.Object,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: PlatformViewsController()
io.flutter.plugin.platform.PlatformViewsController: void detachAccessibiltyBridge()
org.threeten.bp.jdk8.DefaultInterfaceTemporalAccessor: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: PlaybackStateCompat$CustomAction(java.lang.String,java.lang.CharSequence,int,android.os.Bundle)
com.google.gson.internal.LinkedTreeMap$KeySet$1: LinkedTreeMap$KeySet$1(com.google.gson.internal.LinkedTreeMap$KeySet)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.Era getEra()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4100(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.gson.internal.bind.TypeAdapters$17: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.jdk8.DefaultInterfaceTemporal: DefaultInterfaceTemporal()
org.threeten.bp.LocalDateTime: java.lang.String toString()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence)
org.threeten.bp.format.DateTimeParseContext: org.threeten.bp.format.DateTimeParseContext copy()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
com.google.gson.Gson: com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)
com.google.gson.Gson: com.google.gson.TypeAdapter doubleAdapter(boolean)
android.support.v4.media.MediaDescriptionCompat: java.lang.Object getMediaDescription()
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1: android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
org.threeten.bp.chrono.MinguoEra: long getLong(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.YearMonth: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String)
com.google.gson.internal.LinkedTreeMap$EntrySet$1: LinkedTreeMap$EntrySet$1(com.google.gson.internal.LinkedTreeMap$EntrySet)
org.threeten.bp.chrono.ChronoLocalDate: org.threeten.bp.chrono.ChronoLocalDateTime atTime(org.threeten.bp.LocalTime)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache getInstance()
org.threeten.bp.temporal.IsoFields$Field$1: org.threeten.bp.temporal.ValueRange range()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: AccessibilityChannel(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI)
com.google.gson.Gson$FutureTypeAdapter: Gson$FutureTypeAdapter()
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.ValueRange access$300(org.threeten.bp.LocalDate)
org.threeten.bp.Ser: Ser(byte,java.lang.Object)
org.threeten.bp.temporal.IsoFields$Field$1: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal,long)
org.threeten.bp.format.DateTimeParseException: DateTimeParseException(java.lang.String,java.lang.CharSequence,int,java.lang.Throwable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
org.threeten.bp.format.DateTimeBuilder: boolean resolveFields(org.threeten.bp.format.ResolverStyle)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
org.threeten.bp.ZonedDateTime: int getMinute()
org.threeten.bp.zone.StandardZoneRules: int findYear(long,org.threeten.bp.ZoneOffset)
org.threeten.bp.OffsetTime: int compareTo(org.threeten.bp.OffsetTime)
org.threeten.bp.Year: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromService()
org.threeten.bp.Year: org.threeten.bp.Year from(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.ChronoLocalDate plus(org.threeten.bp.temporal.TemporalAmount)
org.threeten.bp.format.DateTimeFormatter: java.lang.String format(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type)
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Boolean)
org.threeten.bp.ZonedDateTime$1: org.threeten.bp.ZonedDateTime queryFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.plugin.platform.AccessibilityEventsDelegate: void setAccessibilityBridge(io.flutter.view.AccessibilityBridge)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTime toLocalDateTime()
androidx.collection.ArrayMap$1: int colIndexOfValue(java.lang.Object)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime withZoneSameLocal(org.threeten.bp.ZoneId)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: void run()
com.jakewharton.threetenabp.AssetsZoneRulesInitializer: AssetsZoneRulesInitializer(android.content.Context,java.lang.String)
org.threeten.bp.LocalTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: CollectionTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean finishComposingText()
android.support.v4.media.MediaBrowserCompat$MediaItem: int describeContents()
io.flutter.embedding.android.FlutterActivity: void configureWindowForTransparency()
io.flutter.embedding.engine.renderer.FlutterRenderer: void markTextureFrameAvailable(long)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
org.threeten.bp.OffsetDateTime: int compareTo(java.lang.Object)
org.threeten.bp.temporal.ValueRange: long checkValidValue(long,org.threeten.bp.temporal.TemporalField)
com.google.gson.internal.bind.TypeAdapters$35: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
org.threeten.bp.format.DateTimeParseContext: boolean isCaseSensitive()
io.flutter.view.AccessibilityBridge: boolean performSetText(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityInternal()
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1: java.lang.Object createFromParcel(android.os.Parcel)
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra[] values()
android.support.v4.media.RatingCompat: void writeToParcel(android.os.Parcel,int)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void addView(java.lang.Object[])
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.view.AccessibilityBridge$1: void onTap(int)
android.support.v4.media.session.IMediaSession$Stub$Proxy: void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: AccessibilityChannel$1(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: AccessibilityBridge$AccessibilityFeature(java.lang.String,int,int)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.ChronoLocalDate with(org.threeten.bp.temporal.TemporalField,long)
org.threeten.bp.format.DateTimePrintContext$1: boolean isSupported(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.android.FlutterTextureView$1: FlutterTextureView$1(io.flutter.embedding.android.FlutterTextureView)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
org.threeten.bp.temporal.ChronoUnit: java.lang.String toString()
io.flutter.embedding.android.FlutterTextureView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.google.gson.Gson: com.google.gson.stream.JsonReader newJsonReader(java.io.Reader)
org.threeten.bp.chrono.JapaneseDate: long getDayOfYear()
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()
org.threeten.bp.LocalDate: java.lang.String toString()
androidx.core.graphics.drawable.IconCompat: IconCompat(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
org.threeten.bp.LocalTime: java.lang.Object writeReplace()
io.flutter.view.AccessibilityBridge: boolean isAccessibilityEnabled()
com.google.gson.JsonPrimitive: boolean isString()
org.threeten.bp.chrono.IsoChronology: org.threeten.bp.chrono.ChronoLocalDate date(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.ChronoZonedDateTime: java.lang.String toString()
com.dexterous.flutterlocalnotifications.utils.StringUtils: StringUtils()
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ThaiBuddhistDate plusYears(long)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler access$000(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
io.flutter.embedding.android.FlutterView: void sendViewportMetricsToFlutter()
org.threeten.bp.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: boolean print(org.threeten.bp.format.DateTimePrintContext,java.lang.StringBuilder)
io.flutter.embedding.android.RenderMode: RenderMode(java.lang.String,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.text.TextDirectionHeuristicsCompat: int isRtlTextOrFormat(int)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime of(int,int)
org.threeten.bp.zone.ZoneRulesInitializer: ZoneRulesInitializer()
org.threeten.bp.Period: boolean isZero()
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte dirTypeBackward()
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.chrono.ChronoZonedDateTime readExternal(java.io.ObjectInput)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1)
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionUnlocked()
org.threeten.bp.chrono.MinguoDate: boolean equals(java.lang.Object)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void onQueueTitleChanged(java.lang.CharSequence)
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.gson.reflect.TypeToken: java.lang.Class getRawType()
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner)
com.google.gson.internal.Excluder$1: Excluder$1(com.google.gson.internal.Excluder,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken)
org.threeten.bp.temporal.IsoFields$Field$2: org.threeten.bp.temporal.ValueRange rangeRefinedBy(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.bind.TypeAdapters$2: void write(com.google.gson.stream.JsonWriter,java.util.BitSet)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection getLastInputConnection()
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
androidx.collection.MapCollections$ValuesCollection: boolean removeAll(java.util.Collection)
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: boolean print(org.threeten.bp.format.DateTimePrintContext,java.lang.StringBuilder)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: PlatformViewsChannel$1$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1,io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.ZoneId getZone()
org.threeten.bp.Year$1: org.threeten.bp.Year queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.JavaVersion: int extractBeginningInt(java.lang.String)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(android.view.KeyEvent)
org.threeten.bp.LocalTime: int toSecondOfDay()
com.google.gson.internal.LazilyParsedNumber: long longValue()
androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)
org.threeten.bp.temporal.IsoFields$Field$1: org.threeten.bp.temporal.TemporalAccessor resolve(java.util.Map,org.threeten.bp.temporal.TemporalAccessor,org.threeten.bp.format.ResolverStyle)
io.flutter.embedding.android.FlutterSurfaceView: boolean gatherTransparentRegion(android.graphics.Region)
androidx.media.AudioAttributesImplApi21: java.lang.String toString()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.HashMap getMappedNotificationChannel(android.app.NotificationChannel)
org.threeten.bp.zone.StandardZoneRules: void writeExternal(java.io.DataOutput)
io.flutter.embedding.android.FlutterSplashView$2: FlutterSplashView$2(io.flutter.embedding.android.FlutterSplashView)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1)
com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context)
com.google.gson.internal.ConstructorConstructor$6: java.lang.Object construct()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
io.flutter.plugin.editing.ListenableEditingState: void setComposingRange(int,int)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZoneId getZone()
org.threeten.bp.format.DateTimeFormatterBuilder$InstantPrinterParser: boolean print(org.threeten.bp.format.DateTimePrintContext,java.lang.StringBuilder)
com.google.gson.internal.Streams: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: FlutterImageView$SurfaceKind(java.lang.String,int)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseDate withYear(int)
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: int setValue(org.threeten.bp.format.DateTimeParseContext,long,int,int)
org.threeten.bp.temporal.IsoFields$Field$4: java.lang.String toString()
androidx.versionedparcelable.VersionedParcelParcel: java.lang.CharSequence readCharSequence()
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ThaiBuddhistDate with(org.threeten.bp.temporal.TemporalAdjuster)
androidx.core.app.Person$Builder: Person$Builder()
org.threeten.bp.MonthDay$1: MonthDay$1()
org.threeten.bp.Instant: Instant(long,int)
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat build()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.app.Activity getAppComponent()
org.threeten.bp.ZonedDateTime$1: ZonedDateTime$1()
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader()
org.threeten.bp.Year: org.threeten.bp.Year with(org.threeten.bp.temporal.TemporalAdjuster)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime readExternal(java.io.DataInput)
org.threeten.bp.jdk8.DefaultInterfaceTemporal: org.threeten.bp.temporal.Temporal plus(org.threeten.bp.temporal.TemporalAmount)
io.flutter.plugin.platform.PlatformPlugin: void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
android.support.v4.media.RatingCompat: RatingCompat(int,float)
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] getAdjustedMonthDays(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigTextStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.android.FlutterView: void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.gson.internal.LinkedTreeMap: void clear()
io.flutter.plugin.common.StandardMessageCodec: byte[] readBytes(java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: int length()
androidx.media.AudioAttributesImplApi26$Builder: androidx.media.AudioAttributesImpl build()
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ChronoDateImpl plusDays(long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix getMatrix()
org.threeten.bp.jdk8.Jdk8Methods: int floorMod(int,int)
org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser: int parse(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int)
org.threeten.bp.ZoneOffset: int get(org.threeten.bp.temporal.TemporalField)
com.google.gson.LongSerializationPolicy: LongSerializationPolicy(java.lang.String,int)
com.google.gson.internal.bind.TypeAdapters$14: TypeAdapters$14()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTime with(org.threeten.bp.temporal.TemporalField,long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.RestorationChannel: void clearData()
org.threeten.bp.jdk8.DefaultInterfaceEra: int get(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.chrono.HijrahChronology: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.ChronoField)
org.threeten.bp.LocalTime: int compareTo(org.threeten.bp.LocalTime)
android.support.v4.media.session.IMediaSession$Stub: android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder)
com.google.gson.internal.bind.TypeAdapters$34: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
org.threeten.bp.OffsetTime: java.lang.String toString()
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray()
com.google.gson.internal.bind.TypeAdapters$23: java.net.InetAddress read(com.google.gson.stream.JsonReader)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void cancelAll(java.lang.String)
org.threeten.bp.OffsetDateTime: org.threeten.bp.OffsetDateTime with(org.threeten.bp.temporal.TemporalField,long)
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.plugin.platform.PlatformPlugin: void access$100(io.flutter.plugin.platform.PlatformPlugin,int)
org.threeten.bp.OffsetTime: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3900(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: MediaControllerCompat$PlaybackInfo(int,androidx.media.AudioAttributesCompat,int,int,int)
android.support.v4.media.session.PlaybackStateCompat: java.lang.String toString()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readProgressInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.google.gson.internal.bind.TypeAdapters$20: TypeAdapters$20()
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime withMinute(int)
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle valueOf(java.lang.String)
com.google.gson.TypeAdapter: java.lang.Object fromJsonTree(com.google.gson.JsonElement)
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onNewIntent(android.content.Intent)
org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser: DateTimeFormatterBuilder$CompositePrinterParser(org.threeten.bp.format.DateTimeFormatterBuilder$DateTimePrinterParser[],boolean)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusDays(long)
org.threeten.bp.format.SignStyle: SignStyle(java.lang.String,int)
androidx.core.app.Person: boolean isImportant()
org.threeten.bp.chrono.MinguoChronology: org.threeten.bp.chrono.MinguoDate date(org.threeten.bp.temporal.TemporalAccessor)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setCategory(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLongArray)
org.threeten.bp.chrono.IsoChronology: boolean isLeapYear(long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setInboxStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingTextInCodePoints(int,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long)
androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)
com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.embedding.android.FlutterActivity: void onStop()
org.threeten.bp.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.graphics.drawable.IconCompat getIconFromSource(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.models.IconSource)
org.threeten.bp.chrono.IsoChronology: org.threeten.bp.chrono.Era eraOf(int)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: MotionEventTracker$MotionEventId(long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void access$000(android.content.SharedPreferences$Editor,int)
org.threeten.bp.format.DateTimeFormatterBuilder$3: DateTimeFormatterBuilder$3()
com.google.gson.internal.Excluder: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onNewIntent(android.content.Intent)
io.flutter.embedding.android.FlutterView: boolean hasRenderedFirstFrame()
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery zone()
org.threeten.bp.ZoneOffset$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.Instant: org.threeten.bp.Instant readExternal(java.io.DataInput)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
com.google.gson.stream.JsonReader: java.lang.String nextQuotedValue(char)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.core.app.NotificationManagerCompat$CancelTask: NotificationManagerCompat$CancelTask(java.lang.String,int,java.lang.String)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endObject()
org.threeten.bp.Instant: int hashCode()
io.flutter.plugin.common.StringCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler)
io.flutter.Log: void v(java.lang.String,java.lang.String)
com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)
org.threeten.bp.ZoneId$1: ZoneId$1()
com.google.gson.internal.bind.TypeAdapters$28: TypeAdapters$28()
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser withFixedWidth()
org.threeten.bp.chrono.ChronoZonedDateTime: long getLong(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet,boolean)
org.threeten.bp.YearMonth: org.threeten.bp.YearMonth of(int,int)
com.google.gson.internal.bind.JsonTreeReader: boolean nextBoolean()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean requestCursorUpdates(int)
org.threeten.bp.OffsetDateTime: org.threeten.bp.OffsetDateTime minus(long,org.threeten.bp.temporal.TemporalUnit)
android.support.v4.media.session.MediaSessionCompat$Token$1: android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int)
com.google.gson.internal.Excluder$1: com.google.gson.TypeAdapter delegate()
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
org.threeten.bp.MonthDay: org.threeten.bp.MonthDay readExternal(java.io.DataInput)
com.google.gson.internal.bind.TypeAdapters$6: TypeAdapters$6()
org.threeten.bp.LocalDate: org.threeten.bp.chrono.ChronoLocalDate minus(long,org.threeten.bp.temporal.TemporalUnit)
com.google.gson.internal.bind.TimeTypeAdapter$1: TimeTypeAdapter$1()
com.google.gson.internal.LinkedTreeMap$EntrySet$1: java.util.Map$Entry next()
androidx.core.app.AlarmManagerCompat: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
org.threeten.bp.Instant: org.threeten.bp.Instant with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.gson.TypeAdapter$1: TypeAdapter$1(com.google.gson.TypeAdapter)
io.flutter.plugin.platform.PlatformPlugin: void updateSystemUiOverlays()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColor(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: TextInputChannel$TextInputType(java.lang.String,int,java.lang.String)
org.threeten.bp.Year: boolean isLeap(long)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: SingleViewPresentation$PresentationContext(android.content.Context,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler,android.content.Context)
org.threeten.bp.zone.ZoneOffsetTransition: int compareTo(org.threeten.bp.zone.ZoneOffsetTransition)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onUserLeaveHint()
org.threeten.bp.temporal.ChronoField: boolean isDateBased()
org.threeten.bp.LocalTime: void writeExternal(java.io.DataOutput)
org.threeten.bp.Instant: int compareTo(org.threeten.bp.Instant)
org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser: boolean print(org.threeten.bp.format.DateTimePrintContext,java.lang.StringBuilder)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void commitAsync(android.content.SharedPreferences$Editor,io.flutter.plugin.common.MethodChannel$Result)
android.support.v4.media.session.MediaControllerCompat$Callback: void onSessionEvent(java.lang.String,android.os.Bundle)
org.threeten.bp.format.DateTimeBuilder: DateTimeBuilder()
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.OffsetTime: void writeExternal(java.io.DataOutput)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
org.threeten.bp.MonthDay: java.lang.String toString()
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime plusHours(long)
org.threeten.bp.LocalDateTime: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
com.google.gson.internal.bind.TypeAdapters$20: void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer)
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationComplete(android.content.Context,java.lang.String[])
androidx.collection.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)
org.threeten.bp.LocalDate: int getDayOfYear()
org.threeten.bp.chrono.ChronoZonedDateTime: org.threeten.bp.chrono.ChronoZonedDateTime with(org.threeten.bp.temporal.TemporalAdjuster)
com.google.gson.internal.bind.TypeAdapters$14: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.chrono.ChronoLocalDate$1: int compare(org.threeten.bp.chrono.ChronoLocalDate,org.threeten.bp.chrono.ChronoLocalDate)
org.threeten.bp.Year: org.threeten.bp.Year plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.LocalDateTime: boolean isAfter(org.threeten.bp.chrono.ChronoLocalDateTime)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahDate of(int,int,int)
org.threeten.bp.LocalDate: org.threeten.bp.chrono.ChronoLocalDate plus(org.threeten.bp.temporal.TemporalAmount)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory$1: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: boolean excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder)
androidx.core.app.NotificationCompat$Action: int getSemanticAction()
com.google.gson.internal.bind.TypeAdapters$24: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction valueOf(java.lang.String)
com.google.gson.FieldNamingPolicy$4: FieldNamingPolicy$4(java.lang.String,int)
android.support.v4.media.MediaDescriptionCompat: android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object)
org.threeten.bp.chrono.ChronoLocalDateTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
android.support.v4.os.ResultReceiver$MyRunnable: void run()
org.threeten.bp.LocalDateTime: org.threeten.bp.OffsetDateTime atOffset(org.threeten.bp.ZoneOffset)
org.threeten.bp.chrono.MinguoChronology: org.threeten.bp.chrono.Era eraOf(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
android.support.v4.media.session.PlaybackStateCompat$1: android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel)
com.google.gson.stream.JsonReader: int peekNumber()
io.flutter.plugin.editing.TextInputPlugin: void access$300(io.flutter.plugin.editing.TextInputPlugin)
androidx.collection.SimpleArrayMap: int hashCode()
org.threeten.bp.chrono.ChronoZonedDateTime: int compareTo(java.lang.Object)
org.threeten.bp.Instant: long getEpochSecond()
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl[] newArray(int)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.Chronology getChronology()
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ChronoLocalDate plus(org.threeten.bp.temporal.TemporalAmount)
androidx.lifecycle.LifecycleRegistry: void popParentState()
org.threeten.bp.chrono.MinguoChronology: org.threeten.bp.chrono.MinguoEra eraOf(int)
com.google.gson.internal.bind.TreeTypeAdapter: TreeTypeAdapter(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.util.Set)
io.flutter.plugin.editing.TextInputPlugin$1: void hide()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState[] newArray(int)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIOverlays(java.util.List)
org.threeten.bp.chrono.ChronoLocalDateTime: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
io.flutter.plugin.common.StandardMessageCodec: void writeAlignment(java.io.ByteArrayOutputStream,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
io.flutter.embedding.android.FlutterTextureView: void disconnectSurfaceFromRenderer()
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$700(io.flutter.view.AccessibilityBridge)
org.threeten.bp.OffsetTime$1: OffsetTime$1()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean endBatchEdit()
io.flutter.plugin.common.MethodCall: MethodCall(java.lang.String,java.lang.Object)
com.google.gson.stream.JsonWriter: JsonWriter(java.io.Writer)
android.support.v4.media.MediaDescriptionCompat: void writeToParcel(android.os.Parcel,int)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime of(org.threeten.bp.LocalDateTime,org.threeten.bp.ZoneId)
androidx.core.app.NotificationCompat$Builder: void setFlag(int,boolean)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.KeyEventChannel getKeyEventChannel()
androidx.core.text.TextDirectionHeuristicsCompat: int isRtlText(int)
com.google.gson.internal.ConstructorConstructor: ConstructorConstructor(java.util.Map)
com.google.gson.internal.bind.ArrayTypeAdapter$1: ArrayTypeAdapter$1()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.Era getEra()
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra of(int)
org.threeten.bp.chrono.HijrahChronology: org.threeten.bp.chrono.HijrahDate date(int,int,int)
org.threeten.bp.chrono.ChronoLocalDateTime: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
android.support.v4.media.MediaBrowserCompat$MediaItem$1: MediaBrowserCompat$MediaItem$1()
android.support.v4.media.RatingCompat$1: java.lang.Object createFromParcel(android.os.Parcel)
org.threeten.bp.zone.ZoneRules$Fixed: java.lang.String toString()
org.threeten.bp.chrono.ThaiBuddhistEra: ThaiBuddhistEra(java.lang.String,int)
com.google.gson.JsonPrimitive: boolean isNumber()
androidx.core.text.BidiFormatter: java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
org.threeten.bp.chrono.HijrahDate: int getMaximumDayOfMonth()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int getVirtualNodeId(long)
io.flutter.plugin.platform.PlatformViewsController: void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
androidx.lifecycle.Lifecycle$State: Lifecycle$State(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.SettingsChannel: SettingsChannel(io.flutter.embedding.engine.dart.DartExecutor)
org.threeten.bp.LocalDateTime: java.lang.Object readResolve()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
android.support.v4.media.MediaBrowserCompat$MediaItem$1: android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int)
com.google.gson.internal.bind.TypeAdapters$25: TypeAdapters$25()
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatter withResolverStyle(org.threeten.bp.format.ResolverStyle)
org.threeten.bp.DayOfWeek: int getValue()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoZonedDateTime atZone(org.threeten.bp.ZoneId)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
org.threeten.bp.format.DateTimeParseContext: boolean charEquals(char,char)
com.google.gson.internal.bind.TypeAdapters$27: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.Excluder: boolean isInnerClass(java.lang.Class)
org.threeten.bp.chrono.JapaneseEra: java.lang.Object writeReplace()
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getReadMethod(java.lang.String)
androidx.core.text.BidiFormatter: boolean isRtlLocale(java.util.Locale)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPause()
com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()
com.google.gson.internal.bind.TypeAdapters$22: void write(com.google.gson.stream.JsonWriter,java.net.URI)
io.flutter.plugin.platform.PlatformViewsController: void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)
org.threeten.bp.chrono.HijrahChronology: java.lang.Object readResolve()
com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)
io.flutter.view.VsyncWaiter: void init()
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)
io.flutter.plugin.editing.ListenableEditingState: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: ReflectiveTypeAdapterFactory$BoundField(java.lang.String,boolean,boolean)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: RestorationChannel$1(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin()
androidx.collection.SimpleArrayMap: java.lang.Object replace(java.lang.Object,java.lang.Object)
com.google.gson.stream.JsonReader: int nextInt()
android.support.v4.media.session.MediaSessionCompat$QueueItem: int describeContents()
io.flutter.embedding.android.FlutterActivity: android.app.Activity getActivity()
com.google.gson.internal.bind.TypeAdapters$20: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo()
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(int,int)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21(android.media.AudioAttributes,int)
com.google.gson.internal.bind.TypeAdapters$32: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
org.threeten.bp.temporal.ChronoField: ChronoField(java.lang.String,int,java.lang.String,org.threeten.bp.temporal.TemporalUnit,org.threeten.bp.temporal.TemporalUnit,org.threeten.bp.temporal.ValueRange)
com.google.gson.internal.bind.TypeAdapters$11: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean)
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel)
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.LinkedTreeMap$EntrySet: LinkedTreeMap$EntrySet(com.google.gson.internal.LinkedTreeMap)
io.flutter.plugin.editing.TextInputPlugin$1: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
org.threeten.bp.YearMonth: org.threeten.bp.YearMonth from(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
com.google.gson.stream.JsonReader: java.lang.String nextString()
org.threeten.bp.chrono.HijrahChronology: org.threeten.bp.chrono.ChronoLocalDate date(org.threeten.bp.temporal.TemporalAccessor)
androidx.core.graphics.drawable.IconCompat: android.content.res.Resources getResources(android.content.Context,java.lang.String)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plus(org.threeten.bp.temporal.TemporalAmount)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
org.threeten.bp.LocalDateTime: org.threeten.bp.chrono.ChronoLocalDateTime plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context)
io.flutter.embedding.android.FlutterImageView: void onDraw(android.graphics.Canvas)
org.threeten.bp.temporal.ValueRange: long getMaximum()
androidx.media.AudioAttributesCompat: androidx.media.AudioAttributesCompat wrap(java.lang.Object)
org.threeten.bp.Period: org.threeten.bp.Period create(int,int,int)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message)
androidx.core.app.NotificationCompat$Builder: android.app.Notification build()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.android.FlutterActivity: void onCreate(android.os.Bundle)
org.threeten.bp.Instant: org.threeten.bp.Instant ofEpochSecond(long)
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView access$000(io.flutter.embedding.android.FlutterSplashView)
org.threeten.bp.zone.StandardZoneRules: org.threeten.bp.zone.ZoneOffsetTransition getTransition(org.threeten.bp.LocalDateTime)
org.threeten.bp.temporal.TemporalQueries$7: TemporalQueries$7()
android.support.v4.media.session.MediaSessionCompat$QueueItem$1: java.lang.Object[] newArray(int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void surfaceChanged(int,int)
org.threeten.bp.temporal.IsoFields$Field$3: IsoFields$Field$3(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.google.gson.internal.bind.JsonTreeReader: java.lang.String toString()
org.threeten.bp.format.DateTimeParseContext: org.threeten.bp.chrono.Chronology getEffectiveChronology()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
android.support.v4.media.session.ParcelableVolumeInfo: ParcelableVolumeInfo(android.os.Parcel)
org.threeten.bp.chrono.ThaiBuddhistChronology: ThaiBuddhistChronology()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.google.gson.Gson$1: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.core.app.NotificationCompatJellybean: android.util.SparseArray buildActionExtrasMap(java.util.List)
com.google.gson.internal.bind.TypeAdapters$21: void write(com.google.gson.stream.JsonWriter,java.net.URL)
org.threeten.bp.chrono.ChronoLocalDateTime$1: ChronoLocalDateTime$1()
androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)
com.google.gson.internal.bind.ArrayTypeAdapter: ArrayTypeAdapter(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)
com.google.gson.JsonElement: java.lang.String getAsString()
androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)
org.threeten.bp.ZonedDateTime: int getHour()
androidx.versionedparcelable.VersionedParcelParcel: void writeString(java.lang.String)
com.google.gson.internal.ConstructorConstructor$4: ConstructorConstructor$4(com.google.gson.internal.ConstructorConstructor)
org.threeten.bp.format.DateTimeBuilder: void checkDate(org.threeten.bp.LocalDate)
org.threeten.bp.temporal.IsoFields$Field$4: boolean isSupportedBy(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.LinkedTreeMap: LinkedTreeMap()
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence)
com.google.gson.JsonParseException: JsonParseException(java.lang.String,java.lang.Throwable)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeViewImmediate(java.lang.Object[])
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: AndroidKeyProcessor$EventResponder(android.view.View,io.flutter.plugin.editing.TextInputPlugin)
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: int parse(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo)
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node first()
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory: JsonAdapterAnnotationTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset ofHoursMinutesSeconds(int,int,int)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl access$100(io.flutter.plugin.platform.PlatformViewsController)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.plugin.common.MethodChannel,boolean)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void read(com.google.gson.stream.JsonReader,java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1)
org.threeten.bp.YearMonth: int hashCode()
com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: long getLong(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void send(int)
org.threeten.bp.zone.ZoneRulesInitializer$ServiceLoaderZoneRulesInitializer: void initializeProviders()
io.flutter.embedding.android.FlutterView: void convertToImageView()
io.flutter.plugin.editing.ListenableEditingState: void notifyListenersIfNeeded(boolean,boolean,boolean)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(java.lang.Object[],int)
com.google.gson.internal.bind.TypeAdapters$16: java.lang.String read(com.google.gson.stream.JsonReader)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
com.google.gson.internal.bind.TypeAdapters$6: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin$2: void inspect(double,double)
com.google.gson.DefaultDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.Date)
com.google.gson.internal.UnsafeAllocator$2: UnsafeAllocator$2(java.lang.reflect.Method,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterImageView: void init()
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
android.support.v4.media.MediaBrowserCompat$ItemReceiver: void onReceiveResult(int,android.os.Bundle)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: MediaSessionCompat$ResultReceiverWrapper(android.os.Parcel)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface access$300(io.flutter.embedding.android.FlutterView)
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
org.threeten.bp.temporal.IsoFields$Field: int[] access$200()
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.String toString()
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerChangeForAction(int)
com.google.gson.stream.JsonReader: void skipToEndOfLine()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.gson.internal.bind.SqlDateTypeAdapter$1: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.gson.internal.reflect.UnsafeReflectionAccessor: void makeAccessible(java.lang.reflect.AccessibleObject)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didChangeLabel()
com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
androidx.collection.ArrayMap: void putAll(java.util.Map)
org.threeten.bp.Duration: org.threeten.bp.Duration readExternal(java.io.DataInput)
io.flutter.plugin.platform.PlatformPlugin: void setClipboardData(java.lang.String)
io.flutter.embedding.android.FlutterSplashView: void displayFlutterViewWithSplash(io.flutter.embedding.android.FlutterView,io.flutter.embedding.android.SplashScreen)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onGenericMotionEvent(android.view.MotionEvent)
org.threeten.bp.LocalTime: boolean equals(java.lang.Object)
com.google.gson.DefaultDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.ChronoDateImpl plusMonths(long)
io.flutter.embedding.engine.FlutterEngine: void destroy()
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1: MediaSessionCompat$ResultReceiverWrapper$1()
androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ThaiBuddhistDate plusDays(long)
androidx.collection.SimpleArrayMap: int size()
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
org.threeten.bp.format.DateTimeFormatterBuilder$3: int compare(java.lang.String,java.lang.String)
org.threeten.bp.Instant$1: Instant$1()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence)
org.threeten.bp.format.DateTimeBuilder: java.lang.Object build(org.threeten.bp.temporal.TemporalQuery)
io.flutter.plugin.platform.PlatformViewsController: boolean access$000(int)
io.flutter.embedding.android.FlutterView: void onConfigurationChanged(android.content.res.Configuration)
org.threeten.bp.chrono.ChronoLocalDateTime: long toEpochSecond(org.threeten.bp.ZoneOffset)
com.google.gson.internal.bind.ArrayTypeAdapter$1: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.gson.internal.ConstructorConstructor$3: java.lang.Object construct()
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4500(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
org.threeten.bp.LocalTime: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: NotificationManagerCompat$SideChannelManager$ListenerRecord(android.content.ComponentName)
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)
org.threeten.bp.zone.StandardZoneRules: org.threeten.bp.zone.ZoneOffsetTransition[] findTransitionArray(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: float max(float,float,float,float)
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1: android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int)
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()
io.flutter.embedding.engine.dart.DartExecutor: void onDetachedFromJNI()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
com.google.gson.internal.bind.TypeAdapters$12: java.lang.Number read(com.google.gson.stream.JsonReader)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.String toString()
org.threeten.bp.chrono.ThaiBuddhistChronology: org.threeten.bp.chrono.Era eraOf(int)
org.threeten.bp.chrono.IsoEra: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plusDays(long)
io.flutter.embedding.android.FlutterSplashView: boolean wasPreviousSplashTransitionInterrupted()
io.flutter.plugin.platform.AccessibilityEventsDelegate: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.gson.stream.JsonToken: JsonToken(java.lang.String,int)
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra valueOf(java.lang.String)
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle[] values()
com.google.gson.internal.bind.TypeAdapters$9: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: DeferredComponentChannel$1(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.chrono.ThaiBuddhistEra: long getLong(org.threeten.bp.temporal.TemporalField)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleHorizontalMovement(boolean,boolean)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int)
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
org.threeten.bp.chrono.MinguoChronology: MinguoChronology()
org.threeten.bp.chrono.JapaneseChronology: java.lang.String getCalendarType()
org.threeten.bp.temporal.IsoFields$Field$4: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal,long)
androidx.collection.MapCollections$EntrySet: boolean equals(java.lang.Object)
org.threeten.bp.chrono.IsoChronology: org.threeten.bp.chrono.IsoEra eraOf(int)
org.threeten.bp.chrono.ThaiBuddhistDate: int getProlepticYear()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: FlutterRenderer$SurfaceTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long,android.graphics.SurfaceTexture)
io.flutter.embedding.android.FlutterView: void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView)
io.flutter.plugin.localization.LocalizationPlugin: LocalizationPlugin(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel)
com.google.gson.internal.LinkedTreeMap$Node: LinkedTreeMap$Node()
io.flutter.plugin.platform.PlatformView: void onInputConnectionLocked()
org.threeten.bp.Ser: java.lang.Object readResolve()
com.google.gson.internal.bind.util.ISO8601Utils: int indexOfNonDigit(java.lang.String,int)
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String getDataMimeType()
org.threeten.bp.chrono.ThaiBuddhistChronology: org.threeten.bp.chrono.ChronoLocalDateTime localDateTime(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.DefaultDateTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat)
org.threeten.bp.format.DateTimeFormatter: java.lang.Object parse(java.lang.CharSequence,org.threeten.bp.temporal.TemporalQuery)
org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser: int parse(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.collection.MapCollections$ValuesCollection: void clear()
org.threeten.bp.chrono.ChronoZonedDateTime: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
com.google.gson.Gson$FutureTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShowWhen(boolean)
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map packageData(byte[])
io.flutter.embedding.android.FlutterTextureView: void changeSurfaceSize(int,int)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.ChronoLocalDate readExternal(java.io.DataInput)
com.google.gson.internal.ConstructorConstructor$13: ConstructorConstructor$13(com.google.gson.internal.ConstructorConstructor)
io.flutter.plugin.platform.PlatformViewsController: boolean checkInputConnectionProxy(android.view.View)
org.threeten.bp.chrono.ChronoLocalDate: long toEpochDay()
org.threeten.bp.zone.ZoneOffsetTransition: ZoneOffsetTransition(org.threeten.bp.LocalDateTime,org.threeten.bp.ZoneOffset,org.threeten.bp.ZoneOffset)
org.threeten.bp.chrono.JapaneseChronology: JapaneseChronology()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didScroll()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.gson.Gson: com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy)
org.threeten.bp.OffsetTime: int compareTo(java.lang.Object)
io.flutter.view.VsyncWaiter: android.view.WindowManager access$000(io.flutter.view.VsyncWaiter)
org.threeten.bp.Year: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.plugin.platform.PlatformViewsController: float getDisplayDensity()
io.flutter.embedding.android.MotionEventTracker: MotionEventTracker()
com.google.gson.internal.bind.TypeAdapters$7: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray()
org.threeten.bp.zone.ZoneOffsetTransition: java.lang.Object writeReplace()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.platform.PlatformViewsController: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
org.threeten.bp.zone.TzdbZoneRulesProvider$Version: org.threeten.bp.zone.ZoneRules createRule(short)
io.flutter.plugin.editing.TextInputPlugin: void didChangeEditingState(boolean,boolean,boolean)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
android.support.v4.media.MediaDescriptionCompat$1: android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])
org.threeten.bp.jdk8.Jdk8Methods: long safeMultiply(long,int)
com.google.gson.internal.bind.TypeAdapters$33: TypeAdapters$33(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: BigTextStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean)
org.threeten.bp.chrono.JapaneseDate: java.lang.Object writeReplace()
androidx.collection.MapCollections$EntrySet: boolean isEmpty()
com.google.gson.internal.bind.TypeAdapters$35: java.lang.String toString()
org.threeten.bp.ZoneOffset: ZoneOffset(int)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onRepeatModeChanged(int)
io.flutter.embedding.android.FlutterSurfaceView: void changeSurfaceSize(int,int)
com.google.gson.DefaultDateTypeAdapter: java.util.Date read(com.google.gson.stream.JsonReader)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply)
androidx.media.app.NotificationCompat$MediaStyle: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
org.threeten.bp.format.DateTimeParseContext: void setParsedLeapSecond()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)
org.threeten.bp.Instant: org.threeten.bp.Instant plus(long,long)
io.flutter.plugin.editing.ListenableEditingState: int getSelectionStart()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel()
androidx.core.app.NotificationCompatBuilder: android.app.Notification$Builder getBuilder()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLights(int,int,int)
org.threeten.bp.chrono.HijrahDate: long toEpochDay()
com.google.gson.internal.bind.TypeAdapters$17: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeat(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)
org.threeten.bp.ZonedDateTime: org.threeten.bp.DayOfWeek getDayOfWeek()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void detachFromFlutterEngine()
androidx.core.app.NotificationManagerCompat: void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task)
org.threeten.bp.LocalDateTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.view.AccessibilityBridge: boolean onAccessibilityHoverEvent(android.view.MotionEvent)
io.flutter.embedding.android.FlutterActivity: boolean shouldDestroyEngineWithHost()
org.threeten.bp.temporal.ChronoField: long checkValidValue(long)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime of(int,int,int)
org.threeten.bp.Ser: void writeExternal(java.io.ObjectOutput)
org.threeten.bp.chrono.HijrahDate: int getYearLength(int)
androidx.collection.SimpleArrayMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: DefaultStyleInformation(java.lang.Boolean,java.lang.Boolean)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: SingleViewPresentation$WindowManagerHandler(android.view.WindowManager,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence makeMessageLine(androidx.core.app.NotificationCompat$MessagingStyle$Message)
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValueOfType(byte,java.nio.ByteBuffer)
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: int checkRtl(java.lang.CharSequence,int,int)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahDate plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.YearMonth: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1: java.lang.Object[] newArray(int)
org.threeten.bp.format.DateTimeParseException: DateTimeParseException(java.lang.String,java.lang.CharSequence,int)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.MinguoChronology getChronology()
org.threeten.bp.LocalDate$1: org.threeten.bp.LocalDate queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.OffsetTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
androidx.media.app.NotificationCompat$MediaStyle: android.widget.RemoteViews generateContentView()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void previous(int)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
io.flutter.plugin.common.JSONMethodCodec: JSONMethodCodec()
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: SafeIterableMap$AscendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
org.threeten.bp.YearMonth: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate ofEpochDay(long)
com.dexterous.flutterlocalnotifications.models.PersonDetails: PersonDetails(java.lang.Boolean,java.lang.String,com.dexterous.flutterlocalnotifications.models.IconSource,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String)
org.threeten.bp.OffsetTime: org.threeten.bp.OffsetTime minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.format.DateTimeFormatter: void formatTo(org.threeten.bp.temporal.TemporalAccessor,java.lang.Appendable)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ChronoLocalDate with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifierBase(int)
org.threeten.bp.zone.ZoneOffsetTransition: org.threeten.bp.ZoneOffset getOffsetAfter()
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView createImageView()
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipTagBackward()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: FlutterRenderer$SurfaceTextureRegistryEntry$1(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject)
androidx.core.app.Person$Builder: androidx.core.app.Person build()
com.google.gson.JsonArray: boolean equals(java.lang.Object)
androidx.collection.ArrayMap$1: void colPut(java.lang.Object,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.OffsetTime: org.threeten.bp.OffsetTime with(org.threeten.bp.LocalTime,org.threeten.bp.ZoneOffset)
org.threeten.bp.chrono.ChronoZonedDateTime: boolean isBefore(org.threeten.bp.chrono.ChronoZonedDateTime)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String readString()
com.google.gson.Gson$5: Gson$5(com.google.gson.TypeAdapter)
com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initAndroidThreeTen(android.content.Context)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: java.lang.Object writeReplace()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4600(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahDate minus(long,org.threeten.bp.temporal.TemporalUnit)
com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object getKey()
org.threeten.bp.chrono.Ser: java.lang.Object readInternal(byte,java.io.ObjectInput)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class)
com.google.gson.internal.bind.TypeAdapters$5: TypeAdapters$5()
androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector build()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedSchedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.NotificationManagerCompat$NotifyTask: NotificationManagerCompat$NotifyTask(java.lang.String,int,java.lang.String,android.app.Notification)
androidx.core.app.NotificationCompat$MessagingStyle$Message: NotificationCompat$MessagingStyle$Message(java.lang.CharSequence,long,androidx.core.app.Person)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
io.flutter.plugin.common.StringCodec: StringCodec()
com.google.gson.internal.JavaVersion: int parseDotted(java.lang.String)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.Era getEra()
org.threeten.bp.LocalTime: long toNanoOfDay()
com.google.gson.internal.bind.TypeAdapters$13: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.core.text.ICUCompat: java.lang.String addLikelySubtags(java.util.Locale)
io.flutter.util.PathUtils: java.lang.String getCacheDirectory(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
android.support.v4.media.session.MediaSessionCompat$Token: boolean equals(java.lang.Object)
com.google.gson.internal.UnsafeAllocator$1: UnsafeAllocator$1(java.lang.reflect.Method,java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean commitText(java.lang.CharSequence,int)
org.threeten.bp.temporal.IsoFields$Field$3: boolean isSupportedBy(org.threeten.bp.temporal.TemporalAccessor)
androidx.core.text.BidiFormatter$DirectionalityEstimator: BidiFormatter$DirectionalityEstimator(java.lang.CharSequence,boolean)
com.google.gson.reflect.TypeToken: TypeToken()
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$402(io.flutter.embedding.android.FlutterSplashView,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: void validateVirtualDisplayDimensions(int,int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onRestoreInstanceState(android.os.Bundle)
org.threeten.bp.ZoneId: org.threeten.bp.ZoneId ofOffset(java.lang.String,org.threeten.bp.ZoneOffset)
org.threeten.bp.ZoneRegion: org.threeten.bp.zone.ZoneRules getRules()
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
com.google.gson.internal.Streams$AppendableWriter: void flush()
io.flutter.view.AccessibilityBridge$SemanticsNode: AccessibilityBridge$SemanticsNode(io.flutter.view.AccessibilityBridge)
org.threeten.bp.zone.TzdbZoneRulesProvider: boolean load(java.io.InputStream)
androidx.versionedparcelable.VersionedParcelParcel: byte[] readByteArray()
com.google.gson.stream.JsonReader: JsonReader(java.io.Reader)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceCreated(android.view.SurfaceHolder)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: SettingsChannel$MessageBuilder(io.flutter.plugin.common.BasicMessageChannel)
io.flutter.plugin.common.JSONMessageCodec: JSONMessageCodec()
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray(java.lang.Object[])
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
org.threeten.bp.format.DateTimeFormatterBuilder$TextPrinterParser: DateTimeFormatterBuilder$TextPrinterParser(org.threeten.bp.temporal.TemporalField,org.threeten.bp.format.TextStyle,org.threeten.bp.format.DateTimeTextProvider)
io.flutter.plugin.editing.TextInputPlugin: void access$200(io.flutter.plugin.editing.TextInputPlugin,android.view.View)
com.google.gson.internal.UnsafeAllocator: com.google.gson.internal.UnsafeAllocator create()
org.threeten.bp.temporal.IsoFields$Field$4: org.threeten.bp.temporal.ValueRange range()
com.google.gson.internal.ConstructorConstructor$10: java.lang.Object construct()
org.threeten.bp.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: DateTimeFormatterBuilder$StringLiteralPrinterParser(java.lang.String)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.ChronoLocalDateTime atTime(org.threeten.bp.LocalTime)
io.flutter.plugin.mouse.MouseCursorPlugin$1: MouseCursorPlugin$1(io.flutter.plugin.mouse.MouseCursorPlugin)
android.support.v4.os.ResultReceiver$1: android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVisibility(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.core.app.Person: Person(androidx.core.app.Person$Builder)
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: PlatformViewsChannel$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
org.threeten.bp.LocalDate: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
org.threeten.bp.format.DateTimeBuilder: long getLong(org.threeten.bp.temporal.TemporalField)
com.google.gson.internal.bind.TypeAdapters$12: TypeAdapters$12()
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromePreferredOrientations(int)
org.threeten.bp.LocalDate: org.threeten.bp.chrono.ChronoLocalDate with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.embedding.android.FlutterView: boolean onHoverEvent(android.view.MotionEvent)
androidx.collection.ArrayMap: java.util.Collection values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: PlatformChannel$HapticFeedbackType(java.lang.String,int,java.lang.String)
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
com.google.gson.internal.bind.TypeAdapters$15: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.plugin.platform.VirtualDisplayController: android.view.View getView()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterTextureView)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
io.flutter.plugin.platform.PlatformViewsController: android.view.View getPlatformViewById(java.lang.Integer)
com.google.gson.internal.$Gson$Types: java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5000(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
org.threeten.bp.chrono.Chronology: java.lang.Object writeReplace()
com.google.gson.internal.bind.TypeAdapters$12: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.TypeAdapters$15: TypeAdapters$15()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.gson.FieldNamingPolicy$6: java.lang.String translateName(java.lang.reflect.Field)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.String)
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel)
io.flutter.embedding.android.AndroidKeyProcessor: AndroidKeyProcessor(android.view.View,io.flutter.embedding.engine.systemchannels.KeyEventChannel,io.flutter.plugin.editing.TextInputPlugin)
org.threeten.bp.zone.ZoneRulesException: ZoneRulesException(java.lang.String)
com.dexterous.flutterlocalnotifications.RepeatInterval: RepeatInterval(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endArray()
org.threeten.bp.LocalDate: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
org.threeten.bp.temporal.TemporalAdjusters$RelativeDayOfWeek: TemporalAdjusters$RelativeDayOfWeek(int,org.threeten.bp.DayOfWeek,org.threeten.bp.temporal.TemporalAdjusters$1)
org.threeten.bp.format.DateTimeParseContext: void setParsed(org.threeten.bp.ZoneId)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
android.support.v4.os.IResultReceiver$Stub: android.os.IBinder asBinder()
org.threeten.bp.temporal.TemporalQueries$2: TemporalQueries$2()
org.threeten.bp.jdk8.DefaultInterfaceTemporalAccessor: DefaultInterfaceTemporalAccessor()
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.chrono.ChronoLocalDateTime: int compareTo(java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21: void onQueueChanged(java.util.List)
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource valueOf(java.lang.String)
androidx.core.app.NotificationCompat$BigPictureStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.flutter.embedding.engine.dart.DartMessenger$Reply: void reply(java.nio.ByteBuffer)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerCoordsList(java.lang.Object,float)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate withDayOfYear(int)
org.threeten.bp.temporal.TemporalQueries$2: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap)
org.threeten.bp.ZoneRegion: void writeExternal(java.io.DataOutput)
org.threeten.bp.format.DateTimeParseContext$Parsed: org.threeten.bp.format.DateTimeBuilder toBuilder()
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseDate plusMonths(long)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String[] toArray()
com.google.gson.internal.bind.TimeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode access$6000(io.flutter.view.AccessibilityBridge,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void tryCommittingInBackground(android.content.SharedPreferences$Editor,int)
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] values()
io.flutter.plugin.platform.PlatformViewsController: void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra readExternal(java.io.DataInput)
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] getAdjustedMonthLength(int)
org.threeten.bp.format.DateTimeBuilder: org.threeten.bp.format.DateTimeBuilder resolve(org.threeten.bp.format.ResolverStyle,java.util.Set)
org.threeten.bp.format.DateTimeFormatterBuilder$2: DateTimeFormatterBuilder$2(org.threeten.bp.format.DateTimeFormatterBuilder,org.threeten.bp.format.SimpleDateTimeTextProvider$LocaleStore)
org.threeten.bp.OffsetTime: org.threeten.bp.OffsetTime readExternal(java.io.DataInput)
org.threeten.bp.chrono.ThaiBuddhistDate: ThaiBuddhistDate(org.threeten.bp.LocalDate)
androidx.collection.SimpleArrayMap: boolean remove(java.lang.Object,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: void detachTextInputPlugin()
com.google.gson.stream.JsonReader: java.lang.String getPath()
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahDate plusDays(long)
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3702(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
org.threeten.bp.Period: java.lang.Object readResolve()
io.flutter.embedding.android.FlutterView$2: void onFlutterUiDisplayed()
org.threeten.bp.OffsetTime: int hashCode()
androidx.core.graphics.drawable.IconCompat: void onPreParceling(boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRestoreInstanceState(android.os.Bundle)
org.threeten.bp.chrono.ChronoLocalDate$1: ChronoLocalDate$1()
org.threeten.bp.temporal.IsoFields$Field$1: java.lang.String toString()
com.google.gson.JsonObject: java.util.Set entrySet()
org.threeten.bp.chrono.HijrahDate: long yearToGregorianEpochDay(int)
org.threeten.bp.ZoneOffset: java.lang.String buildId(int)
org.threeten.bp.chrono.HijrahDate: int lengthOfMonth()
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence)
org.threeten.bp.Instant: long getLong(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.chrono.MinguoChronology: org.threeten.bp.chrono.ChronoLocalDateTime localDateTime(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.JapaneseEra: int ordinal(int)
androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)
io.flutter.plugin.common.MethodCall: java.lang.Object arguments()
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float)
org.threeten.bp.format.DateTimeFormatter$1: DateTimeFormatter$1()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)
org.threeten.bp.format.DateTimePrintContext: java.lang.Object getValue(org.threeten.bp.temporal.TemporalQuery)
org.threeten.bp.Instant: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiNoLongerDisplayed()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.common.StringCodec: java.lang.String decodeMessage(java.nio.ByteBuffer)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)
org.threeten.bp.chrono.JapaneseChronology: org.threeten.bp.chrono.ChronoLocalDate date(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
org.threeten.bp.ZoneOffset: int hashCode()
com.google.gson.internal.bind.TypeAdapters$5: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.plugin.platform.PlatformViewsController: void initializePlatformViewIfNeeded(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNextRepeatingNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)
com.google.gson.internal.bind.TypeAdapters$28: void write(com.google.gson.stream.JsonWriter,java.util.Locale)
io.flutter.view.AccessibilityBridge: void updateSemantics(java.nio.ByteBuffer,java.lang.String[])
io.flutter.plugin.editing.TextInputPlugin: void unlockPlatformViewInputConnection()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToContentProvider()
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseDate withYear(org.threeten.bp.chrono.JapaneseEra,int)
io.flutter.plugin.platform.PlatformViewsController: void onDetachedFromJNI()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setActivity(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$1: FlutterLocalNotificationsPlugin$1()
org.threeten.bp.chrono.Chronology: org.threeten.bp.chrono.Chronology from(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: MediaControllerCompat$Callback$StubCompat(android.support.v4.media.session.MediaControllerCompat$Callback)
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent getActionIntent()
com.google.gson.internal.ConstructorConstructor$6: ConstructorConstructor$6(com.google.gson.internal.ConstructorConstructor)
io.flutter.view.AccessibilityBridge: int access$1100(io.flutter.view.AccessibilityBridge)
org.threeten.bp.chrono.ThaiBuddhistChronology: org.threeten.bp.chrono.ChronoZonedDateTime zonedDateTime(org.threeten.bp.Instant,org.threeten.bp.ZoneId)
io.flutter.plugin.platform.PlatformViewsController$1$1: void run()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean sendNotificationPayloadMessage(android.content.Intent)
android.support.v4.media.MediaMetadataCompat$1: android.support.v4.media.MediaMetadataCompat[] newArray(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.editing.TextInputPlugin$1: void setEditableSizeAndTransform(double,double,double[])
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: void run()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void release()
io.flutter.embedding.android.FlutterTextureView: void init()
org.threeten.bp.chrono.ChronoLocalDateTime: ChronoLocalDateTime()
android.support.v4.media.session.MediaControllerCompat$Callback: void binderDied()
org.threeten.bp.chrono.JapaneseDate: void writeExternal(java.io.DataOutput)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.core.graphics.drawable.IconCompat: java.lang.String typeToString(int)
org.threeten.bp.zone.ZoneOffsetTransition: int hashCode()
org.threeten.bp.format.DateTimeFormatter: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: MouseCursorChannel$1(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean)
org.threeten.bp.Clock$SystemClock: org.threeten.bp.ZoneId getZone()
org.threeten.bp.Duration: void writeExternal(java.io.DataOutput)
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context,android.util.AttributeSet,int)
com.google.gson.Gson$5: java.util.concurrent.atomic.AtomicLongArray read(com.google.gson.stream.JsonReader)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationStart(android.animation.Animator)
org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: boolean print(org.threeten.bp.format.DateTimePrintContext,java.lang.StringBuilder)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: boolean isSupported(org.threeten.bp.temporal.TemporalField)
com.dexterous.flutterlocalnotifications.models.Time: Time()
org.threeten.bp.chrono.Ser: Ser()
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.chrono.ChronoZonedDateTime ofBest(org.threeten.bp.chrono.ChronoLocalDateTimeImpl,org.threeten.bp.ZoneId,org.threeten.bp.ZoneOffset)
org.threeten.bp.ZonedDateTime: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String encodeList(java.util.List)
io.flutter.plugin.editing.InputConnectionAdaptor: void didChangeEditingState(boolean,boolean,boolean)
com.google.gson.internal.LinkedTreeMap: boolean containsKey(java.lang.Object)
org.threeten.bp.Month: org.threeten.bp.Month from(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.zone.ZoneOffsetTransition: ZoneOffsetTransition(long,org.threeten.bp.ZoneOffset,org.threeten.bp.ZoneOffset)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency valueOf(java.lang.String)
org.threeten.bp.ZoneOffset: void writeExternal(java.io.DataOutput)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.renderer.FlutterRenderer: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
org.threeten.bp.format.DateTimeBuilder: void mergeDate(org.threeten.bp.format.ResolverStyle)
org.threeten.bp.chrono.JapaneseChronology: org.threeten.bp.chrono.JapaneseDate date(int,int,int)
io.flutter.plugin.platform.PlatformPlugin$1: void popSystemNavigator()
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.MinguoDate plus(org.threeten.bp.temporal.TemporalAmount)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
org.threeten.bp.OffsetTime: int get(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onTouchEvent(android.view.MotionEvent)
org.threeten.bp.Month: org.threeten.bp.Month valueOf(java.lang.String)
org.threeten.bp.chrono.HijrahDate: int[] getHijrahDateInfo(long)
com.google.gson.internal.Excluder: boolean excludeClassInStrategy(java.lang.Class,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setTimeoutAfter(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: void redispatchKeyEvent(android.view.KeyEvent)
org.threeten.bp.Instant: int getNano()
io.flutter.embedding.android.FlutterSurfaceView: boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri)
android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel getDefaultImpl()
io.flutter.embedding.android.FlutterView: void autofill(android.util.SparseArray)
io.flutter.plugin.editing.ListenableEditingState: void beginBatchEdit()
org.threeten.bp.ZonedDateTime: boolean isSupported(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDate toLocalDate()
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: boolean equals(java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.ChronoLocalDate readExternal(java.io.DataInput)
android.support.v4.media.session.MediaSessionCompat$QueueItem$1: android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel)
com.google.gson.FieldNamingPolicy: FieldNamingPolicy(java.lang.String,int,com.google.gson.FieldNamingPolicy$1)
io.flutter.view.AccessibilityBridge$Action: AccessibilityBridge$Action(java.lang.String,int,int)
com.google.gson.JsonPrimitive: boolean isBoolean()
androidx.media.AudioAttributesImplApi21$Builder: androidx.media.AudioAttributesImpl build()
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.threeten.bp.OffsetTime: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
com.google.gson.JsonSyntaxException: JsonSyntaxException(java.lang.String)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsResumed()
com.google.gson.internal.bind.TreeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.collection.MapCollections$EntrySet: boolean remove(java.lang.Object)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLargeIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,com.dexterous.flutterlocalnotifications.BitmapSource)
org.threeten.bp.format.DateTimeFormatterBuilder: DateTimeFormatterBuilder(org.threeten.bp.format.DateTimeFormatterBuilder,boolean)
io.flutter.embedding.android.FlutterView: boolean onTouchEvent(android.view.MotionEvent)
org.threeten.bp.zone.StandardZoneRules: java.lang.Object getOffsetInfo(org.threeten.bp.LocalDateTime)
org.threeten.bp.Instant$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.JsonArray: int hashCode()
org.threeten.bp.Duration: int hashCode()
com.google.gson.internal.bind.TypeAdapters$8: java.lang.Object read(com.google.gson.stream.JsonReader)
android.support.v4.media.session.ParcelableVolumeInfo$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.gson.internal.$Gson$Types: int indexOf(java.lang.Object[],java.lang.Object)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void notImplemented()
android.support.v4.media.MediaMetadataCompat$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.gson.Gson$3: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.LinkedTreeMap: boolean equal(java.lang.Object,java.lang.Object)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate withMonth(int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVisibility(int)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
io.flutter.embedding.android.FlutterTextureView: void access$300(io.flutter.embedding.android.FlutterTextureView,int,int)
org.threeten.bp.MonthDay: org.threeten.bp.MonthDay of(org.threeten.bp.Month,int)
org.threeten.bp.OffsetDateTime: org.threeten.bp.LocalDate toLocalDate()
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView$1: FlutterSurfaceView$1(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.embedding.android.DrawableSplashScreen: void transitionToFlutter(java.lang.Runnable)
org.threeten.bp.temporal.TemporalQueries$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
android.support.v4.media.session.MediaSessionCompat$QueueItem$1: android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int)
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver: void onReceiveResult(int,android.os.Bundle)
io.flutter.embedding.android.FlutterActivity: void onTrimMemory(int)
org.threeten.bp.LocalDate: boolean isLeapYear()
com.google.gson.internal.$Gson$Types: java.lang.String typeToString(java.lang.reflect.Type)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationCancel(android.animation.Animator)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate create(int,org.threeten.bp.Month,int)
org.threeten.bp.ZoneRegion: org.threeten.bp.ZoneId readExternal(java.io.DataInput)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,java.util.Map)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer: void stopRenderingToSurface()
org.threeten.bp.zone.Ser: java.lang.Object readResolve()
com.google.gson.internal.bind.TypeAdapters$19: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.OffsetDateTime: org.threeten.bp.LocalTime toLocalTime()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void destroy()
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: boolean defaultIsRtl()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMessagingStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.android.FlutterActivity: java.lang.String getAppBundlePath()
io.flutter.plugin.platform.PlatformViewsController: void access$600(io.flutter.plugin.platform.PlatformViewsController,int,int)
androidx.core.app.NotificationManagerCompat$CancelTask: NotificationManagerCompat$CancelTask(java.lang.String)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context)
io.flutter.embedding.android.FlutterSurfaceView: void init()
io.flutter.embedding.engine.loader.FlutterLoader$Settings: FlutterLoader$Settings()
io.flutter.embedding.engine.loader.FlutterLoader$1$1: void run()
io.flutter.plugin.editing.TextInputPlugin: void notifyViewEntered()
androidx.core.graphics.drawable.IconCompat: IconCompat()
org.threeten.bp.temporal.IsoFields$Field$3: org.threeten.bp.temporal.ValueRange range()
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.ChronoLocalDate minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.format.DateTimeParseContext: void endOptional(boolean)
org.threeten.bp.chrono.JapaneseDate: long getLong(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.chrono.ChronoLocalDate: java.lang.String toString()
androidx.collection.MapCollections$MapIterator: boolean equals(java.lang.Object)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class access$100(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
org.threeten.bp.Instant: boolean equals(java.lang.Object)
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapter delegate()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: PlatformChannel$SystemUiOverlay(java.lang.String,int,java.lang.String)
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
org.threeten.bp.Ser: void readExternal(java.io.ObjectInput)
com.google.gson.FieldNamingPolicy$1: FieldNamingPolicy$1(java.lang.String,int)
androidx.core.app.NotificationManagerCompat: void cancel(java.lang.String,int)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: MethodCallHandlerImpl$1$1(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1,boolean)
io.flutter.plugin.editing.TextInputPlugin$1: void requestAutofill()
org.threeten.bp.temporal.ChronoField: java.lang.String toString()
com.google.gson.internal.bind.SqlDateTypeAdapter: SqlDateTypeAdapter()
org.threeten.bp.chrono.ChronoLocalDate$1: int compare(java.lang.Object,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: void flushAllViews()
org.threeten.bp.LocalDateTime$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.ThaiBuddhistDate: long getLong(org.threeten.bp.temporal.TemporalField)
androidx.versionedparcelable.VersionedParcelParcel: void writeBoolean(boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$5100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityBridge: android.content.ContentResolver access$1000(io.flutter.view.AccessibilityBridge)
io.flutter.plugin.platform.PlatformPlugin$1: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeView(java.lang.Object[])
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plusMinutes(long)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
org.threeten.bp.Month: Month(java.lang.String,int)
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21: void onExtrasChanged(android.os.Bundle)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String)
org.threeten.bp.temporal.TemporalQueries$6: org.threeten.bp.LocalDate queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)
android.support.v4.media.session.MediaControllerCompat$Callback: MediaControllerCompat$Callback()
org.threeten.bp.LocalDate: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
org.threeten.bp.OffsetTime: boolean isSupported(org.threeten.bp.temporal.TemporalField)
com.google.gson.internal.ConstructorConstructor$9: ConstructorConstructor$9(com.google.gson.internal.ConstructorConstructor)
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.String)
org.threeten.bp.chrono.ChronoLocalDate: boolean isSupported(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.OffsetDateTime$2: int compare(org.threeten.bp.OffsetDateTime,org.threeten.bp.OffsetDateTime)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahDate plus(org.threeten.bp.temporal.TemporalAmount)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate withDayOfMonth(int)
org.threeten.bp.format.DecimalStyle: char getDecimalSeparator()
org.threeten.bp.format.DateTimeBuilder: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek from(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTimeImpl with(org.threeten.bp.temporal.Temporal,org.threeten.bp.LocalTime)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate with(org.threeten.bp.temporal.TemporalField,long)
org.threeten.bp.temporal.ChronoField: int checkValidIntValue(long)
androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.MinguoDate plusMonths(long)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingText(int,int)
org.threeten.bp.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: int parse(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int)
androidx.collection.ArrayMap: ArrayMap()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean)
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerPropertiesList(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int)
org.threeten.bp.format.DateTimePrintContext$1: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.temporal.IsoFields$Unit: java.lang.String toString()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void setupFlutterEngine()
com.google.gson.internal.bind.TypeAdapters$9: TypeAdapters$9()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int getDrawableResourceId(android.content.Context,java.lang.String)
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.activity.ComponentActivity$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.plugin.common.BasicMessageChannel: java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel)
io.flutter.embedding.android.FlutterActivity: android.graphics.drawable.Drawable getSplashScreenFromManifest()
org.threeten.bp.ZonedDateTime$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.IsoChronology: org.threeten.bp.ZonedDateTime zonedDateTime(org.threeten.bp.Instant,org.threeten.bp.ZoneId)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.gson.internal.ConstructorConstructor$11: ConstructorConstructor$11(com.google.gson.internal.ConstructorConstructor)
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree: void access$300(org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree,java.lang.String)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate resolvePreviousValid(int,int,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithTag(int,java.util.HashMap)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)
org.threeten.bp.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: boolean print(org.threeten.bp.format.DateTimePrintContext,java.lang.StringBuilder)
io.flutter.embedding.android.FlutterTextureView: void detachFromRenderer()
org.threeten.bp.LocalTime: long getLong(org.threeten.bp.temporal.TemporalField)
io.flutter.plugin.editing.FlutterTextUtils: boolean isTagSpecChar(int)
io.flutter.embedding.engine.dart.DartExecutor$1: DartExecutor$1(io.flutter.embedding.engine.dart.DartExecutor)
org.threeten.bp.zone.ZoneRulesInitializer$DoNothingZoneRulesInitializer: void initializeProviders()
io.flutter.embedding.android.FlutterTextureView: void pause()
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime of(int,int,int,int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
org.threeten.bp.chrono.MinguoDate: long getProlepticMonth()
androidx.collection.MapCollections$ValuesCollection: boolean isEmpty()
org.threeten.bp.format.DecimalStyle: char getNegativeSign()
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime from(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.LinkedTreeMap: void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)
org.threeten.bp.LocalDate: org.threeten.bp.chrono.ChronoLocalDate plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.LocalDateTime: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
com.google.gson.JsonObject: boolean equals(java.lang.Object)
androidx.media.app.NotificationCompat$MediaStyle: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void show(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterView: boolean fitSystemWindows(android.graphics.Rect)
org.threeten.bp.temporal.IsoFields$Field: boolean isTimeBased()
com.google.gson.internal.LinkedTreeMap: void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)
org.threeten.bp.format.SimpleDateTimeTextProvider: java.util.Map$Entry access$000(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset ofTotalSeconds(int)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
com.google.gson.internal.LazilyParsedNumber: int intValue()
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: void onPreEngineRestart()
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipTagForward()
com.google.gson.internal.bind.TypeAdapters$19: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime ofEpochSecond(long,int,org.threeten.bp.ZoneOffset)
androidx.core.app.NotificationManagerCompat$CancelTask: java.lang.String toString()
com.google.gson.internal.$Gson$Types: boolean equal(java.lang.Object,java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$30: TypeAdapters$30()
com.google.gson.internal.bind.TypeAdapters$7: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.core.graphics.drawable.IconCompat: android.os.Bundle toBundle()
androidx.collection.MapCollections$MapIterator: int hashCode()
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime from(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.Month: boolean isSupported(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.engine.FlutterEngineCache: FlutterEngineCache()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3202(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
com.google.gson.internal.LinkedTreeMap$EntrySet: void clear()
org.threeten.bp.chrono.HijrahDate: java.io.InputStream getConfigFileInputStream()
org.threeten.bp.LocalDate: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseDate with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.embedding.android.AndroidKeyProcessor: boolean onKeyEvent(android.view.KeyEvent)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void applyGrouping(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.media.AudioAttributesImplBase: boolean equals(java.lang.Object)
com.google.gson.stream.JsonWriter: void setSerializeNulls(boolean)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder appendOffset(java.lang.String,java.lang.String)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte getCachedDirectionality(char)
io.flutter.embedding.android.FlutterActivity: boolean shouldAttachEngineToActivity()
com.google.gson.internal.bind.TypeAdapters$26: TypeAdapters$26()
org.threeten.bp.ZonedDateTime: int get(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToBroadcastReceiver()
com.google.gson.internal.bind.TypeAdapters$16: void write(com.google.gson.stream.JsonWriter,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.app.NotificationManagerCompat: NotificationManagerCompat(android.content.Context)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel()
androidx.core.app.NotificationManagerCompat: java.util.Set getEnabledListenerPackages(android.content.Context)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahDate plusYears(long)
com.google.gson.internal.LinkedTreeMap$EntrySet: boolean remove(java.lang.Object)
android.support.v4.os.IResultReceiver$Stub: IResultReceiver$Stub()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: MethodChannel$IncomingMethodCallHandler$1(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra readExternal(java.io.DataInput)
org.threeten.bp.Month: int maxLength()
com.google.gson.internal.UnsafeAllocator$2: java.lang.Object newInstance(java.lang.Class)
androidx.core.app.NotificationCompat$BigTextStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.flutter.embedding.engine.renderer.FlutterRenderer: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
org.threeten.bp.chrono.Ser: void readExternal(java.io.ObjectInput)
org.threeten.bp.chrono.ChronoLocalDate: int compareTo(java.lang.Object)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: SettingsChannel$PlatformBrightness(java.lang.String,int,java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void onDraw()
android.support.v4.media.session.PlaybackStateCompat: void writeToParcel(android.os.Parcel,int)
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()
androidx.fragment.app.Fragment$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
org.threeten.bp.temporal.TemporalQueries$3: TemporalQueries$3()
android.support.v4.media.session.PlaybackStateCompat$1: PlaybackStateCompat$1()
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onSessionDestroyed()
androidx.media.AudioAttributesImplBase$Builder: androidx.media.AudioAttributesImpl$Builder setLegacyStreamType(int)
org.threeten.bp.LocalDate: boolean equals(java.lang.Object)
org.threeten.bp.format.DateTimeFormatterBuilder$TextPrinterParser: boolean print(org.threeten.bp.format.DateTimePrintContext,java.lang.StringBuilder)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.common.StandardMessageCodec: void writeBytes(java.io.ByteArrayOutputStream,byte[])
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.AndroidKeyProcessor,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void processPendingCallbacksLocked()
org.threeten.bp.format.DateTimeFormatterBuilder$InstantPrinterParser: DateTimeFormatterBuilder$InstantPrinterParser(int)
com.google.gson.stream.JsonReader: void push(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseDate plusDays(long)
org.threeten.bp.Instant: org.threeten.bp.Instant from(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.plugin.editing.TextInputPlugin: void notifyViewExited()
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: long getValue(org.threeten.bp.format.DateTimePrintContext,long)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
org.threeten.bp.Clock$SystemClock: boolean equals(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$4: TypeAdapters$4()
android.support.v4.media.MediaMetadataCompat: int describeContents()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: FlutterPlugin$FlutterPluginBinding(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets)
org.threeten.bp.YearMonth: long getProlepticMonth()
org.threeten.bp.jdk8.DefaultInterfaceTemporal: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.plugin.common.BasicMessageChannel: void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource[] values()
org.threeten.bp.chrono.ChronoLocalDate: org.threeten.bp.chrono.ChronoLocalDate with(org.threeten.bp.temporal.TemporalAdjuster)
org.threeten.bp.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: int parse(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int)
com.google.gson.internal.bind.TypeAdapters$27: TypeAdapters$27()
io.flutter.plugin.platform.PlatformViewsController: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
io.flutter.plugin.editing.TextInputPlugin: void access$600(io.flutter.plugin.editing.TextInputPlugin,double,double,double[])
org.threeten.bp.temporal.ChronoUnit: ChronoUnit(java.lang.String,int,java.lang.String,org.threeten.bp.Duration)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage()
android.support.v4.media.session.MediaControllerCompat$Callback: void onSessionDestroyed()
org.threeten.bp.Month: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.format.DateTimeFormatterBuilder$TextPrinterParser: org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser numberPrinterParser()
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result)
com.google.gson.internal.Excluder: java.lang.Object clone()
org.threeten.bp.temporal.IsoFields$Field$3: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal,long)
androidx.core.app.NotificationCompatBuilder: NotificationCompatBuilder(androidx.core.app.NotificationCompat$Builder)
com.google.gson.internal.bind.TypeAdapters$33: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: TextInputChannel$1(io.flutter.embedding.engine.systemchannels.TextInputChannel)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String getRouteName()
org.threeten.bp.LocalTime: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsDetached()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void notImplemented()
org.threeten.bp.chrono.Chronology: org.threeten.bp.chrono.ChronoZonedDateTimeImpl ensureChronoZonedDateTime(org.threeten.bp.temporal.Temporal)
androidx.collection.MapCollections$EntrySet: boolean removeAll(java.util.Collection)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean)
android.support.v4.media.session.MediaControllerCompat$Callback: void postToHandler(int,java.lang.Object,android.os.Bundle)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTimeImpl plusDays(long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.threeten.bp.ZoneRegion: java.lang.Object writeReplace()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3302(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatter toFormatter(java.util.Locale)
org.threeten.bp.chrono.ThaiBuddhistChronology: org.threeten.bp.chrono.ThaiBuddhistDate date(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.plugin.platform.PlatformPlugin: void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.MinguoDate with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.embedding.android.FlutterView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
com.google.gson.stream.JsonReader: void skipValue()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: java.util.List getFieldNames(java.lang.reflect.Field)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate)
com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
org.threeten.bp.Year$1: Year$1()
org.threeten.bp.chrono.JapaneseDate: void readObject(java.io.ObjectInputStream)
org.threeten.bp.ZoneOffset: java.lang.String toString()
androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)
io.flutter.plugin.common.StandardMethodCodec: java.lang.String getStackTrace(java.lang.Throwable)
org.threeten.bp.Duration: Duration(long,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationCompat$MessagingStyle$Message createMessage(android.content.Context,com.dexterous.flutterlocalnotifications.models.MessageDetails)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingText(java.lang.CharSequence,int)
org.threeten.bp.chrono.Chronology: org.threeten.bp.chrono.ChronoLocalDateTimeImpl ensureChronoLocalDateTime(org.threeten.bp.temporal.Temporal)
org.threeten.bp.zone.StandardZoneRules: boolean isValidOffset(org.threeten.bp.LocalDateTime,org.threeten.bp.ZoneOffset)
com.google.gson.stream.JsonReader: java.lang.String locationString()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: boolean writeField(java.lang.Object)
io.flutter.view.AccessibilityBridge: void sendWindowChangeEvent(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.collection.MapCollections$ValuesCollection: MapCollections$ValuesCollection(androidx.collection.MapCollections)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isSoftwareRenderingEnabled()
android.support.v4.media.MediaBrowserCompat$MediaItem$1: android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel)
org.threeten.bp.chrono.JapaneseEra: org.threeten.bp.LocalDate startDate()
org.threeten.bp.chrono.JapaneseDate: JapaneseDate(org.threeten.bp.LocalDate)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.Map getAllPrefs()
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate withYear(int)
org.threeten.bp.Duration: org.threeten.bp.temporal.Temporal addTo(org.threeten.bp.temporal.Temporal)
org.threeten.bp.LocalDate: java.lang.Object readResolve()
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ChronoLocalDate readExternal(java.io.DataInput)
com.google.gson.DefaultDateTypeAdapter: java.util.Date deserializeToDate(java.lang.String)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime create(long,int,org.threeten.bp.ZoneId)
org.threeten.bp.zone.TzdbZoneRulesProvider$Version: java.lang.String toString()
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: DateTimeFormatterBuilder$ZoneIdPrinterParser(org.threeten.bp.temporal.TemporalQuery,java.lang.String)
org.threeten.bp.chrono.HijrahDate: int getMonthLength(int,int)
com.google.gson.internal.bind.TypeAdapters$10: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.Class)
com.google.gson.FieldNamingPolicy: java.lang.String separateCamelCase(java.lang.String,java.lang.String)
org.threeten.bp.chrono.ThaiBuddhistEra: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
com.google.gson.stream.JsonWriter: void push(int)
androidx.media.AudioAttributesCompat: int hashCode()
org.threeten.bp.format.DecimalStyle: char getPositiveSign()
com.google.gson.internal.LinkedTreeMap: int size()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTimeImpl plusNanos(long)
org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()
org.threeten.bp.ZonedDateTime: org.threeten.bp.chrono.ChronoZonedDateTime with(org.threeten.bp.temporal.TemporalField,long)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
com.google.gson.Gson$4: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.embedding.engine.systemchannels.SystemChannel: SystemChannel(io.flutter.embedding.engine.dart.DartExecutor)
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle[] values()
com.google.gson.internal.ConstructorConstructor$5: java.lang.Object construct()
io.flutter.plugin.editing.ListenableEditingState: int getComposingEnd()
io.flutter.embedding.android.FlutterSplashView: android.os.Parcelable onSaveInstanceState()
org.threeten.bp.chrono.JapaneseDate: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromBroadcastReceiver()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performContextMenuAction(int)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)
org.threeten.bp.format.SimpleDateTimeTextProvider$LocaleStore: SimpleDateTimeTextProvider$LocaleStore(java.util.Map)
androidx.core.app.NotificationCompat$Builder: android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean)
org.threeten.bp.Month$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.embedding.android.DrawableSplashScreen: android.view.View createSplashView(android.content.Context,android.os.Bundle)
org.threeten.bp.ZoneOffset: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
androidx.collection.MapCollections$ValuesCollection: java.util.Iterator iterator()
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
org.threeten.bp.chrono.HijrahDate: int getMonthDays(int,int)
com.google.gson.internal.bind.TypeAdapters$18: java.math.BigInteger read(com.google.gson.stream.JsonReader)
androidx.versionedparcelable.ParcelImpl: ParcelImpl(android.os.Parcel)
io.flutter.plugin.mouse.MouseCursorPlugin$2: MouseCursorPlugin$2(io.flutter.plugin.mouse.MouseCursorPlugin)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.embedding.android.FlutterImageView)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
io.flutter.embedding.android.FlutterActivity: boolean isDebuggable()
android.support.v4.media.session.MediaControllerCompat$Callback: void onExtrasChanged(android.os.Bundle)
com.google.gson.internal.bind.TypeAdapters$10: void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicIntegerArray)
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra of(int)
org.threeten.bp.chrono.ChronoLocalDate: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.LocalDate: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
com.google.gson.Gson$4: void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLong)
androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)
org.threeten.bp.zone.ZoneOffsetTransition: org.threeten.bp.LocalDateTime getDateTimeAfter()
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: int parse(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int)
io.flutter.embedding.engine.systemchannels.NavigationChannel: NavigationChannel(io.flutter.embedding.engine.dart.DartExecutor)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahDate of(org.threeten.bp.chrono.HijrahEra,int,int,int)
android.support.v4.media.MediaDescriptionCompat$1: android.support.v4.media.MediaDescriptionCompat[] newArray(int)
com.google.gson.internal.bind.TypeAdapters$4: void write(com.google.gson.stream.JsonWriter,java.lang.Boolean)
androidx.media.AudioAttributesImplBase$Builder: androidx.media.AudioAttributesImplBase$Builder setLegacyStreamType(int)
org.threeten.bp.LocalDate: int compareTo(java.lang.Object)
org.threeten.bp.MonthDay: MonthDay(int,int)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime create(int,int,int,int)
io.flutter.embedding.android.FlutterActivity: java.lang.String getInitialRoute()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotificationMatchingDateComponents(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek of(int)
com.google.gson.internal.LazilyParsedNumber: int hashCode()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityFeatures(int)
io.flutter.plugin.editing.TextInputPlugin: android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
org.threeten.bp.ZonedDateTime: int getYear()
androidx.core.app.NotificationCompat$MessagingStyle: android.text.style.TextAppearanceSpan makeFontColorSpan(int)
org.threeten.bp.chrono.ChronoLocalDateTime: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.core.app.NotificationManagerCompat: boolean useSideChannelForNotification(android.app.Notification)
io.flutter.plugin.platform.PlatformViewsController: void finishFrame(boolean)
com.google.gson.stream.JsonReader: int peekKeyword()
com.google.gson.internal.UnsafeAllocator$4: java.lang.Object newInstance(java.lang.Class)
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
org.threeten.bp.jdk8.Jdk8Methods: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1: PlaybackStateCompat$CustomAction$1()
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void setupChannel(io.flutter.plugin.common.BinaryMessenger,android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin access$1100(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugin.editing.TextInputPlugin: void lockPlatformViewInputConnection()
com.google.gson.Gson$4: java.util.concurrent.atomic.AtomicLong read(com.google.gson.stream.JsonReader)
io.flutter.view.AccessibilityBridge$1: void announce(java.lang.String)
com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
org.threeten.bp.format.DateTimeBuilder: boolean isSupported(org.threeten.bp.temporal.TemporalField)
androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
org.threeten.bp.chrono.IsoChronology: java.lang.String getId()
org.threeten.bp.LocalDate: org.threeten.bp.chrono.IsoChronology getChronology()
org.threeten.bp.chrono.HijrahChronology: java.lang.String getCalendarType()
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.temporal.Temporal plus(long,org.threeten.bp.temporal.TemporalUnit)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
org.threeten.bp.chrono.HijrahDate: int getYearInCycle(int,long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent getLaunchIntent(android.content.Context)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.ZoneOffset getOffset()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTimeImpl plusWithOverflow(org.threeten.bp.chrono.ChronoLocalDate,long,long,long,long)
androidx.versionedparcelable.ParcelImpl: int describeContents()
org.threeten.bp.temporal.IsoFields$Field: IsoFields$Field(java.lang.String,int,org.threeten.bp.temporal.IsoFields$1)
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$6100(io.flutter.view.AccessibilityBridge,int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.PluginRegistry getPlugins()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onTrimMemory(int)
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
io.flutter.plugin.platform.PlatformViewsController: void detachFromView()
com.google.gson.LongSerializationPolicy$2: LongSerializationPolicy$2(java.lang.String,int)
android.support.v4.media.session.MediaControllerCompat$Callback: void onQueueChanged(java.util.List)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ChronoLocalDate minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle)
androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(boolean)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
org.threeten.bp.zone.ZoneRulesProvider: org.threeten.bp.zone.ZoneRules getRules(java.lang.String,boolean)
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra of(int)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale: boolean defaultIsRtl()
com.google.gson.internal.Excluder: Excluder()
org.threeten.bp.chrono.Ser: void writeExternal(java.io.ObjectOutput)
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval valueOf(java.lang.String)
io.flutter.plugin.common.StandardMethodCodec: StandardMethodCodec(io.flutter.plugin.common.StandardMessageCodec)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.ChronoDateImpl plus(long,org.threeten.bp.temporal.TemporalUnit)
android.support.v4.media.MediaDescriptionCompat: MediaDescriptionCompat(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri)
com.example.todo_app_new.MainActivity: MainActivity()
com.google.gson.internal.Excluder: boolean excludeField(java.lang.reflect.Field,boolean)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
org.threeten.bp.OffsetTime: OffsetTime(org.threeten.bp.LocalTime,org.threeten.bp.ZoneOffset)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$800(io.flutter.view.AccessibilityBridge)
org.threeten.bp.chrono.ChronoLocalDate: org.threeten.bp.chrono.ChronoLocalDate plus(org.threeten.bp.temporal.TemporalAmount)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.gson.internal.bind.DateTypeAdapter: java.util.Date read(com.google.gson.stream.JsonReader)
androidx.collection.MapCollections$ArrayIterator: void remove()
org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser: boolean print(org.threeten.bp.format.DateTimePrintContext,java.lang.StringBuilder)
org.threeten.bp.jdk8.DefaultInterfaceEra: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStop()
org.threeten.bp.temporal.TemporalQueries$7: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.util.Preconditions: void checkState(boolean,java.lang.Object)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle getExtras(android.app.Notification)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
io.flutter.embedding.android.FlutterTextureView: void connectSurfaceToRenderer()
org.threeten.bp.temporal.IsoFields$Field$3: org.threeten.bp.temporal.ValueRange rangeRefinedBy(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.plugin.platform.PlatformView: void onFlutterViewDetached()
org.threeten.bp.ZoneOffset: void write(java.io.DataOutput)
androidx.versionedparcelable.ParcelImpl: void writeToParcel(android.os.Parcel,int)
com.google.gson.internal.bind.JsonTreeReader: long nextLong()
com.google.gson.internal.LinkedTreeMap$Node: LinkedTreeMap$Node(com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)
org.threeten.bp.Year: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents valueOf(java.lang.String)
org.threeten.bp.YearMonth: long getLong(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix)
com.google.gson.Gson$4: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.Boolean)
androidx.versionedparcelable.VersionedParcelParcel: void writeByteArray(byte[])
com.dexterous.flutterlocalnotifications.utils.StringUtils: java.lang.Boolean isNullOrEmpty(java.lang.String)
com.google.gson.internal.reflect.UnsafeReflectionAccessor: UnsafeReflectionAccessor()
org.threeten.bp.zone.ZoneRules$Fixed: boolean isFixedOffset()
com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate from(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra[] values()
androidx.versionedparcelable.VersionedParcel: boolean isStream()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor: boolean isExecutingDart()
org.threeten.bp.LocalDateTime: int get(org.threeten.bp.temporal.TemporalField)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
com.google.gson.FieldNamingPolicy$3: FieldNamingPolicy$3(java.lang.String,int)
org.threeten.bp.Duration: long getSeconds()
org.threeten.bp.chrono.Chronology$1: Chronology$1()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: TextInputPlugin$InputTarget$Type(java.lang.String,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiDisplayed()
org.threeten.bp.LocalDate: org.threeten.bp.Month getMonth()
org.threeten.bp.chrono.ChronoLocalDateTime: int hashCode()
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()
androidx.versionedparcelable.VersionedParcel: VersionedParcel(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
org.threeten.bp.YearMonth: boolean equals(java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin$1: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.android.FlutterTextureView: void access$400(io.flutter.embedding.android.FlutterTextureView)
org.threeten.bp.format.DateTimeParseContext: java.lang.Long getParsed(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime withHour(int)
com.google.gson.stream.JsonReader: void close()
android.support.v4.media.MediaDescriptionCompat: MediaDescriptionCompat(android.os.Parcel)
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser toPrinterParser(boolean)
com.google.gson.internal.bind.JsonTreeReader: void nextNull()
com.google.gson.stream.JsonWriter: boolean getSerializeNulls()
android.support.v4.media.session.MediaSessionCompat$Token$1: java.lang.Object[] newArray(int)
org.threeten.bp.DayOfWeek: long getLong(org.threeten.bp.temporal.TemporalField)
androidx.collection.MapCollections$KeySet: boolean containsAll(java.util.Collection)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle(androidx.core.app.Person)
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: boolean getValue(java.lang.Boolean)
com.dexterous.flutterlocalnotifications.models.Time: com.dexterous.flutterlocalnotifications.models.Time from(java.util.Map)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setProgress(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setUri(java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: FlutterActivityAndFragmentDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
io.flutter.embedding.android.FlutterSurfaceView: void detachFromRenderer()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3700(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ThaiBuddhistEra getEra()
org.threeten.bp.chrono.ChronoLocalDateTime: org.threeten.bp.chrono.ChronoLocalDateTime minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.chrono.ChronoZonedDateTime: org.threeten.bp.chrono.ChronoZonedDateTime minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.YearMonth: org.threeten.bp.YearMonth with(org.threeten.bp.temporal.TemporalAdjuster)
android.support.v4.media.session.MediaSessionCompat$Token: void setExtraBinder(android.support.v4.media.session.IMediaSession)
androidx.collection.ArrayMap: java.util.Set keySet()
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plusWithOverflow(org.threeten.bp.LocalDate,long,long,long,long,int)
io.flutter.embedding.android.FlutterTextureView: boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean)
org.threeten.bp.MonthDay: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
io.flutter.plugin.platform.PlatformPlugin: void access$400(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.embedding.android.FlutterView: boolean access$102(io.flutter.embedding.android.FlutterView,boolean)
org.threeten.bp.temporal.TemporalQueries$2: org.threeten.bp.chrono.Chronology queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: ChronoLocalDateTimeImpl(org.threeten.bp.chrono.ChronoLocalDate,org.threeten.bp.LocalTime)
io.flutter.embedding.android.FlutterActivity: void onFlutterUiNoLongerDisplayed()
androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
org.threeten.bp.chrono.HijrahDate: void checkValidYearOfEra(int)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onShuffleModeChanged(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver: void onReceiveResult(int,android.os.Bundle)
org.threeten.bp.Instant: java.lang.String toString()
org.threeten.bp.temporal.IsoFields$Field$1: long getFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
com.google.gson.FieldAttributes: FieldAttributes(java.lang.reflect.Field)
org.threeten.bp.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo findFocus(int)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1)
org.threeten.bp.chrono.HijrahEra: int getValue()
com.google.gson.internal.ConstructorConstructor$8: ConstructorConstructor$8(com.google.gson.internal.ConstructorConstructor)
androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
org.threeten.bp.LocalDate: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
com.google.gson.internal.UnsafeAllocator$1: java.lang.Object newInstance(java.lang.Class)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.google.gson.JsonIOException: JsonIOException(java.lang.String)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
androidx.arch.core.internal.SafeIterableMap$ListIterator: boolean hasNext()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: boolean isCalledFromAlertDialog()
io.flutter.embedding.android.FlutterView: void addFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
org.threeten.bp.Instant: org.threeten.bp.Instant ofEpochMilli(long)
org.threeten.bp.ZonedDateTime: int getNano()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: java.lang.String getStackTrace(java.lang.Exception)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int)
com.google.gson.JsonPrimitive: double getAsDouble()
org.threeten.bp.chrono.HijrahDate: int getDayOfYear(int,int,int)
org.threeten.bp.MonthDay: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.zone.ZoneRules$Fixed: boolean equals(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$9: java.util.concurrent.atomic.AtomicBoolean read(com.google.gson.stream.JsonReader)
com.google.gson.Gson$FutureTypeAdapter: void setDelegate(com.google.gson.TypeAdapter)
com.google.gson.internal.ConstructorConstructor$1: ConstructorConstructor$1(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type)
org.threeten.bp.chrono.MinguoDate: int getProlepticYear()
io.flutter.view.AccessibilityBridge: boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean)
org.threeten.bp.format.DateTimeParseContext$Parsed: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
org.threeten.bp.format.DateTimeFormatter$2: DateTimeFormatter$2()
org.threeten.bp.format.DateTimeParseContext: void setCaseSensitive(boolean)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String)
androidx.collection.MapCollections$KeySet: void clear()
androidx.collection.MapCollections$MapIterator: java.util.Map$Entry next()
org.threeten.bp.chrono.HijrahEra: java.lang.Object writeReplace()
io.flutter.embedding.android.FlutterSplashView$SavedState$1: FlutterSplashView$SavedState$1()
com.google.gson.JsonIOException: JsonIOException(java.lang.String,java.lang.Throwable)
com.google.gson.internal.Excluder: boolean isStatic(java.lang.Class)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void teardownChannel()
io.flutter.view.AccessibilityBridge$1: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.Object getAppComponent()
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plusWeeks(long)
io.flutter.embedding.engine.dart.DartMessenger: void handlePlatformMessageResponse(int,byte[])
com.google.gson.stream.JsonWriter: boolean isHtmlSafe()
androidx.media.AudioAttributesImplBase$Builder: androidx.media.AudioAttributesImpl build()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void newline(int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setSemanticsEnabled(boolean)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
org.threeten.bp.Instant: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.ChronoDateImpl plusMonths(long)
org.threeten.bp.LocalTime: LocalTime(int,int,int,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()
com.dexterous.flutterlocalnotifications.SoundSource: SoundSource(java.lang.String,int)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()
com.google.gson.internal.ConstructorConstructor$3: ConstructorConstructor$3(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Constructor)
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: PlatformChannel$DeviceOrientation(java.lang.String,int,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$1: void finishAutofillContext(boolean)
androidx.collection.ArrayMap$1: ArrayMap$1(androidx.collection.ArrayMap)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3400(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.collection.ArrayMap: java.util.Set entrySet()
org.threeten.bp.temporal.TemporalQueries: org.threeten.bp.temporal.TemporalQuery localTime()
com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object getValue()
org.threeten.bp.zone.ZoneOffsetTransition: org.threeten.bp.Duration getDuration()
org.threeten.bp.OffsetDateTime: boolean equals(java.lang.Object)
io.flutter.plugin.mouse.MouseCursorPlugin: void destroy()
io.flutter.embedding.android.FlutterView$ZeroSides: FlutterView$ZeroSides(java.lang.String,int)
org.threeten.bp.chrono.ChronoZonedDateTime: org.threeten.bp.chrono.ChronoLocalDate toLocalDate()
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context,java.lang.String)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setKey(java.lang.String)
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: BooleanUtils()
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.HijrahEra getEra()
org.threeten.bp.chrono.ChronoZonedDateTime: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$600(io.flutter.view.AccessibilityBridge)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingRegion(int,int)
org.threeten.bp.format.DateTimeBuilder: void mergeInstantFields0(org.threeten.bp.ZoneId)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.graphics.Bitmap getBitmapFromSource(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.BitmapSource)
android.support.v4.media.MediaMetadataCompat: MediaMetadataCompat(android.os.Parcel)
com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Date)
androidx.collection.MapCollections$KeySet: boolean addAll(java.util.Collection)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class,java.lang.String)
org.threeten.bp.LocalTime: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
io.flutter.plugin.platform.PlatformViewsController$1: void disposeVirtualDisplayForPlatformView(int)
com.google.gson.internal.bind.TypeAdapters$8: TypeAdapters$8()
io.flutter.embedding.engine.loader.FlutterLoader: boolean automaticallyRegisterPlugins()
androidx.collection.MapCollections$MapIterator: java.lang.String toString()
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)
org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser: java.lang.String toString()
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
org.threeten.bp.format.DateTimeFormatterBuilder$1: org.threeten.bp.ZoneId queryFrom(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime ofNanoOfDay(long)
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21: void onPlaybackStateChanged(android.media.session.PlaybackState)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale: TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale()
org.threeten.bp.chrono.IsoEra: int get(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime from(org.threeten.bp.temporal.TemporalAccessor)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void onSessionDestroyed()
org.threeten.bp.chrono.ChronoDateImpl: ChronoDateImpl()
org.threeten.bp.chrono.HijrahDate: long getGregorianEpochDay(int,int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.gson.internal.ConstructorConstructor$11: java.lang.Object construct()
androidx.core.app.NotificationManagerCompat: void cancelAll()
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray(byte[],int)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type getRawType()
android.support.v4.media.session.MediaSessionCompat$QueueItem: MediaSessionCompat$QueueItem(android.os.Parcel)
com.google.gson.internal.ConstructorConstructor$8: java.lang.Object construct()
com.google.gson.FieldNamingPolicy$3: java.lang.String translateName(java.lang.reflect.Field)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String)
io.flutter.embedding.android.AndroidKeyProcessor$EventResponder: void onKeyEventNotHandled(android.view.KeyEvent)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.MinguoDate plusDays(long)
org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDate toLocalDate()
org.threeten.bp.LocalDateTime: int compareTo(org.threeten.bp.chrono.ChronoLocalDateTime)
org.threeten.bp.zone.ZoneOffsetTransition: int compareTo(java.lang.Object)
org.threeten.bp.Year: java.lang.Object readResolve()
com.google.gson.internal.bind.TypeAdapters$10: TypeAdapters$10()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
com.google.gson.Gson$2: java.lang.Float read(com.google.gson.stream.JsonReader)
org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset from(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.ChronoDateImpl plusMonths(long)
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.common.StandardMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: SingleViewPresentation$FakeWindowViewGroup(android.content.Context)
io.flutter.embedding.android.FlutterActivity: void onNewIntent(android.content.Intent)
com.google.gson.Gson$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin)
org.threeten.bp.ZoneOffset: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.SystemChannel: void sendMemoryPressureWarning()
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime ofInstant(org.threeten.bp.Instant,org.threeten.bp.ZoneId)
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
org.threeten.bp.chrono.MinguoEra: boolean isSupported(org.threeten.bp.temporal.TemporalField)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder asBinder()
com.google.gson.internal.bind.TypeAdapters$26$1: TypeAdapters$26$1(com.google.gson.internal.bind.TypeAdapters$26,com.google.gson.TypeAdapter)
androidx.collection.MapCollections$MapIterator: java.lang.Object setValue(java.lang.Object)
org.threeten.bp.MonthDay: org.threeten.bp.MonthDay from(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: boolean equals(java.lang.Object)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.MinguoDate plusYears(long)
com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Object,java.lang.Object)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime ofLenient(org.threeten.bp.LocalDateTime,org.threeten.bp.ZoneOffset,org.threeten.bp.ZoneId)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle toBundle(androidx.core.app.RemoteInput)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
com.google.gson.Gson: void checkValidFloatingPoint(double)
org.threeten.bp.chrono.HijrahDate: int getCycleNumber(long)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.media.AudioAttributesCompat: java.lang.String toString()
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21: void onSessionEvent(java.lang.String,android.os.Bundle)
org.threeten.bp.chrono.ChronoLocalDate: org.threeten.bp.temporal.Temporal adjustInto(org.threeten.bp.temporal.Temporal)
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
org.threeten.bp.zone.Ser: void writeOffset(org.threeten.bp.ZoneOffset,java.io.DataOutput)
androidx.collection.MapCollections$KeySet: int hashCode()
org.threeten.bp.format.DateTimeParseContext: boolean subSequenceEquals(java.lang.CharSequence,int,java.lang.CharSequence,int,int)
android.support.v4.media.session.MediaControllerCompat$Callback: void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)
com.google.gson.internal.reflect.ReflectionAccessor: com.google.gson.internal.reflect.ReflectionAccessor getInstance()
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.RenderMode getRenderMode()
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)
org.threeten.bp.chrono.ChronoZonedDateTime: org.threeten.bp.LocalTime toLocalTime()
com.google.gson.stream.JsonReader: void beginArray()
androidx.collection.SimpleArrayMap: void allocArrays(int)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView access$400(io.flutter.embedding.android.FlutterView)
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec getCreateArgsCodec()
io.flutter.plugin.editing.TextInputPlugin: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
com.google.gson.internal.LinkedTreeMap: java.util.Set keySet()
com.google.gson.internal.ConstructorConstructor$7: ConstructorConstructor$7(com.google.gson.internal.ConstructorConstructor)
io.flutter.plugin.platform.PlatformViewsController$1$1: PlatformViewsController$1$1(io.flutter.plugin.platform.PlatformViewsController$1,io.flutter.plugin.platform.VirtualDisplayController,java.lang.Runnable)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDetach()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
com.google.gson.internal.bind.ObjectTypeAdapter$1: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
com.google.gson.JsonPrimitive: long getAsLong()
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: org.threeten.bp.ZoneId convertToZone(java.util.Set,java.lang.String,boolean)
org.threeten.bp.MonthDay: int compareTo(org.threeten.bp.MonthDay)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputActionFromTextInputAction(java.lang.String)
org.threeten.bp.jdk8.DefaultInterfaceTemporalAccessor: int get(org.threeten.bp.temporal.TemporalField)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugin.platform.PlatformViewsController: void access$1300(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
org.threeten.bp.temporal.TemporalAdjusters: org.threeten.bp.temporal.TemporalAdjuster nextOrSame(org.threeten.bp.DayOfWeek)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.gson.stream.JsonWriter: void setIndent(java.lang.String)
org.threeten.bp.zone.ZoneOffsetTransitionRule: java.lang.String toString()
io.flutter.plugin.platform.PlatformPlugin: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
org.threeten.bp.Instant: org.threeten.bp.Instant with(org.threeten.bp.temporal.TemporalField,long)
org.threeten.bp.chrono.ChronoLocalDateTime$1: int compare(org.threeten.bp.chrono.ChronoLocalDateTime,org.threeten.bp.chrono.ChronoLocalDateTime)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.text.Spanned fromHtml(java.lang.String)
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable getVersionedParcelable(android.os.Bundle,java.lang.String)
com.google.gson.JsonSyntaxException: JsonSyntaxException(java.lang.Throwable)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.ChronoLocalDateTime atTime(org.threeten.bp.LocalTime)
org.threeten.bp.chrono.HijrahDate: int getDayOfCycle(long,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasComposing()
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
org.threeten.bp.MonthDay$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.ZonedDateTime: void writeExternal(java.io.DataOutput)
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree: org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser$SubstringTree get(java.lang.CharSequence,boolean)
org.threeten.bp.ZoneRegion: ZoneRegion(java.lang.String,org.threeten.bp.zone.ZoneRules)
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: MediaControllerCompat$PlaybackInfo(int,int,int,int,int)
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: boolean equals(java.lang.Object)
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader$InitResult call()
com.google.gson.JsonArray: void add(com.google.gson.JsonElement)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.MinguoEra getEra()
io.flutter.view.VsyncWaiter$1$1: void doFrame(long)
org.threeten.bp.chrono.Chronology: boolean equals(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setupNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: boolean isBitSet(long,int)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView)
org.threeten.bp.temporal.IsoFields$Field: boolean isDateBased()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect)
org.threeten.bp.chrono.ThaiBuddhistEra: boolean isSupported(org.threeten.bp.temporal.TemporalField)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
com.google.gson.internal.bind.TypeAdapters$23: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.plugin.editing.TextInputPlugin$1: void setPlatformViewClient(int)
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivity()
org.threeten.bp.Year: long getLong(org.threeten.bp.temporal.TemporalField)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence getText()
com.google.gson.internal.bind.TypeAdapters$26$1: java.sql.Timestamp read(com.google.gson.stream.JsonReader)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime now(org.threeten.bp.ZoneId)
io.flutter.FlutterInjector$Builder: FlutterInjector$Builder()
io.flutter.embedding.android.MotionEventTracker: android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: int describeContents()
org.threeten.bp.zone.TzdbZoneRulesProvider: org.threeten.bp.zone.ZoneRules provideRules(java.lang.String,boolean)
androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalAdjuster)
com.google.gson.internal.bind.TypeAdapters$2: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.zone.TzdbZoneRulesProvider: java.lang.Iterable loadData(java.io.InputStream)
com.google.gson.JsonElement: boolean isJsonArray()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotifications(android.content.Context,java.util.ArrayList)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder parseCaseSensitive()
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ThaiBuddhistDate plus(org.threeten.bp.temporal.TemporalAmount)
com.google.gson.internal.bind.TypeAdapters$13: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
org.threeten.bp.Instant$1: org.threeten.bp.Instant queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.LocalDate: org.threeten.bp.LocalDate of(int,org.threeten.bp.Month,int)
com.google.gson.Gson: com.google.gson.TypeAdapter atomicLongArrayAdapter(com.google.gson.TypeAdapter)
org.threeten.bp.LocalDateTime: org.threeten.bp.ZonedDateTime atZone(org.threeten.bp.ZoneId)
org.threeten.bp.chrono.ThaiBuddhistChronology: java.lang.Object readResolve()
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat from(android.content.Context)
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition valueOf(java.lang.String)
org.threeten.bp.Instant: org.threeten.bp.Instant plusMillis(long)
android.support.v4.media.session.MediaSessionCompat$QueueItem$1: MediaSessionCompat$QueueItem$1()
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
io.flutter.plugin.platform.VirtualDisplayController$1$1: void run()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
androidx.core.app.Person: android.os.Bundle toBundle()
androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromLocale(java.util.Locale)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ThaiBuddhistDate minus(long,org.threeten.bp.temporal.TemporalUnit)
com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.Date)
io.flutter.Log: void e(java.lang.String,java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
com.google.gson.internal.bind.TypeAdapters$1: java.lang.Class read(com.google.gson.stream.JsonReader)
androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
org.threeten.bp.temporal.ChronoField: boolean isSupportedBy(org.threeten.bp.temporal.TemporalAccessor)
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
android.support.v4.media.session.PlaybackStateCompat: PlaybackStateCompat(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.chrono.Chronology getChronology()
org.threeten.bp.chrono.HijrahDate: void checkValidDayOfMonth(int)
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra readExternal(java.io.DataInput)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
io.flutter.view.AccessibilityBridge$SemanticsNode: float min(float,float,float,float)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry access$700(io.flutter.plugin.platform.PlatformViewsController)
com.google.gson.internal.bind.util.ISO8601Utils: java.util.Date parse(java.lang.String,java.text.ParsePosition)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.chrono.ChronoZonedDateTimeImpl ofInstant(org.threeten.bp.chrono.Chronology,org.threeten.bp.Instant,org.threeten.bp.ZoneId)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void removeNotificationFromCache(android.content.Context,java.lang.Integer)
org.threeten.bp.ZoneOffset: java.lang.String getId()
com.google.gson.reflect.TypeToken: TypeToken(java.lang.reflect.Type)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker getInstance()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onUserLeaveHint()
com.google.gson.internal.bind.JsonTreeReader: double nextDouble()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map access$100(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
org.threeten.bp.chrono.HijrahDate: org.threeten.bp.chrono.ChronoLocalDate plus(org.threeten.bp.temporal.TemporalAmount)
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
io.flutter.plugin.platform.PlatformPlugin$1: boolean clipboardHasStrings()
androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel()
android.support.v4.media.MediaDescriptionCompat$Builder: MediaDescriptionCompat$Builder()
androidx.core.app.Person: java.lang.String getUri()
org.threeten.bp.format.DateTimeFormatter: org.threeten.bp.format.DateTimeParseException createError(java.lang.CharSequence,java.lang.RuntimeException)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: boolean equals(java.lang.Object)
org.threeten.bp.Instant: org.threeten.bp.Instant plusNanos(long)
org.threeten.bp.chrono.ChronoZonedDateTime: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler)
org.threeten.bp.temporal.IsoFields$Field: boolean access$100(org.threeten.bp.temporal.TemporalAccessor)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
androidx.media.AudioAttributesImplApi21: int hashCode()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine)
org.threeten.bp.jdk8.DefaultInterfaceEra: DefaultInterfaceEra()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void doInitialFlutterViewRun()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void ensureAlive()
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.ChronoLocalDate readExternal(java.io.DataInput)
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21: void onSessionDestroyed()
org.threeten.bp.Month: int firstDayOfYear(boolean)
org.threeten.bp.zone.TzdbZoneRulesProvider$Version: TzdbZoneRulesProvider$Version(java.lang.String,java.lang.String[],short[],java.util.concurrent.atomic.AtomicReferenceArray)
org.threeten.bp.chrono.ThaiBuddhistDate: java.lang.Object writeReplace()
androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon resolveSystemCursor(java.lang.String)
org.threeten.bp.chrono.Ser: void writeInternal(byte,java.lang.Object,java.io.ObjectOutput)
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle valueOf(java.lang.String)
org.threeten.bp.zone.StandardZoneRules: int hashCode()
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest)
org.threeten.bp.ZoneId: boolean equals(java.lang.Object)
io.flutter.plugin.editing.ListenableEditingState: int getSelectionEnd()
org.threeten.bp.Instant: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.android.FlutterView: int guessBottomKeyboardInset(android.view.WindowInsets)
com.google.gson.stream.JsonReader: boolean nextBoolean()
org.threeten.bp.LocalDate: int getDayOfMonth()
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.ChronoLocalDate plus(long,org.threeten.bp.temporal.TemporalUnit)
com.google.gson.JsonObject: JsonObject()
androidx.collection.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)
org.threeten.bp.zone.ZoneOffsetTransition: org.threeten.bp.LocalDateTime getDateTimeBefore()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType)
org.threeten.bp.Month: org.threeten.bp.Month of(int)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.flutter.embedding.android.FlutterActivity: android.os.Bundle getMetaData()
androidx.core.text.ICUCompat: java.lang.String maximizeAndGetScript(java.util.Locale)
org.threeten.bp.format.DateTimeFormatterBuilder: DateTimeFormatterBuilder()
androidx.core.app.NotificationCompat: android.os.Bundle getExtras(android.app.Notification)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: TextInputChannel$TextCapitalization(java.lang.String,int,java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiDisplayed()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
org.threeten.bp.chrono.JapaneseEra: org.threeten.bp.chrono.JapaneseEra readExternal(java.io.DataInput)
org.threeten.bp.temporal.UnsupportedTemporalTypeException: UnsupportedTemporalTypeException(java.lang.String)
org.threeten.bp.OffsetDateTime: org.threeten.bp.OffsetDateTime readExternal(java.io.DataInput)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
org.threeten.bp.Month: int getValue()
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent,java.lang.Character)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.Era getEra()
org.threeten.bp.temporal.ValueRange: boolean isValidValue(long)
com.google.gson.internal.bind.TimeTypeAdapter$1: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.media.app.NotificationCompat$MediaStyle: android.app.Notification$MediaStyle fillInMediaStyle(android.app.Notification$MediaStyle)
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: void reply(java.nio.ByteBuffer)
org.threeten.bp.LocalTime$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
com.google.gson.internal.bind.CollectionTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
org.threeten.bp.LocalDate: org.threeten.bp.chrono.ChronoLocalDate with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
com.google.gson.stream.JsonWriter: void setLenient(boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromContentProvider()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.net.Uri retrieveSoundResourceUri(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.SoundSource)
com.google.gson.internal.bind.TypeAdapters$18: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.google.gson.internal.bind.MapTypeAdapterFactory: MapTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,boolean)
io.flutter.plugin.common.StandardMessageCodec: void writeSize(java.io.ByteArrayOutputStream,int)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: void reply(java.lang.Object)
com.google.gson.stream.JsonReader: java.lang.String nextUnquotedValue()
org.threeten.bp.chrono.MinguoDate: long toEpochDay()
org.threeten.bp.chrono.ChronoLocalDate: ChronoLocalDate()
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: org.threeten.bp.chrono.ChronoZonedDateTime with(org.threeten.bp.temporal.TemporalField,long)
org.threeten.bp.zone.ZoneRulesInitializer$DoNothingZoneRulesInitializer: ZoneRulesInitializer$DoNothingZoneRulesInitializer()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter close(int,int,char)
org.threeten.bp.chrono.MinguoChronology: java.lang.String getId()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
org.threeten.bp.Instant: org.threeten.bp.Instant plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.android.FlutterView: void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void updateViewLayout(java.lang.Object[])
androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[])
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
androidx.core.app.NotificationCompat$Style: NotificationCompat$Style()
org.threeten.bp.Duration: int compareTo(java.lang.Object)
org.threeten.bp.format.DecimalStyle: boolean equals(java.lang.Object)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(android.view.WindowManager)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean)
com.google.gson.internal.bind.JsonTreeWriter$1: JsonTreeWriter$1()
io.flutter.plugin.common.StandardMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
org.threeten.bp.jdk8.Jdk8Methods: boolean equals(java.lang.Object,java.lang.Object)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(long)
org.threeten.bp.LocalDate$1: LocalDate$1()
io.flutter.embedding.android.FlutterActivity: void detachFromFlutterEngine()
org.threeten.bp.OffsetDateTime: OffsetDateTime(org.threeten.bp.LocalDateTime,org.threeten.bp.ZoneOffset)
com.google.gson.internal.bind.JsonTreeReader: int nextInt()
androidx.core.app.BundleCompat: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
org.threeten.bp.chrono.Chronology: int compareTo(java.lang.Object)
org.threeten.bp.jdk8.Jdk8Methods: long safeAdd(long,long)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$300(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugin.editing.ListenableEditingState: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceConnected(android.content.ComponentName,android.os.IBinder)
org.threeten.bp.OffsetDateTime: java.lang.Object readResolve()
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceDestroyed(android.view.SurfaceHolder)
com.google.gson.internal.bind.JsonTreeReader: void skipValue()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void skipTag(android.content.res.XmlResourceParser)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.temporal.Temporal minus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.format.ResolverStyle: ResolverStyle(java.lang.String,int)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)
org.threeten.bp.chrono.ChronoLocalDateTime: org.threeten.bp.Instant toInstant(org.threeten.bp.ZoneOffset)
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime of(int,int,int,int,int,int,int,org.threeten.bp.ZoneId)
org.threeten.bp.format.DateTimeBuilder: void mergeTime(org.threeten.bp.format.ResolverStyle)
io.flutter.plugin.platform.PlatformViewsController$1: void createAndroidViewForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: StandardMessageCodec$ExposedByteArrayOutputStream()
com.google.gson.Gson$FutureTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
org.threeten.bp.jdk8.Jdk8Methods: long floorMod(long,long)
org.threeten.bp.LocalDateTime: int getMonthValue()
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(int)
io.flutter.view.AccessibilityBridge: void access$200(io.flutter.view.AccessibilityBridge,int,int)
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: $Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])
com.google.gson.internal.bind.TypeAdapters$13: TypeAdapters$13()
android.support.v4.media.session.MediaSessionCompat$QueueItem: java.lang.String toString()
io.flutter.embedding.engine.FlutterEngine: java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine)
com.google.gson.FieldNamingPolicy: FieldNamingPolicy(java.lang.String,int)
org.threeten.bp.chrono.ChronoLocalDateTime: org.threeten.bp.chrono.ChronoLocalDateTime with(org.threeten.bp.temporal.TemporalAdjuster)
com.google.gson.internal.bind.TypeAdapters$19: java.lang.StringBuilder read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.TypeAdapters$3: TypeAdapters$3()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent)
io.flutter.embedding.android.TransparencyMode: TransparencyMode(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
android.support.v4.media.MediaMetadataCompat: void writeToParcel(android.os.Parcel,int)
androidx.arch.core.internal.FastSafeIterableMap: FastSafeIterableMap()
androidx.collection.MapCollections$EntrySet: MapCollections$EntrySet(androidx.collection.MapCollections)
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray(java.lang.Object[])
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseDate plusYears(long)
androidx.media.AudioAttributesImplBase: int getUsage()
androidx.versionedparcelable.VersionedParcel: java.lang.Class findParcelClass(java.lang.Class)
org.threeten.bp.temporal.ValueRange: org.threeten.bp.temporal.ValueRange of(long,long,long,long)
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: Streams$AppendableWriter$CurrentWrite()
androidx.collection.MapCollections$MapIterator: java.lang.Object getKey()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style)
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence)
androidx.lifecycle.Lifecycle: Lifecycle()
org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser: DateTimeFormatterBuilder$FractionPrinterParser(org.threeten.bp.temporal.TemporalField,int,int,boolean)
com.google.gson.internal.Excluder: boolean isValidUntil(com.google.gson.annotations.Until)
com.google.gson.internal.bind.TypeAdapters$19: TypeAdapters$19()
org.threeten.bp.zone.Ser: void writeInternal(byte,java.lang.Object,java.io.DataOutput)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime with(org.threeten.bp.temporal.TemporalAdjuster)
io.flutter.embedding.android.FlutterView: boolean checkInputConnectionProxy(android.view.View)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean,boolean)
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: ZoneOffsetTransitionRule$TimeDefinition(java.lang.String,int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
org.threeten.bp.chrono.HijrahChronology: org.threeten.bp.chrono.Era eraOf(int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel()
org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser: DateTimeFormatterBuilder$CompositePrinterParser(java.util.List,boolean)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)
androidx.core.app.NotificationCompat$Action: boolean getShowsUserInterface()
com.google.gson.internal.bind.ObjectTypeAdapter$1: ObjectTypeAdapter$1()
com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)
org.threeten.bp.chrono.JapaneseEra: int getValue()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.collection.MapCollections$KeySet: boolean remove(java.lang.Object)
com.google.gson.internal.$Gson$Preconditions: java.lang.Object checkNotNull(java.lang.Object)
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter build()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Comparable,java.lang.Comparable)
io.flutter.plugin.platform.PlatformViewsController$1: void resizePlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,java.lang.Runnable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: PlatformChannel$SystemChromeStyle(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1: java.lang.Object[] newArray(int)
android.support.v4.media.session.MediaSessionCompat$Token: int hashCode()
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.ChronoDateImpl plus(long,org.threeten.bp.temporal.TemporalUnit)
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: InboxStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean)
org.threeten.bp.chrono.HijrahDate: int getMaximumDayOfYear()
org.threeten.bp.YearMonth: org.threeten.bp.YearMonth plusMonths(long)
org.threeten.bp.OffsetDateTime: org.threeten.bp.OffsetDateTime plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.format.DateTimeFormatterBuilder: org.threeten.bp.format.DateTimeFormatterBuilder appendFraction(org.threeten.bp.temporal.TemporalField,int,int,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void rescheduleNotifications(android.content.Context)
com.google.gson.internal.bind.TypeAdapters$4: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: SingleViewPresentation$AccessibilityDelegatingFrameLayout(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.view.View)
org.threeten.bp.chrono.MinguoDate: java.lang.Object writeReplace()
org.threeten.bp.LocalDate: int hashCode()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void dispatchDraw(android.graphics.Canvas)
io.flutter.embedding.engine.dart.DartMessenger: void handleError(java.lang.Error)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onRestoreInstanceState(android.os.Bundle)
com.google.gson.internal.bind.JsonTreeWriter$1: void close()
org.threeten.bp.DayOfWeek$1: DayOfWeek$1()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.os.Handler access$000(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl)
android.support.v4.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.common.StandardMessageCodec: void writeInt(java.io.ByteArrayOutputStream,int)
org.threeten.bp.temporal.TemporalQueries$5: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.YearMonth$1: org.threeten.bp.YearMonth queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.Month: org.threeten.bp.Month[] values()
com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)
org.threeten.bp.format.DateTimeParseContext$Parsed: DateTimeParseContext$Parsed(org.threeten.bp.format.DateTimeParseContext)
org.threeten.bp.format.SimpleDateTimeTextProvider$1: SimpleDateTimeTextProvider$1()
org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity getActivity()
org.threeten.bp.chrono.JapaneseDate: org.threeten.bp.chrono.JapaneseDate plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale resolveNativeLocale(java.util.List)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)
io.flutter.plugin.platform.PlatformPlugin: void restoreSystemChromeSystemUIOverlays()
org.threeten.bp.chrono.JapaneseChronology: org.threeten.bp.chrono.ChronoZonedDateTime zonedDateTime(org.threeten.bp.Instant,org.threeten.bp.ZoneId)
android.support.v4.os.IResultReceiver$Stub: android.support.v4.os.IResultReceiver asInterface(android.os.IBinder)
androidx.versionedparcelable.VersionedParcel: int readInt(int,int)
io.flutter.plugin.common.MethodChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
com.google.gson.internal.bind.TypeAdapters$21: TypeAdapters$21()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: SafeIterableMap$IteratorWithAdditions(androidx.arch.core.internal.SafeIterableMap)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
org.threeten.bp.OffsetDateTime: org.threeten.bp.temporal.ValueRange range(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.zone.StandardZoneRules: boolean equals(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$22: java.net.URI read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.TypeAdapters$17: void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal)
com.google.gson.internal.PreJava9DateFormatProvider: java.lang.String getTimePartOfDateTimePattern(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromAppComponent()
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek[] values()
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.LocalDateTime createDateTime(org.threeten.bp.LocalDateTime,org.threeten.bp.ZoneOffset,org.threeten.bp.ZoneOffset)
org.threeten.bp.temporal.IsoFields$Field$3: java.lang.String toString()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: org.threeten.bp.chrono.ChronoLocalDateTimeImpl with(org.threeten.bp.temporal.TemporalAdjuster)
org.threeten.bp.ZonedDateTime: long getLong(org.threeten.bp.temporal.TemporalField)
org.threeten.bp.zone.StandardZoneRules: java.lang.Object findOffsetInfo(org.threeten.bp.LocalDateTime,org.threeten.bp.zone.ZoneOffsetTransition)
com.google.gson.internal.reflect.UnsafeReflectionAccessor: boolean makeAccessibleWithUnsafe(java.lang.reflect.AccessibleObject)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onNewIntent(android.content.Intent)
com.google.gson.internal.LinkedTreeMap$EntrySet: boolean contains(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: PlatformChannel$ClipboardContentFormat(java.lang.String,int,java.lang.String)
org.threeten.bp.ZonedDateTime: org.threeten.bp.chrono.ChronoZonedDateTime plus(long,org.threeten.bp.temporal.TemporalUnit)
org.threeten.bp.Instant: org.threeten.bp.Instant plusSeconds(long)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: DateTimeComponents(java.lang.String,int)
android.support.v4.media.session.PlaybackStateCompat$1: java.lang.Object createFromParcel(android.os.Parcel)
org.threeten.bp.zone.TzdbZoneRulesProvider$Version: java.lang.String access$000(org.threeten.bp.zone.TzdbZoneRulesProvider$Version)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$400(io.flutter.plugin.platform.PlatformViewsController)
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.collection.SimpleArrayMap: java.lang.String toString()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: ReflectiveTypeAdapterFactory$Adapter(com.google.gson.internal.ObjectConstructor,java.util.Map)
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: java.lang.Enum read(com.google.gson.stream.JsonReader)
org.threeten.bp.temporal.TemporalAdjusters$RelativeDayOfWeek: TemporalAdjusters$RelativeDayOfWeek(int,org.threeten.bp.DayOfWeek)
org.threeten.bp.chrono.ThaiBuddhistDate: org.threeten.bp.chrono.ThaiBuddhistDate with(org.threeten.bp.temporal.TemporalField,long)
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object[] newArray(int)
io.flutter.plugin.editing.TextInputPlugin: int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization)
androidx.core.text.BidiFormatter: boolean getStereoReset()
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getWriteMethod(java.lang.Class)
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
org.threeten.bp.chrono.ChronoLocalDate: org.threeten.bp.temporal.Temporal with(org.threeten.bp.temporal.TemporalField,long)
com.google.gson.internal.bind.TypeAdapters$5: java.lang.Number read(com.google.gson.stream.JsonReader)
android.support.v4.media.session.ParcelableVolumeInfo$1: android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel)
org.threeten.bp.LocalDate: int compareTo0(org.threeten.bp.LocalDate)
org.threeten.bp.Clock: org.threeten.bp.Clock system(org.threeten.bp.ZoneId)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag)
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateRecursively(float[],java.util.Set,boolean)
io.flutter.plugin.platform.PlatformPlugin: void destroy()
org.threeten.bp.YearMonth$1: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime plusMinutes(long)
com.google.gson.stream.JsonWriter: void beforeName()
android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder asBinder()
androidx.collection.MapCollections$EntrySet: boolean addAll(java.util.Collection)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$3800(io.flutter.view.AccessibilityBridge$SemanticsNode,float[])
org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: DateTimeFormatterBuilder$OffsetIdPrinterParser(java.lang.String,java.lang.String)
com.google.gson.stream.JsonWriter: void flush()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean sendKeyEvent(android.view.KeyEvent)
org.threeten.bp.chrono.MinguoDate: org.threeten.bp.chrono.ChronoDateImpl plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.dart.DartMessenger$Reply: DartMessenger$Reply(io.flutter.embedding.engine.FlutterJNI,int)
io.flutter.FlutterInjector$Builder: void fillDefaults()
org.threeten.bp.LocalDateTime: java.lang.Object writeReplace()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement peek()
com.google.gson.internal.bind.SqlDateTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void schedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceDisconnected(android.content.ComponentName)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
org.threeten.bp.temporal.TemporalQueries$6: java.lang.Object queryFrom(org.threeten.bp.temporal.TemporalAccessor)
org.threeten.bp.temporal.IsoFields$Field: int access$600(int)
com.google.gson.internal.bind.DateTypeAdapter: DateTypeAdapter()
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
org.threeten.bp.OffsetDateTime: long getLong(org.threeten.bp.temporal.TemporalField)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setName(java.lang.CharSequence)
org.threeten.bp.Period: int hashCode()
org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime now(org.threeten.bp.Clock)
org.threeten.bp.Clock$SystemClock: Clock$SystemClock(org.threeten.bp.ZoneId)
io.flutter.embedding.android.FlutterSplashView: boolean hasSplashCompleted()
io.flutter.plugin.mouse.MouseCursorPlugin: MouseCursorPlugin(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
org.threeten.bp.chrono.HijrahEra: boolean isSupported(org.threeten.bp.temporal.TemporalField)
androidx.lifecycle.SingleGeneratedAdapterObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
org.threeten.bp.Instant: java.lang.Object query(org.threeten.bp.temporal.TemporalQuery)
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] getAdjustedCycle(int)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: SharedPreferencesPlugin()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onBackPressed()
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onEvent(java.lang.String,android.os.Bundle)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: int hashCode()
io.flutter.embedding.engine.dart.DartExecutor: void notifyLowMemoryWarning()
org.threeten.bp.ZoneOffset: org.threeten.bp.zone.ZoneRules getRules()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
com.google.gson.internal.bind.TypeAdapters$4: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.Gson: com.google.gson.TypeAdapter atomicLongAdapter(com.google.gson.TypeAdapter)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter beginObject()
io.flutter.plugin.editing.FlutterTextUtils: boolean isKeycapBase(int)
org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: int parsePrefixedOffset(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int,int)
android.support.v4.media.MediaDescriptionCompat$1: MediaDescriptionCompat$1()
org.threeten.bp.Duration: org.threeten.bp.Duration ofSeconds(long)
com.google.gson.internal.PreJava9DateFormatProvider: java.lang.String getDatePartOfDateTimePattern(int)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime plus(long,org.threeten.bp.temporal.TemporalUnit)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
androidx.media.app.NotificationCompat$MediaStyle: android.widget.RemoteViews generateMediaActionButton(androidx.core.app.NotificationCompat$Action)
androidx.core.app.BundleCompat$BundleCompatBaseImpl: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
